Searching between v1.6.1 and v1.7.0
Keywords: slow, fast, time, perf(ormance), optim(ize), regression
Keywords: slow fast time perf optim regression speed
For keyword slow:
[33mcommit 9f9d4f8dc9888d3b4d6c793d031f3ce5d407bd65[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Dec 1 15:20:41 2017 -0800

    vp9-svc: Allow for nonzero motion on spatial reference.
    
    For nonrd pickmode on a given spatial layer, the spatial
    (golden) reference was always only using zeromv for prediction.
    In this patch if the downsampling filter used for generating
    the lower spatial layer is an averaging filter (nonzero phase),
    we allow for subpel motion on the spatial (golden) reference to
    compensate for the shift. This is done by forcing the testing of
    nonzero motion mode to compensate for spatial downsampling shift.
    
    Improvement for cases where the downsampling is averaging filter.
    In the current code this is only done for generating
    resolutions <= QVGA.
    
    Improvement for avgPSNR/SSIM on RTC set for speed 7: ~1.2%.
    Gain is larger (~2-3%) for VGA clips with 2 spatial layers.
    ~1% speed [1;31mslow[mdown for 3 layer SVC on mac.
    
    Change-Id: I9ec4fa20a38947934fc650594596c25280c3b289

[33mcommit 98dbf31c877c1388c5776aba249f879cda3b2969[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 3 17:14:24 2017 -0700

    Enable arf usage for speed >= 6, 1 pass vbr.
    
    For speed 6 on ytlive set:
    On average, speed [1;31mslow[mdown ~5%, quality gain ~2%.
    
    Change-Id: Ia18237cc1d52c54d7e2cb3c71f571cf37ef61b44

[33mcommit c8678fb7f38024345462cfab3b34d649548ff445[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 3 10:55:55 2017 -0700

    Use adapt_partition for ARF in 1 pass.
    
    For speed 6 real-time mode: use adapt_partition
    on ARF frame instead of REFERENCE_PARTITION (which is [1;31mslow[mer).
    This requires enabling compute_source_sad_onepass for no-show_frames.
    
    Speedup of ~3-5% on some clips that heavily use ARF,
    small loss (~0.2%) in quality on ytlive set.
    
    Change-Id: Ib50acc97df06458244a6ac55d2bd882c30012536

[33mcommit baf658ec4cb9c6f32a7f15d76b104396fe851c69[m
Author: James Zern <jzern@google.com>
Date:   Thu Sep 14 13:06:40 2017 -0700

    Revert "Specialize 4 to 3 scaling in vp9_scale_and_extend_frame_c()"
    
    This reverts commit afee58f2c4159172f5340f2c7d3e8041cfa0eb91.
    
    This causes ~8x [1;31mslow[mdown in 4:3 in the C-code
    
    Change-Id: I60a7ead12dc4ec1548b1b12cfe4b0be42ef04e0e

[33mcommit 7c27872164941cecd17e685a0a2c537b996509ec[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Aug 22 15:43:35 2017 -0700

    quantize avx: copy implementation to intrinsics
    
    Adds an early exit based on ptest. Slightly [1;31mslow[mer than ssse3 in the
    full case because of the extra check, but potentially faster if lots of
    rows can be skipped.
    
    Very close in speed to the assembly.
    
    Can run in 32 bit, unlike the assembly. Allows reworking the function
    prototype to use structs.
    
    Change-Id: If80e2b9ba059370a4cad3c973196e82a97b4330e

[33mcommit b814e2d898a6d10019cf1419569ca221214641f5[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 16 13:34:49 2017 +0100

    Prevent parameters that can cause invalid ARF groups.
    
    Having a very low "lag_in_frames" value could cause the encoder to create
    incorrect / corrupt ARF groups including displayed frames that update the
    ARF buffer and false overlay frames that are coded at low rate but are not
    actually overlays of a real ARF frame.
    
    This is linked to a reported unit test "[1;31mslow[m down" where the chosen parameters
    (lag of 3 frames) gave rise to such "broken" ARF group(s).
    
    See also BUG=webm:1454
    
    Change-Id: If52d0236243ed5552537d1ea9ed3fed8c867232c

[33mcommit 0472382dbef39c98c2e3a7f322d053545160745d[m
Merge: 6b9c691da e15be3025
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 16 13:01:38 2017 +0000

    Merge "Fix for encoder [1;31mslow[mdown (for speeds >= 3)"

[33mcommit e15be3025b5b77efead67f5037d4c152450619be[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Aug 14 16:11:34 2017 +0100

    Fix for encoder [1;31mslow[mdown (for speeds >= 3)
    
    Some clips in nightly unit test exhibiting significant encoder [1;31mslow[mdown which
    appears to bisect to Change-Id: I692311a709ccdb6003e705103de9d05b59bf840a.
    
    The above change allowed for emergency iterations of the recode loop and
    adjustment of the Q range if there is a large rate miss.
    
    This patch disables the above adaptation for cases of cpu_speed >= 3 or more
    specifically where cpi->sf.recode_loop >= ALLOW_RECODE_KFARFGF.
    
    For speeds >= 3 the code does not currently run a dummy bit pack operation
    inside the recode loop. Without this dummy pack operation there is no up to
    date estimate of the current frame's size to use as a basis for assessing the
    requirement for a recode. In practice it was using the previous frames size (or 0
    for the first frame) which could cause odd behavior.
    
    If we require the emergency rate correction added in  Change-Id: I6923.. for
    the higher speed settings it will be necessary to enable the dummy pack
    which will in turn hurt encode speed.
    
    BUG=webm:1454
    
    Change-Id: I4fb3c6062ca9508325a6f31582f8e80f1a9b126f

[33mcommit 064fc570ff8399536563e3846500fd99b273b034[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 28 10:29:12 2017 -0700

    vp9: Speed feature to adapt partition based on source_sad.
    
    Move the source_sad feature to speed 6 (from speed 7), and
    add speed feature to switch from the variance-based partition
    to reference_partition (which uses nonrd-pickmode for bsize selection)
    if source_sad is high.
    
    Currently used only for speed 6 for resoln <= 360p.
    About 4-5% improvement on 360p in RTC set.
    Some speed [1;31mslow[mdown, but still ~30% faster than speed 5.
    
    Change-Id: Ib0330ee5fe9fdd2608aed91359a2a339d967491c

[33mcommit 2b43a1ee1884f5de40dc5fab158d000da5b8654d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Jun 15 16:06:53 2017 -0700

    Clean 32x32 full idct sse2 and ssse3 code
    
    vpx_idct32x32_1024_add_ssse3() is actually a sse2 function and faster
    than vpx_idct32x32_1024_add_sse2(). Replace the [1;31mslow[m one. All are
    code relocations, no new code.
    
    Change-Id: I5dac0e98cc411a4ce05660406921118986638d19

[33mcommit ff7fb4b28046094be7c467dc9d8246ad715cd30f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jun 19 13:56:04 2017 -0700

    vp9: Speed >= 8: Adjust resolution threshold for subpel.
    
    Get some quality gain on RTC metrics (~7%), with
    ~5-8% speed [1;31mslow[mdown.
    
    Change-Id: I0d02942a77074424ee0326b6e110ddff09f2df5e

[33mcommit bca4564683a35c795973ce2a318cc4f1391f9bbb[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Apr 19 17:00:08 2017 -0700

    Make allow_exhaustive_searches feature no longer adaptive
    
    A previous patch turned on allow_exhaustive_searches feature only for
    FC_GRAPHICS_ANIMATION content. This patch further modified the feature
    by removing the exhaustive search limit, and made it no longer adaptive.
    As a result, the 2 counts that recorded the number of motion searches
    were removed, which helped achieve the determinism in the row based
    multi-threading encoding. Tests showed that this patch didn't cause
    the encoder much [1;31mslow[mer.
    
    Used exhaustive_searches_thresh for this speed feature, and removed
    allow_exhaustive_searches. Also, refactored the speed feature code
    to follow the general speed feature setting style.
    
    Change-Id: Ib96b182c4c8dfff4c1ab91d2497cc42bb9e5a4aa

[33mcommit 5f39262dccb82a46cbce7a51c255432d22ef4049[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 14 10:16:44 2017 -0700

    vp9: Adjust speed features for speed 8 at low resoln.
    
    For low resolutions (<= CIF): use quarter-pixel and simple_block_yrd.
    
    ~5% gain on RTC_derf.
    ~6-7% [1;31mslow[mdown on ARM.
    
    Change-Id: I4439ebd1116b9decac04786503f978840b68a60c

[33mcommit 20c2892693b3be46cb53b8c9262d41d7a61999aa[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Mar 14 13:45:20 2017 -0700

    vp9: Enable adaptive_rd_threshold for row mt for realtime speed 8.
    
    Change it to row based array to avoid the [1;31mslow[m down cause by sync.
    row-mt on, speed 8, 2 threads: ~4% speedup for VGA on ARM benefited
    from adaptive_rd_threshold.
    
    Change-Id: I887e65a53af20a6c4f48d293daaee09dab3512cf

[33mcommit 904b957ae965bd3d67f15a75cd9db7954f810d33[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Feb 16 17:57:44 2017 -0800

    consolidate block_error functions
    
    vp9_highbd_block_error_8bit_c was a very simple wrapper around
    vp9_block_error_c. The SSE2 implemention was practically identical to
    the non-HBD one. It was missing some minor improvements which only
    went into the original version.
    
    In quick speed tests, the AVX implementation showed minimal
    improvement over SSE2 when it does not detect overflow. However, when
    overflow is detected the function is run a second time. The
    OperationCheck test seems to trigger this case and reverses any
    speed benefits by running ~60% [1;31mslow[mer. AVX2 on the other hand is
    always 30-40% faster.
    
    Change-Id: I9fcb9afbcb560f234c7ae1b13ddb69eca3988ba1

[33mcommit 4e1ba35458bf933113aa1ec74ca306c1fd47e9af[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 20 20:15:40 2017 -0800

    vp9: Fix for non-rd pickmode for high-bitdepth build.
    
    Use the simple block_yrd under certain conditions.
    The optimization code is completed but the speed is still [1;31mslow[mer
    (~6% on 720p) than the low-bitdepth build.
    
    For now, use the more complex block_yrd under certain conditions
    (always use it for speed <= 5, otherwise use it on key frames and for
    bsize >= 32x32).
    
    This gives about ~2-3% gain in quality for speed 7 on RTC set
    (over high bitdepth build), with about the same encoder fps as the
    low bitdepth build.
    
    Change-Id: Ibe92a1945d0bd635f880befb4c815727df62d754

[33mcommit 1f8e8e5bf1eff47c22bcdfac5fe045d1d33ef01b[m
Author: Yi Luo <luoyi@google.com>
Date:   Fri Feb 17 10:59:46 2017 -0800

    Fix idct8x8 SSSE3 SingleExtremeCoeff unit tests
    
    - In SSSE3 optimization, 16-bit addition and subtraction would
      overflow when input coefficient is 16-bit signed extreme values.
    - Function-level speed becomes [1;31mslow[mer (unit ms):
      idct8x8_64: 284 -> 294
      idct8x8_12: 145 -> 158.
    
    BUG=webm:1332
    
    Change-Id: I1e4bf9d30a6d4112b8cac5823729565bf145e40b

[33mcommit 270fadc135b2005a6f23a87ab0f27ddb93cdc5e8[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Jan 23 13:30:37 2017 -0800

    PartialIDctTest: reduce number of RunQuantCheck iterations
    
    This currently runs 1000 * 1000 = one *million* times which is quite
    unnecessary. It's one of the [1;31mslow[mest items in Jenkins and takes over an
    hour for each of the larger transforms.
    
    Change-Id: I01653b5e610683e1a2d778ec60cf5065562ab8db
For keyword fast:
[33mcommit a40fa1f95d3c49424f6366cd91771f801cbac6c3[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Dec 7 17:24:41 2017 -0800

    vp9: Reset rc flags on some configuration changes.
    
    For large dynamic changes in target avg_frame_bandwidth, or
    a change in resolution, via the update in change_config()),
    reset the under/overshoot flags (rc_1_frame, rc_2_frame)
    to prevent constraining the QP for the first few frames
    following the change.
    
    For SVC use the spatial stream avg_frame_bandwidth in
    reset condition.
    
    For the avg_frame_bandwidth condition, use fairly large
    threshold (~50%) for now in reset.
    
    This allows for better/[1;31mfast[mer QP response if, for example,
    application dynamically changes bitrate by large amount.
    
    Change-Id: Ib6e3761732d956949d79c9247e50dba744a535c0

[33mcommit 607e45f42027cde9cab7a017559ea02fd397fffd[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Nov 15 16:39:54 2017 +0000

    Add clause to alt ref group breakout.
    
    Add a clause to the breakout test for alt ref groups that
    examines the size of the accumulated second reference
    frame error compared to the cost of intra coding.
    
    This clause causes a reduction in the average group length for many
    clips. Alongside the change to the group length the minimum
    boost is increased.
    
    On balance the results are positive for psnr and psnr-hvs
    but is negative for ssim/[1;31mfast[m ssim for the smaller image formats.
    
    Strong gains on some harder clips (eg ducks take off (midres) ~20%,
    husky (lowres) 6-17%. Most of the negative cases are lower motion
    clips. Subsequent patch hopefully will help with those.
    
    Change-Id: Ic1f5dbb9153d5089e58b1540470e799f91a65dc4

[33mcommit 55c126a5d72900816aded997e6ebc9098283a5c2[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Oct 18 17:12:57 2017 -0700

    vpx: [x86] add vpx_hadamard_16x16_avx2()
    
    This version is ~1.91x [1;31mfast[mer than the sse2 version.  When
    highbitdepth is enabled, it is ~1.74x.
    
    Change-Id: I2b0e92ede9f55c6259ca07bf1f8c8a5d0d0955bd

[33mcommit 8842ee0b0d7975f72067b56ab66a7acbe22a65c7[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Oct 11 10:12:20 2017 +0100

    Corpus VBR tweak for undershoot.
    
    In cases of strong undershoot adjust Q range down [1;31mfast[mer.
    
    Change-Id: I84982beceb3c9b6dc50e52e4a6e891c7dd395d03

[33mcommit 288890cd433e3d8fdb9c66a01d65d6cd163f3007[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Oct 11 17:13:39 2017 -0700

    vp9: use nonrd pick_intra for small blocks on keyframes.
    
    Keyframe encoding is more than 2x [1;31mfast[mer.
    Disabled on Speed 8.
    
    Change-Id: I2157318b6ac8253fa5398322c72d98cd7fa9b2b6

[33mcommit e8ed2bb76258f5d0d2def256b43ed6938b6d6a45[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Mon Sep 11 18:07:25 2017 +0800

    vp8: [loongson] optimize quantize with mmi
    
    1. vp8_[1;31mfast[m_quantize_b_mmi
    2. vp8_regular_quantize_b_mmi
    
    Change-Id: Ic6e21593075f92c1004acd67184602d2aa5d5646

[33mcommit 2c560c3c22d097981e842499551f0146145567b1[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Sep 20 10:58:39 2017 -0700

    Specialize 4 to 3 frame scaling in C
    
    Scale 3x3 block instead of 16x16 block in each loop. Disabled by
    default.
    
    Benefits:
    1. Reduced number of different phase_scaler from 16 to 3.
       Optimization code will be smaller and [1;31mfast[mer.
    2. Maximum phase_scaler drifting will be reduced from 5/16 to 1/24.
       (The drifting is 1/(3*16) in each step.)
    
    BUG=webm:1419
    
    Change-Id: I59a1f7496d89a1b090498c935d30cfcf1d0c282b

[33mcommit afee58f2c4159172f5340f2c7d3e8041cfa0eb91[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Sep 12 11:37:04 2017 -0700

    Specialize 4 to 3 scaling in vp9_scale_and_extend_frame_c()
    
    Scale 3x3 block instead of 16x16 block in each loop.
    
    Benefits:
    1. Reduced number of different phase_scaler from 16 to 3. Optimization code
       will be smaller and [1;31mfast[mer.
    2. The maximum phase_scaler drifting will be reduced from 5/16 to 1/24.
       (The drifting is 1/(3*16) in each step.)
    
    BUG=webm:1419
    
    Change-Id: Ibb9242a629ddb03e1ff93b859bece738255e698c

[33mcommit fb40b5d7a76978e6fcedf5997fd7a45571aa6b0d[m
Author: James Zern <jzern@google.com>
Date:   Fri Sep 8 19:20:07 2017 -0700

    intrapred: sync highbd_d63_predictor w/d63_
    
    8/16/32: ~6%/~18%/~33% [1;31mfast[mer
    
    previously:
    7012ba639 vp9_reconintra: simplify d63_predictor
    
    BUG=webm:1411
    
    Change-Id: Ie775f3a4f7fd74df44754e65686d826a51c2cdc2

[33mcommit 5c95fd921e0d6204f132021e8d86bde8596f107d[m
Author: James Zern <jzern@google.com>
Date:   Fri Sep 8 18:52:01 2017 -0700

    intrapred: sync highbd_d45_predictor w/d45_
    
    8/16/32:: ~19%/~54%/~75.5% [1;31mfast[mer
    
    previously:
    acc481eaa vp9_reconintra: simplify d45_predictor
    
    BUG=webm:1411
    
    Change-Id: Ie8340b0c5070ae640f124733f025e4e749b660d8

[33mcommit a0de2692fc5ee69825b35fa6158f116448849e68[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Aug 21 16:39:56 2017 -0700

    vp9: Speed 6 adapt_partition for live/vbr usage.
    
    Enable adapt_partition for vbr mode for speed 6.
    This allows the usage of the pickmode-based partition
    (used in speed 5), but only selectively for superblocks
    with high source sad, otherwise the [1;31mfast[mer variance based
    partition scheme is used.
    
    For speed 6 on ytlive set: avgPSNR/SSIM metrics up by ~0.6%,
    several clips up by ~1.5%. Small/negligible decrease in speed.
    
    Change-Id: I12f3efef6b3e059391de330fdbe5a44c2587f1f8

[33mcommit 7c27872164941cecd17e685a0a2c537b996509ec[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Aug 22 15:43:35 2017 -0700

    quantize avx: copy implementation to intrinsics
    
    Adds an early exit based on ptest. Slightly slower than ssse3 in the
    full case because of the extra check, but potentially [1;31mfast[mer if lots of
    rows can be skipped.
    
    Very close in speed to the assembly.
    
    Can run in 32 bit, unlike the assembly. Allows reworking the function
    prototype to use structs.
    
    Change-Id: If80e2b9ba059370a4cad3c973196e82a97b4330e

[33mcommit 2a5aa98a35d295bbfd17d107630be84a5ccc1077[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Aug 21 11:23:49 2017 -0700

    quantize neon: round dqcoeff towards zero
    
    Add 1 if negative to get dqcoeff to round towards zero.
    
    10-15% [1;31mfast[mer than converting to positive before shifting.
    
    Change-Id: I01a62fd0c9bca786b6885b318bd447bb9229903d

[33mcommit e83d99d7b8e009fd847ff91319f57abd5f7f96eb[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Aug 10 15:02:22 2017 -0700

    quantize fp: neon implementation
    
    About 4x [1;31mfast[mer when values are below the dequant threshold and 10x
    [1;31mfast[mer if everything needs to be calculated.
    
    Both numbers would improve if the division for dqcoeff could be
    simplified.
    
    BUG=webm:1426
    
    Change-Id: I8da67c1f3fcb4abed8751990c1afe00bc841f4b2

[33mcommit 5009302bce7655054882a1bb7d2e0ad3010e712e[m
Merge: ff184e482 76d77aa01
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Aug 15 14:57:22 2017 +0000

    Merge "Enable emergency [1;31mfast[m Q adaptation for VBR test case."

[33mcommit db8fa86a6c217002511d54f9af05824d486333db[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Aug 8 12:01:46 2017 +0100

    Patch relating to Issue 1456.
    
    Testing of 4k videos encoded with a fixed arbitrary chunking interval
    uncovered a bug where by if a chunk ends 1 frame before a real scene cut,
    the next chunk may be encoded with two consecutive key frames at the start
    with the first being assigned 0 bits.
    
    This fix insures that where there is a key frame group of length 1 it is
    at least assigned 1 frames worth of bits not 0.
    
    See also patch Change-Id: I692311a709ccdb6003e705103de9d05b59bf840a
    which by virtue of allowing [1;31mfast[m adaptation  of Q made this bug more visible.
    
    BUG=webm:1456
    
    Change-Id: Ic9e016cb66d489b829412052273238975dc6f6ab

[33mcommit 93166c5e519ecbb8477e80abb4acb1420e5cc2c4[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Aug 8 14:05:16 2017 -0700

    neon: vpx_quantize_b_32x32
    
    With skip block the neon is about twice as [1;31mfast[m as C.
    
    The neon has no shortcut for coeff < zbin so it always takes the
    same amount of time. Even if the C can take the shortcut, it is over
    twice as [1;31mfast[m in neon. If it can't, that gap increases to over 10x.
    
    BUG=webm:1426
    
    Change-Id: I400722146c1b5a5f6289f67d85fd642463d2bfc6

[33mcommit d52cb5972930b68b0d0ce15b45d1a788dcd78322[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Aug 3 10:22:07 2017 -0700

    quantize: copy ssse3 optimizations to intrinsics
    
    Fairly minor differences from sse2. pabsw and psignw are the big gains.
    Also re-uses some values in eob calculation to avoid an extra pcmp.
    
    Fixes test failures in HBD and OS X builds.
    
    Allows using it in 32bit builds, where it is about 40% [1;31mfast[mer than sse2.
    
    Substantially [1;31mfast[mer than the assembly for skip_block. 10-20% [1;31mfast[mer the
    rest of the time.
    
    Change-Id: If783bb3567e561e47667e10133b9c84414a334e2

[33mcommit 76d77aa013de48ebdaa3b9e58e2756188e39982a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Aug 1 17:06:29 2017 +0100

    Enable emergency [1;31mfast[m Q adaptation for VBR test case.
    
    Enable [1;31mfast[m adaptation of Q when there is a large overshoot
    for the  #ifdef AGGRESSIVE_VBR test case.
    
    AGGRESSIVE_VBR  is not currently enabled by default.
    
    Change-Id: I7240bb6589795964b6b0b66df4468e4f21504e0f

[33mcommit bfd0f41f9b8282a458e276fbccf07c8e9ae0870b[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Aug 2 15:47:09 2017 -0700

    Force the bit exactness in the first pass
    
    Originally, for the purpose of keeping a [1;31mfast[m first pass, the first-pass
    stats between row_mt_mode = 0 and row_mt_mode = 1 are not bit exact, but
    that difference is very small that doesn't cause a mismatch between the
    final bitstreams. However, if the encoder changes, this minor difference
    may cause a mismatch. Thus, this patch always forces the first pass to
    be bit exact.
    
    BUG=webm:1453
    
    Change-Id: I2b67cf529dee81f660f9d9e7fe9a60ea3c7b12b8

[33mcommit 2d6b5df657ded665594a7c1d2bdaa092610d1c4d[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jul 27 13:25:38 2017 -0700

    neon: vpx_quantize_b
    
    With skip block or coeff < zbin it is about twice as [1;31mfast[m as C.
    
    If most coeff values are > zbin it is about 10-15x as [1;31mfast[m as C.
    
    BUG=webm:1426
    
    Change-Id: I5d3c007b014a372d5ef0882b39bb48983b4131c7

[33mcommit 064fc570ff8399536563e3846500fd99b273b034[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 28 10:29:12 2017 -0700

    vp9: Speed feature to adapt partition based on source_sad.
    
    Move the source_sad feature to speed 6 (from speed 7), and
    add speed feature to switch from the variance-based partition
    to reference_partition (which uses nonrd-pickmode for bsize selection)
    if source_sad is high.
    
    Currently used only for speed 6 for resoln <= 360p.
    About 4-5% improvement on 360p in RTC set.
    Some speed slowdown, but still ~30% [1;31mfast[mer than speed 5.
    
    Change-Id: Ib0330ee5fe9fdd2608aed91359a2a339d967491c

[33mcommit 75b00592c792b211bf0284cb4d941b80e8a89dd0[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jun 29 20:39:02 2017 -0700

    fdct neon: 32x32_rd
    
    About 40% [1;31mfast[mer than the non-rd version.
    
    BUG=webm:1424
    
    Change-Id: Ia99d14eb9532302eeaab8cd3e503395b0374b5a2

[33mcommit 88a302e7430298de028c69408f151e3583b29021[m
Merge: 794a5ad71 a377f9908
Author: James Zern <jzern@google.com>
Date:   Fri Jun 23 05:44:24 2017 +0000

    Merge changes from topic 'missing-proto'
    
    * changes:
      onyxd_int.h: add missing prototypes
      onyxd.h: add vp8dx_references_buffer prototype
      vp[89],vpx_dsp: add missing includes
      vp8,encodeframe.h: correct prototypes
      vp8: add temporal_filter.h
      add picklpf.h
      add ethreading.h
      vp8,bitstream.h: add missing prototypes
      vp8: remove vp8_[1;31mfast[m_quantize_b_mmx
      vp8,loopfilter_filters: make some functions static
      vp9_ratectrl: make adjust_gf_boost_lag_one_pass_vbr static
      vp9_encodeframe: make scale_part_thresh_sumdiff static
      vp9_alt_ref_aq: correct vp9_alt_ref_aq_create proto
      tiny_ssim: make some functions static

[33mcommit e67660cf374d4301ccb044199e900afaba64baba[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Jun 16 13:14:01 2017 -0700

    fdct32x32 neon implementation
    
    Almost 3x [1;31mfast[mer in constrained loop testing. Over 10x [1;31mfast[mer in HBD
    builds.
    
    BUG=webm:1424
    
    Change-Id: I2b7f8453e1d4ada63cde729d8115d684c4a71ff9

[33mcommit 1d86383512f8cf1551fc81048164885f1ef6f089[m
Author: James Zern <jzern@google.com>
Date:   Fri Jun 16 01:33:57 2017 -0700

    vp8: remove vp8_[1;31mfast[m_quantize_b_mmx
    
    and vp8_[1;31mfast[m_quantize_b_impl_mmx; this was never enabled in rtcd
    an sse2 version exists so there isn't much reason to keep a mmx
    implementation around.
    
    Change-Id: I8b3ee7f46ba194ffa0d0a6225a0f299f2a4dea90

[33mcommit 2b43a1ee1884f5de40dc5fab158d000da5b8654d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Jun 15 16:06:53 2017 -0700

    Clean 32x32 full idct sse2 and ssse3 code
    
    vpx_idct32x32_1024_add_ssse3() is actually a sse2 function and [1;31mfast[mer
    than vpx_idct32x32_1024_add_sse2(). Replace the slow one. All are
    code relocations, no new code.
    
    Change-Id: I5dac0e98cc411a4ce05660406921118986638d19

[33mcommit a4ea7e131b139c5cb68e50f9d2518da53695a810[m
Author: Urvang Joshi <urvang@google.com>
Date:   Thu Jun 8 14:51:01 2017 -0700

    VP9: Add greedy version of av1_optimize_b().
    
    This was ported from the greedy version in AV1, written by Dake He
    (dkhe@google.com).
    See:
    https://aomedia.googlesource.com/aom/+/master/av1/encoder/encodemb.c#137
    
    Greedy version is disabled by default, but can be picked by setting
    USE_GREEDY_OPTIMIZE_B to 1.
    To be enabled by default later.
    
    This is both [1;31mfast[mer and better in terms of compression.
    
    Compression Improvement:
    ------------------------
    lowres: -0.119
    midres: -0.064
    hdres:  -0.405
    
    Speed Improvement:
    ------------------
    (Based on encode time of 3 videos of different difficulties at
    3 different target bitrates)
    With --cpu-used=0: 0.38% to 5.55% [1;31mfast[mer
    With --cpu-used=1: 0.24% to 2.79% [1;31mfast[mer
    With --cpu-used=2: 0.29% to 1.46% [1;31mfast[mer
    
    Change-Id: Ia7a23b3b244ad8eb253ac9e43cd03c5e021d2635

[33mcommit 105503b8392f0d42cfc789174e67c59e80563a83[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri May 12 11:05:03 2017 -0700

    neon fdct: 4x4 implementation
    
    Approximately twice as [1;31mfast[m as C implementation.
    
    BUG=webm:1424
    
    Change-Id: I3c0307fb08ddc23df42545cd089a78e2ed5c9d3f

[33mcommit 9a7625652c94ab2d699cb1066ba6de24ceea3cfa[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed May 10 16:07:13 2017 +0100

    Tuning of factor used to calculate Q range in two pass.
    
    A more detailed explanation of the experimentation
    leading to this change can be found in:-
    
    https://docs.google.com/a/google.com/document/d/13lsYhxgPyxUHvEess6wg9nikaonIZKY9Ak_Lpafv5Mo/edit?usp=sharing
    
    This change gives gains across all our standard test sets for
    overall psnr, ssim, [1;31mfast[m ssim and psnr-HVS.
    
    Values expressed as % reduction in bitrate.
    
    Low res set     -0.257, -0.192, -0.173, -0.101
    Mid res set     -0.233, -0.336, -0.367, -0.139
    High res set    -0.999, -1.039, -1.111, -0.567
    NetFlix 2K set -0.734, -0.174, -0.389, -0.820
    Netflix 4K set  -0.814, -0.485, -0.796, -0.839
    
    Change-Id: Ie981fb3c895c9dfcfc8682640d201a86375db5c8

[33mcommit ecd1eb216224d3eee9ec060557e9677827dff1db[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon May 8 15:41:24 2017 -0700

    Update 4x4 idct sse2 functions
    
    It's a bit [1;31mfast[mer to call idct4_sse2() in vpx_idct4x4_16_add_sse2()
    
    Change-Id: I1513be7a895cd2fc190f4a8297c240b17de0f876

[33mcommit f7d1486f4890431a49802817818a5ae0a4c3c8dc[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 1 14:10:54 2017 -0700

    neon variance: process 16 values at a time
    
    Read in a Q register. Works on blocks of 16 and larger.
    
    Improvement of about 20% for 64x64. The smaller blocks are [1;31mfast[mer, but
    don't have quite the same level of improvement. 16x32 is only about 5%
    
    BUG=webm:1422
    
    Change-Id: Ie11a877c7b839e66690a48117a46657b2ac82d4b

[33mcommit 069eedb3a03ea42dfd79991b6fece4c283c648d8[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Apr 25 15:29:43 2017 -0700

    vp9: Neon optimization for denoiser. Add unit tests.
    
    Denoiser on Neon is 5x [1;31mfast[mer than C code.
    
    BUG=webm:1420
    
    Change-Id: I805ab64f809ff2137354116be6213e7ec29c1dcb

[33mcommit cb9133c72f06fcc595c8117078c9689258dd0cf6[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 1 09:10:06 2017 -0700

    neon variance: add small missing sizes
    
    Some of the mixed sizes were missing. They can be implemented trivially
    using the existing helper function.
    
    When comparing the previous 16x8 and 8x16 implementations, the helper
    function is about 10% [1;31mfast[mer than the 16x8 version. The 8x16 is very
    close, but the existing version appears to be [1;31mfast[mer.
    
    BUG=webm:1422
    
    Change-Id: Ib0e856083c1893e1bd399373c5fbcd6271a7f004

[33mcommit 914b160fb594b7c6d183aba6b40258b66d0ce054[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Tue Apr 18 22:55:53 2017 +0000

    ppc: h predictor 8x8
    
    Slightly [1;31mfast[mer with the current compiler.
    
    Change-Id: Iae225fac08395eb430c97a2abec69c60f5cf5c47

[33mcommit 0b9be9320518dfe08057ad0e091e604d6d7d67a3[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Wed Apr 12 01:18:35 2017 +0200

    ppc: d63 predictor 8x8
    
    10x [1;31mfast[mer.
    
    Change-Id: I7cedbf4df2ce7df5b6f1108b11815d088fdb9ba8

[33mcommit ee9325b0bd24ed0c9ed11f85a6d5aa1518b5e9c0[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 15:07:03 2017 +0000

    ppc: tm predictor 4x4
    
    Slightly [1;31mfast[mer.
    
    Change-Id: I0ca43f309b3d9b50435d69bd5be64b53a99bd191

[33mcommit 2904eb580018afd3d8ed433e759130c0c66977f9[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 13:44:41 2017 +0000

    ppc: h predictor 4x4
    
    2x [1;31mfast[mer.
    
    Change-Id: I0583dec353299c6797401b646099f18db4e0420d

[33mcommit 58245d7050d7ea4433f8c1965d229d623f0dd4b7[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 13:05:09 2017 +0000

    ppc: dc predictor 8x8
    
    Slightly [1;31mfast[mer, the other dc predictors cannot be [1;31mfast[mer since
    the computation speedup is overwhelmed by the time spent reading
    dst to write just the 8x8 part.
    
    Change-Id: I94a0b50500adf8b7b6bb919dbf5c7adf5b9fba66

[33mcommit 6b4a65e8b149e1eaa246ebf80b0887f388c9d378[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 11:07:22 2017 +0000

    ppc: d45 predictor 8x8
    
    11x [1;31mfast[mer.
    
    Change-Id: I5b8f39213ee1f5260724fc254e3fb5c462435798

[33mcommit 92e33c7b31f4952f17c98810418d6deee4e34d2e[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 00:09:56 2017 +0000

    ppc: d63 predictor 32x32
    
    About 10x [1;31mfast[mer.
    
    Change-Id: If7d0645f75c5d7deb9751edd0bf47e2f9068e9e7

[33mcommit a5469a00a8d5754d4ddcdfe7d5283b87436c1290[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 00:09:56 2017 +0000

    ppc: d63 predictor 16x16
    
    About 18x [1;31mfast[mer.
    
    Change-Id: Id043bf76c011e03e992085bb5e20f330d3e98cd4

[33mcommit cc868da5266f164eff34d19e7431abd8056e6ea4[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 22:41:41 2017 +0000

    ppc: d45 predictor 32x32
    
    About 12x [1;31mfast[mer.
    
    Change-Id: I22c150256aefb4941861ab1f6c17d554fb694bed

[33mcommit 7a7dc9e62448d999eaf46f9564ffd8ec5f2fee6b[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 22:41:41 2017 +0000

    ppc: d45 predictor 16x16
    
    About 16x [1;31mfast[mer.
    
    Change-Id: Ie5469fb32d5fd11bb6cb06318cea475d8a5b00b9

[33mcommit c08baa29002d74555e9de503bb1fc6f1de22bf18[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 02:55:33 2017 +0000

    ppc: dc predictor 32x32
    
    10x and 5x [1;31mfast[mer.
    
    Change-Id: I7913c58c768334d818f541a5e219f1035791eeaf

[33mcommit 22ca468c7c55f76e71c29d0ebe8d9e01ba210fc0[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 02:55:33 2017 +0000

    ppc: dc top and left predictor 32x32
    
    6x [1;31mfast[mer.
    
    Change-Id: I717995b4056e5579c68191d11b495372971fe1ae

[33mcommit ad9dea1f6d1cea9c704c4f936742288ac5c0c2c6[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 02:55:33 2017 +0000

    ppc: dc top and left predictor 16x16
    
    13x [1;31mfast[mer.
    
    Change-Id: I1771ac39fda599153f933cb3f0506c9f97a6cbe6

[33mcommit d68d37872c82ab81da384a65ce17b684d4e2cc24[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 00:39:24 2017 +0000

    ppc: dc_128 predictor 32x32
    
    6x [1;31mfast[mer.
    
    Change-Id: I1da8f51b4262871cb98f0aa03ccda41b0ac2b08b

[33mcommit f9d20e6df21296899143d832f1a8d7ed7985e395[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sat Apr 8 00:26:54 2017 +0000

    ppc: dc_128 predictor 16x16
    
    20x [1;31mfast[mer.
    
    Change-Id: I05f0deb2d38ae7966eae6b71fbc0aa51880e5709

[33mcommit 0d9417de4a377a76deffac47072e9ed5604d8fda[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Fri Apr 7 14:49:00 2017 +0000

    ppc: tm predictor 32x32
    
    About 8x [1;31mfast[mer.
    
    Change-Id: I9bad827ccbdf47ec95406e961c74ac2ff45f80cf

[33mcommit 479443a57082fe7998fda6dbfebb5965dd6998ca[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Fri Apr 7 14:49:00 2017 +0000

    ppc: tm predictor 16x16
    
    About 10x [1;31mfast[mer.
    
    Change-Id: I1f5a3752d346459df3b45f92963208bf3e520f06

[33mcommit c8f5a55df4267a1fd5fd7d47002ffe2dcb02702e[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Fri Apr 7 14:49:00 2017 +0000

    ppc: tm predictor 8x8
    
    About 5x [1;31mfast[mer.
    
    Change-Id: I951230517f49c0dca9ac9eac2efa8916a303b85a

[33mcommit 7b0e12934e75927e48df9326d3a71dbf844ee690[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Fri Apr 7 14:49:00 2017 +0000

    ppc: horizontal predictor 32x32
    
    About 5x [1;31mfast[mer.
    
    Change-Id: I3bb724e07baffd901aa2d0f65060ba48882cc9b8

[33mcommit a7a2d1653bbb6d42d292a0a10acd4d4e28c43d6b[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Fri Apr 7 14:49:00 2017 +0000

    ppc: horizontal predictor 16x16
    
    About 10x [1;31mfast[mer.
    
    Change-Id: Ie81077fa32ad214cdb46bdcb0be4e9e2c7df47c2

[33mcommit 77311e0dff5c5f561e0f6480bad5e276e22bf4ca[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Mar 7 13:06:06 2017 -0800

    Update vpx_idct32x32_1024_add_neon()
    
    Most are cosmetics changes.
    Speed has no change with clang 3.8, and about 5% [1;31mfast[mer with gcc 4.8.4
    
    Tried the strategy used in 8x8 and 16x16 (which operations' orders are
    similar to the C code), though speed gets better with gcc, it's worse
    with clang.
    
    Tried to remove store_in_output(), but speed gets worse.
    
    Change-Id: I93c8d284e90836f98962bb23d63a454cd40f776e

[33mcommit 904b957ae965bd3d67f15a75cd9db7954f810d33[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Feb 16 17:57:44 2017 -0800

    consolidate block_error functions
    
    vp9_highbd_block_error_8bit_c was a very simple wrapper around
    vp9_block_error_c. The SSE2 implemention was practically identical to
    the non-HBD one. It was missing some minor improvements which only
    went into the original version.
    
    In quick speed tests, the AVX implementation showed minimal
    improvement over SSE2 when it does not detect overflow. However, when
    overflow is detected the function is run a second time. The
    OperationCheck test seems to trigger this case and reverses any
    speed benefits by running ~60% slower. AVX2 on the other hand is
    always 30-40% [1;31mfast[mer.
    
    Change-Id: I9fcb9afbcb560f234c7ae1b13ddb69eca3988ba1

[33mcommit 716c1d5ff512135577ba80d336f0c572c987db21[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 15 09:18:34 2017 -0800

    Vp9: Speed 8 aq-mode=3: Reduce computation in estimating bits per mb.
    
    vp9_compute_qdelta_by_rate has almost 2% overhead in profiling on Nexus 6.
    Reduce the calling of that function in speed 8 by estimating the delta-q.
    Both rtc and rtc_derf show little/no change in avg psnr/ssim.
    Encoding speed is 2~3% [1;31mfast[mer on Nexus 6.
    
    Change-Id: If25933715783f31104a18a5092ea347b1221b5f5

[33mcommit ac1358cd56b6b0c76d773703af2584bb3a204c33[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Jan 23 12:10:01 2017 -0800

    vp9: Copy partition using avg_source_sad.
    
    Affecting only speed 8.
    Speed tests on Nexus 6 show 4% [1;31mfast[mer for QVGA and 2.4% [1;31mfast[mer for VGA.
    Little/negligible quality regression observed on both rtc and rtc_derf sets.
    
    Change-Id: I337f301a2db49a568d18ba7623160f7678399ae1

[33mcommit 2ff2376fbcb240c202a51d0f77b339da4ee63450[m
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Jan 12 17:59:22 2017 -0800

    vp9: Update threshold for partition copy.
    
    Avoid many visual artifacts. Compression quality is improved by more
    than 1%. Encode speed is about 4% for QVGA and 6% for VGA [1;31mfast[mer on
    android.
    
    Change-Id: I4dd0a81429ddf7efdef1e80a191da5fb8de8e8af
For keyword time:
[33mcommit 10cb17aec0c9dac4ac3d250d026baa9c014df35a[m
Merge: 0665b0966 2387024f4
Author: James Zern <jzern@google.com>
Date:   Fri Nov 10 00:15:03 2017 +0000

    Merge "run[1;31mtime[m error fix: bitdepth_conversion_avx2.h"

[33mcommit 2387024f417e18740340da8dd4ff3bc54997ffd9[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Thu Nov 9 12:26:43 2017 -0800

    run[1;31mtime[m error fix: bitdepth_conversion_avx2.h
    
    Change-Id: I7364a157de39eb7137b599808474b8d46d19d376

[33mcommit eb7d431cb55c8254fcd0a362e269c1d7a25409ba[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 25 15:45:11 2017 -0700

    Compound prediction mode for nonrd pickmode.
    
    Allow for compound prediction mode in nonrd_pickmode for ZEROMV.
    For real-[1;31mtime[m encoding, 1 pass with non-zero lag-in-frames.
    
    Added speed feature to control the feature.
    Enabled for speed >=6 for now, under VBR mode.
    
    avgPSNR/SSIM metrics positive on ytlive set, for speed 6:
    some clips up by ~3-5%, some clips neutral gain, average gain
    across clips is ~1%.
    
    Small/negligible decrease in speed.
    
    Change-Id: I7a60c7596e69b9a928410c5ee2f9141eecd8613d

[33mcommit a673b4f4afb6591d48ffc5c74b539771e28e0f69[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 10 15:30:32 2017 -0700

    Adjust to scene detection for 1 pass vbr.
    
    Expose the threshold for setting key frame on cut,
    and increase it for speed 5.
    Also small adjustment to min_thresh.
    
    No change in overall metrics or fps.
    Small quality improvement and lower encode [1;31mtime[m on scene cuts.
    
    Change-Id: I36e06ff3b26b6c29aede39c23fce454525fc9026

[33mcommit 5bc4c37a89eea7ad4ca1eaeeb310da38240b7a4c[m
Merge: e405eb06b bcbc6ed82
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 6 22:41:34 2017 +0000

    Merge "Revert "Speed >=5 real-[1;31mtime[m: add TM intra mode for high_source_sad.""

[33mcommit bcbc6ed82df08ea7b02b5a7b996ad4cbb80e1293[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 6 22:14:56 2017 +0000

    Revert "Speed >=5 real-[1;31mtime[m: add TM intra mode for high_source_sad."
    
    This reverts commit 9311ef18b4b4eff0da3adf9d702a34f489a270ff.
    
    Reason for revert:
    Notice small regression in some clips.
    Will revisit in another change.
    
    Original change's description:
    > Speed >=5 real-[1;31mtime[m: add TM intra mode for high_source_sad.
    >
    > Small/neutral change in metrics or speed for ytlive.
    > Some improvement in quality on frames with big content change.
    >
    > Change-Id: Ib3b0703a5f28ea6710e90324436e27598ab7384d
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    
    Change-Id: I9d8ec5195bb05ddf329d325699355185affb9b13
    No-Presubmit: true
    No-Tree-Checks: true
    No-Try: true

[33mcommit 7af6c6c9ca56ee62dd5de4dd73f0acae1d65ba09[m
Merge: d2fb834eb 9311ef18b
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 6 06:29:46 2017 +0000

    Merge "Speed >=5 real-[1;31mtime[m: add TM intra mode for high_source_sad."

[33mcommit 9311ef18b4b4eff0da3adf9d702a34f489a270ff[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 5 12:58:51 2017 -0700

    Speed >=5 real-[1;31mtime[m: add TM intra mode for high_source_sad.
    
    Small/neutral change in metrics or speed for ytlive.
    Some improvement in quality on frames with big content change.
    
    Change-Id: Ib3b0703a5f28ea6710e90324436e27598ab7384d

[33mcommit 4bc1fc58b6c8b456750b7c57ce654b36565cfec0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 4 15:27:45 2017 -0700

    Avoid nonrd_pick_partition for speed >= 6.
    
    For 1 pass vbr speed >= 6: when REFERENCE_PARTITION is selected,
    avoid doing the full nonrd_pickmode based partition.
    No change in overall metrics or speed.
    Reduces encode [1;31mtime[ms on scene cuts by 10-20%.
    
    Change-Id: I0310b1610cc1c83793a509e0a9059840e8f18308

[33mcommit ab2bd340ace0e02285a821207e4080cbf0bbdce8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 29 11:34:00 2017 -0700

    vp9: 1 pass vbr: Limit qpdelta on high_source_sad.
    
    For 1 pass vbr: when significant content/scene change is detected
    (high_source_sad = 1) reduce/turnoff the additional qdelta on the
    active_worst_quality. This helps somewhat to reduce the occurrence
    of large frame sizes and large encode [1;31mtime[ms.
    Allow it only when use_altef_onepass is enabled.
    
    Neutral/no change on metrics.
    
    Change-Id: I1dd97dd2ab892d65f707b841b27a5de300b714ea

[33mcommit c8678fb7f38024345462cfab3b34d649548ff445[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 3 10:55:55 2017 -0700

    Use adapt_partition for ARF in 1 pass.
    
    For speed 6 real-[1;31mtime[m mode: use adapt_partition
    on ARF frame instead of REFERENCE_PARTITION (which is slower).
    This requires enabling compute_source_sad_onepass for no-show_frames.
    
    Speedup of ~3-5% on some clips that heavily use ARF,
    small loss (~0.2%) in quality on ytlive set.
    
    Change-Id: Ib50acc97df06458244a6ac55d2bd882c30012536

[33mcommit c8f6e7b99efc8e873ef3ef9cfa5232ff1ee596bb[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 29 14:54:56 2017 -0700

    Fix partition selection in speed features for arf overlay frame.
    
    For real-[1;31mtime[m mode. Move the switch to fixed partition
    for is_src_frame_alt_ref so all speeds may use it
    if use_altref_onepass is set.
    
    Improves metrics by ~2% for ytlive set at speed 4
    (where use_altref_onepass is currently used).
    
    Change-Id: I033240386598c9dbd0364da89ccbcca64bc663ee

[33mcommit f2c3d0a7a3ac5d4eb844b50da386142e9610ee24[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 29 10:53:59 2017 -0700

    Enable use_altref_onepass for speed 4 real-[1;31mtime[m mode.
    
    Used for VBR mode with lag-in-frames > 0.
    On ytlive set at speed 4: ~3% average gain.
    
    Change-Id: I45dad1700bf8be9d8f177815dc062774f6f2f0de

[33mcommit ccae8da7c665b9257dc3af9fd9ea5d0d5df4d8b2[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Aug 24 12:11:48 2017 -0700

    Make sure diff is present at configure [1;31mtime[m.
    
    This avoids an endless build loop at vpx_version.h
    creation [1;31mtime[m when diff is not present.
    
    Change-Id: I16ae386dbdaf14f9a2b85e4c5d1aaa6c08f52a45

[33mcommit 48110d0f7904bb04b4f70000721e96ed64bc6fb2[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 16 14:07:24 2017 +0100

    Fix corrupt arf groups due to low "lag_in_frames"
    
    Having a very small value for "lag_in_frames" can result in
    corrupt arf groups including displayed frames that update
    the arf buffer and fake overlay frames that are not in fact
    overlays of real arfs but are nevertheless starved of bits.
    
    Leaving lag_in_frames at the default of 25 for these 5 frame two
    pass VBR tests should now give rise to a valid ARF coding pattern
    as follows:-  K(ey), A(rf), N(ormal), N, N, O(verlay).
    
    This change is part of a response to BUG=webm:1454 where broken
    arf groups interacted badly with a change that corrects for large rate
    misses. However, it may still in some cases increase encode [1;31mtime[m by
    virtue of the fact that the unit test now codes a correct coding pattern
    with "hidden" ARF frames.
    
    Change-Id: Ifd0246a4c1d0be247247c754024d7a4ed5f66a6b

[33mcommit 45b39750d6a5c68cba5c03f0780e37c6d57b8c63[m
Merge: 2caff1615 c06d6649c
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Aug 14 20:46:22 2017 +0000

    Merge "temporal filter test: adjust inputs and run[1;31mtime[m"

[33mcommit c06d6649c5ea010599a6cbdaada01571cd542580[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Mar 28 15:19:55 2017 -0700

    temporal filter test: adjust inputs and run[1;31mtime[m
    
    Use input with a narrow range because the filter only applies when the
    frames are similar.
    
    Run CompareReferenceRandom more [1;31mtime[ms. Especially before narrowing the
    input range, the filter frequently did not apply.
    
    Change-Id: Ie249bedf6d0d33dfa5884611cb1835788e418b38

[33mcommit 93166c5e519ecbb8477e80abb4acb1420e5cc2c4[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Aug 8 14:05:16 2017 -0700

    neon: vpx_quantize_b_32x32
    
    With skip block the neon is about twice as fast as C.
    
    The neon has no shortcut for coeff < zbin so it always takes the
    same amount of [1;31mtime[m. Even if the C can take the shortcut, it is over
    twice as fast in neon. If it can't, that gap increases to over 10x.
    
    BUG=webm:1426
    
    Change-Id: I400722146c1b5a5f6289f67d85fd642463d2bfc6

[33mcommit d52cb5972930b68b0d0ce15b45d1a788dcd78322[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Aug 3 10:22:07 2017 -0700

    quantize: copy ssse3 optimizations to intrinsics
    
    Fairly minor differences from sse2. pabsw and psignw are the big gains.
    Also re-uses some values in eob calculation to avoid an extra pcmp.
    
    Fixes test failures in HBD and OS X builds.
    
    Allows using it in 32bit builds, where it is about 40% faster than sse2.
    
    Substantially faster than the assembly for skip_block. 10-20% faster the
    rest of the [1;31mtime[m.
    
    Change-Id: If783bb3567e561e47667e10133b9c84414a334e2

[33mcommit ad563713437b8c0fd0aabaa9df9473385acd300d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jul 17 16:04:04 2017 -0700

    vp9: Fix to setting content_state for real-[1;31mtime[m mode.
    
    When content_state_sb is set to LowVarHighSumdiff, don't reset
    it to VeryHighSad. Visually better on clips with strong lighting changes.
    
    Small/negligible change in RTC metrics and speed.
    
    Change-Id: I20c383e3c4cf8d1149de5f9260449c0b7cf7c6aa

[33mcommit 689ad89e8625e7e5c2b981efd4c39e87e37b89b1[m
Author: Jim Bankoski <jimbankoski@google.com>
Date:   Tue Jul 11 06:48:13 2017 -0700

    Reintroduce fix for max qindex calculation of a gf interval
    
    This reintroduces the fix:
      https://chromium-review.googlesource.com/c/422807/
    and later reverted here:
      https://chromium-review.googlesource.com/c/447843/
    
    BUG=webm:1355
    
    This [1;31mtime[m behind a compile [1;31mtime[m flag :
    
    configure --disable-always_adjust_bpm
    configure --enable-always_adjust_bpm
    
    This should make side by side testing easier and let users of the
    lib pick which way they want to go.
    
    Change-Id: I7d7b37b83015dc001810af84c132cbc1e71ba8d6

[33mcommit 2ac7c549e9c65b83dea8cf37ed21eb37041415a1[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Jun 30 15:42:31 2017 -0700

    vp9: Remove alt-ref from denoiser.
    
    Denoiser is used in real-[1;31mtime[m mode which does not use alt-ref.
    Reduce memory usage when denoiser is enabled.
    
    Change-Id: I54ba3bcaeeb1818bbdf718ef90e97d4897ff793d

[33mcommit efe1982e63b73680ac0190ccd5e747e1992a4394[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Jun 21 17:26:20 2017 +0100

    Fix int overflow in rate control for high bit rates.
    
    Fix misplaced cast that caused an overflow and incorrect rate adaptation
    behavior for high data rates. This in particular will have affected 4k encodes
    but could also have come into play for some higher rate 1080p cases.
    
    In our standard test sets the quality impact is small though several high rate
    clips show improved rate accuracy. This can also impact the number of recode
    loop hits and on one problem 4k  clip the encode [1;31mtime[m for speeds 0 and 1 was
    reduced by >25%
    
    Change-Id: I108da7ca42f3bc95c5825dd33c9d84583227dac1

[33mcommit a4ea7e131b139c5cb68e50f9d2518da53695a810[m
Author: Urvang Joshi <urvang@google.com>
Date:   Thu Jun 8 14:51:01 2017 -0700

    VP9: Add greedy version of av1_optimize_b().
    
    This was ported from the greedy version in AV1, written by Dake He
    (dkhe@google.com).
    See:
    https://aomedia.googlesource.com/aom/+/master/av1/encoder/encodemb.c#137
    
    Greedy version is disabled by default, but can be picked by setting
    USE_GREEDY_OPTIMIZE_B to 1.
    To be enabled by default later.
    
    This is both faster and better in terms of compression.
    
    Compression Improvement:
    ------------------------
    lowres: -0.119
    midres: -0.064
    hdres:  -0.405
    
    Speed Improvement:
    ------------------
    (Based on encode [1;31mtime[m of 3 videos of different difficulties at
    3 different target bitrates)
    With --cpu-used=0: 0.38% to 5.55% faster
    With --cpu-used=1: 0.24% to 2.79% faster
    With --cpu-used=2: 0.29% to 1.46% faster
    
    Change-Id: Ia7a23b3b244ad8eb253ac9e43cd03c5e021d2635

[33mcommit baef5486bf32226a044c48f8fc9894e2db4def6d[m
Merge: b9987a7c2 13d4a0d01
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:50:28 2017 +0000

    Merge "Revert "Revert "vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10."""

[33mcommit 13d4a0d011be218cbe513fdf72c5b3b262b476bc[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:50:19 2017 +0000

    Revert "Revert "vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10.""
    
    This reverts commit 3704807805895850671261fa4470f1ce41dd2ac9.
    
    Reason for revert: <INSERT REASONING HERE>
    Does not look to be the cause of the test failures.
    
    Original change's description:
    > Revert "vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10."
    >
    > This reverts commit 4a7424adba7a65766a92635dc67b6e7d94646693.
    >
    > Reason for revert: <INSERT REASONING HERE>
    > Possibly causing test failures in roll into chromium.
    >
    > Original change's description:
    > > vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10.
    > >
    > > Reduces quality regression at speed 10 for real-[1;31mtime[m mode.
    > >
    > > Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8
    > >
    >
    > TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    > # Not skipping CQ checks because original CL landed > 1 day ago.
    >
    > Change-Id: I1defcb74e78a5a3bd29b7d1b21a96a79fa26a457
    >
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    NOPRESUBMIT=true
    NOTREECHECKS=true
    NOTRY=true
    
    Change-Id: I13d86a2a68b8aa8c0c7465e6e58cff0e00bc7862

[33mcommit b9987a7c25303df209e99ad4d9d332bf7fa04a22[m
Merge: dac3b5972 370480780
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:48:38 2017 +0000

    Merge "Revert "vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10.""

[33mcommit 3704807805895850671261fa4470f1ce41dd2ac9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:48:13 2017 +0000

    Revert "vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10."
    
    This reverts commit 4a7424adba7a65766a92635dc67b6e7d94646693.
    
    Reason for revert: <INSERT REASONING HERE>
    Possibly causing test failures in roll into chromium.
    
    Original change's description:
    > vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10.
    >
    > Reduces quality regression at speed 10 for real-[1;31mtime[m mode.
    >
    > Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8
    >
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    # Not skipping CQ checks because original CL landed > 1 day ago.
    
    Change-Id: I1defcb74e78a5a3bd29b7d1b21a96a79fa26a457

[33mcommit 3fbc371e999c00967441befb7082413dd533f9a2[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 15 10:39:44 2017 -0700

    'protected' visibility unsupported on macho
    
    Mac builds must not specify 'protected' visibility. Then only support
    'default' and 'hidden'.
    
    https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/CppRun[1;31mtime[mEnv/Articles/SymbolVisibility.html
    
    Change-Id: I94eccfaa29af0ddcc4a5c1c0e14cf63ef7146462

[33mcommit 4a7424adba7a65766a92635dc67b6e7d94646693[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 12 11:01:33 2017 -0700

    vp8: Real-[1;31mtime[m mode: reduce mode_check_freq thresh for speed 10.
    
    Reduces quality regression at speed 10 for real-[1;31mtime[m mode.
    
    Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8

[33mcommit 76567d84cef1bd8a8dd734a70f554d80208a66fd[m
Author: Cheng Chen <chengchen@google.com>
Date:   Tue Apr 4 14:39:17 2017 -0700

    Speed up encoding by skipping altref recode
    
    Speed up for speed 0.
    Reduce 10+% of encoding [1;31mtime[m for hdres in speed 0,
    with less than 0.1% PSNR loss.
    Compute total difference of previous and current frame context probability
    model. If the diff is less than the threshold, skip recoding the frame.
    
    Borg test (positive number means performance loss):
                    lowres    midres    hdres
    PSNR:           0.030     0.032     0.065
    
    Local speed test: bitrate set at 1200
                    blue_sky  pedestrian  rush_hour
    Encoding [1;31mtime[m:   -10.0%     -16.5%      -16.5%
    
    Change-Id: I4e2d200ea3115d48b2c3e890143596b31b8ef9e9

[33mcommit f7d1486f4890431a49802817818a5ae0a4c3c8dc[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 1 14:10:54 2017 -0700

    neon variance: process 16 values at a [1;31mtime[m
    
    Read in a Q register. Works on blocks of 16 and larger.
    
    Improvement of about 20% for 64x64. The smaller blocks are faster, but
    don't have quite the same level of improvement. 16x32 is only about 5%
    
    BUG=webm:1422
    
    Change-Id: Ie11a877c7b839e66690a48117a46657b2ac82d4b

[33mcommit 1814463864a338b87305099f13d4938a8b3db822[m
Merge: 2c3a2ad6f d6a7489dd
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 8 17:34:20 2017 +0000

    Merge changes Id602909a,Ib0e85608
    
    * changes:
      neon variance: process two rows of 8 at a [1;31mtime[m
      neon variance: add small missing sizes

[33mcommit 9b729748ac5cb0087f2e1282ebb503009e6ba836[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 5 18:39:55 2017 -0700

    vp9: SVC: Set downsample filtertype for lowest spatial layer.
    
    For lowest spatial layer, in 3 layer SVC, set the
    downsampling filtertype to get averaging filter.
    Needed for reducing aliasing on low-res layer,
    small increase in overall encoder [1;31mtime[m.
    
    Change-Id: Ia31460123bd91b72eca49b46dd924b9f226d4563

[33mcommit af69ed20c4be1d8fda493334105a51ecb45cd6d4[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon May 1 10:49:54 2017 -0700

    vp9: Enable noise estimation on low res.
    
    Set noise level to kLowLow for high motion low res clips.
    Change the normalization in noise metric for low res.
    Reduce the initial [1;31mtime[m-window for all resolutions.
    
    Change-Id: Iaed39dbb50b205cd9c735dc5b84822304fb01987

[33mcommit d6a7489dd5980352593826710937ae9486d63279[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 1 13:19:49 2017 -0700

    neon variance: process two rows of 8 at a [1;31mtime[m
    
    When the width is equal to 8, process two rows at a [1;31mtime[m. This doubles
    the speed of 8x4 and improves 8x8 by about 20%.
    
    8x16 was using this technique already, but still improved a little bit
    with the rewrite.
    
    Also use this for vpx_get8x8var_neon
    
    BUG=webm:1422
    
    Change-Id: Id602909afcec683665536d11298b7387ac0a1207

[33mcommit ae0215f9450f63453ed05f708ff42f7017b2858f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon May 1 10:04:31 2017 -0700

    vp9: SVC: Early exit on golden ref in non-rd pickmode.
    
    For SVC 1 pass real-[1;31mtime[m: add condition to skip the
    golden (spatial) reference mode in non-rd pickmode.
    Condition is to skip golden if the sse of zeromv-last mode
    is below threshold. And change order in ref_mode_set_svc
    to make sure golden zeromv is tested after last-nearest.
    
    Speedup ~3-4% with little/negligible quality loss.
    
    Change-Id: I6cbe314a93210454ba2997945f714015f1b2fca3

[33mcommit 6dfeea6592b9a6327679f76a192f1dfd4eb02ea4[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Mar 15 10:40:58 2017 -0700

    vp9 temporal filter: sse4 implementation
    
    Approximates division using multiply and shift.
    
    Speeds up both sizes (8x8 and 16x16) by 30 [1;31mtime[ms.
    
    Fix the call sites to use the RTCD function.
    
    Delete sse2 and mips implementation. They were based on a previous
    implementation of the filter. It was changed in Dec 2015:
    ece4fd5d2247c9512b31a93dd593de567beaf928
    
    BUG=webm:1378
    
    Change-Id: I0818e767a802966520b5c6e7999584ad13159276

[33mcommit 43e0e082d15b1066a1641501362de25ade00a62b[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Apr 26 11:12:21 2017 -0700

    vp9: Don't force disabling of adaptive_rd_thresh for real[1;31mtime[m.
    
    Don't force disabling of adaptive_rd_thresh for real[1;31mtime[m when
    row_mt_bit_exact is set.
    
    Row based adaptive rd is made usable in CL
    454882(https://chromium-review.googlesource.com/c/454882) for REALTIME.
    
    Change-Id: Ief023414f0fd6eb86f299dd46ae58f4436875af5

[33mcommit 58245d7050d7ea4433f8c1965d229d623f0dd4b7[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 13:05:09 2017 +0000

    ppc: dc predictor 8x8
    
    Slightly faster, the other dc predictors cannot be faster since
    the computation speedup is overwhelmed by the [1;31mtime[m spent reading
    dst to write just the 8x8 part.
    
    Change-Id: I94a0b50500adf8b7b6bb919dbf5c7adf5b9fba66

[33mcommit 07ad5a15c2dc7828efa7a862342005984d87cc6a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Mar 23 14:32:43 2017 -0700

    vp9: Fix to condition on using source_sad for 1 pass real-[1;31mtime[m.
    
    Make the source_sad feature work properly for cases of VBR or
    screen_content with SVC.
    
    Added unittest for SVC with screen-content on.
    
    Change-Id: Iba5254fd8833fb11da521e00cc1317ec81d3f89b

[33mcommit dcd6c87b80f2435ce4f206c5875f3be1f23b6999[m
Merge: c099d6be1 20c289269
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Mar 22 22:02:24 2017 +0000

    Merge "vp9: Enable adaptive_rd_threshold for row mt for real[1;31mtime[m speed 8."

[33mcommit 20c2892693b3be46cb53b8c9262d41d7a61999aa[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Mar 14 13:45:20 2017 -0700

    vp9: Enable adaptive_rd_threshold for row mt for real[1;31mtime[m speed 8.
    
    Change it to row based array to avoid the slow down cause by sync.
    row-mt on, speed 8, 2 threads: ~4% speedup for VGA on ARM benefited
    from adaptive_rd_threshold.
    
    Change-Id: I887e65a53af20a6c4f48d293daaee09dab3512cf

[33mcommit 2fa709280874bd78ef5d6d0da729c5a3824bbfff[m
Merge: 1b91f4193 ffb3c50da
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Mar 14 23:29:46 2017 +0000

    Merge "vp9: Enable row multithreading for SVC in real-[1;31mtime[m mode."

[33mcommit ffb3c50da1d7ac24e6ae7858cb62abb348552b6a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 7 14:32:30 2017 -0800

    vp9: Enable row multithreading for SVC in real-[1;31mtime[m mode.
    
    Enable row-mt for SVC for real-[1;31mtime[m mode, speed >=5.
    
    Add the controls to the sample encoders, but keep it off for now.
    Add the control and enable it for the 1 pass CBR unittests.
    
    For speed 7, 3 layer SVC, 2 threads, row-mt enabled gives about ~5% speedup.
    
    Change-Id: Ie8e77323c17263e3e7a7b9858aec12a3a93ec0c1

[33mcommit 04aa9e28d532e45b85f8a8342b6108124d207eec[m
Merge: 97b6a6f03 ea3c817ac
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Mar 9 03:58:14 2017 +0000

    Merge "vp9: Enable two speed features for SVC real-[1;31mtime[m mode."

[33mcommit ea3c817ac23d5075df2905e6549cd2dadb4750f6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 8 16:10:45 2017 -0800

    vp9: Enable two speed features for SVC real-[1;31mtime[m mode.
    
    Enable short_circuit_low_temp_var and limit_newmv_early_exit
    for SVC, 1 pass CBR mode.
    
    Change-Id: I77df2b2c6cc40657bb8ea76e19dfc2fdaad6389e

[33mcommit 51289302ab02d81c17d3f15bbfb9a22eef4a36c1[m
Author: Rafael de Lucena Valle <rafaeldelucena@gmail.com>
Date:   Wed Oct 19 22:21:09 2016 -0200

    Add support for POWER8/VSX
    
    Add ppc, ppc64 and ppc64le on all_platforms and ARCH_LIST
    
    Add VSX flags and check for -mvsx
    
    Define empty setup_rtcd_internal
    
    Add Altivec detection based on:
    http://freevec.org/function/altivec_run[1;31mtime[m_detection_linux
    
    Detect VSX at run[1;31mtime[m when enabled
    
    Change-Id: I304f4d8c5fee0ff19b6483cd2e9cc50d6ddec472
    Signed-off-by: Rafael de Lucena Valle <rafaeldelucena@gmail.com>

[33mcommit c4c0331f65424fabd10b56c97dc8dfac68b1bccb[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Mar 7 13:58:11 2017 -0800

    Shift speed 2 from non-large VP9 tests to large ones.
    
    This may fix the [1;31mtime[m out failure of valgrind tests in nightly
    since more coverages were added on row-mt.
    
    Change-Id: Id9414e66d1a266602c7495243d9f5cb69e17ccdc

[33mcommit 9e7140b451b44c7daa63d39b978d52b2ddd081ea[m
Merge: 1bb63bf66 453f18040
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Fri Mar 3 19:05:52 2017 +0000

    Merge "vp9,real[1;31mtime[m: Enable row multithreading for non-rd"

[33mcommit 453f18040f62f4f1699c0e7c5e1ee288e571d9d2[m
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Mon Feb 13 11:36:02 2017 -0800

    vp9,real[1;31mtime[m: Enable row multithreading for non-rd
    
    Enable row level multithreading for real[1;31mtime[m encodes where non-rd
    path is used (speed >= 5).
    
    Change-Id: I5439cb49a02171166d8e1de06c7d5e6f8e819a41

[33mcommit 904b957ae965bd3d67f15a75cd9db7954f810d33[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Feb 16 17:57:44 2017 -0800

    consolidate block_error functions
    
    vp9_highbd_block_error_8bit_c was a very simple wrapper around
    vp9_block_error_c. The SSE2 implemention was practically identical to
    the non-HBD one. It was missing some minor improvements which only
    went into the original version.
    
    In quick speed tests, the AVX implementation showed minimal
    improvement over SSE2 when it does not detect overflow. However, when
    overflow is detected the function is run a second [1;31mtime[m. The
    OperationCheck test seems to trigger this case and reverses any
    speed benefits by running ~60% slower. AVX2 on the other hand is
    always 30-40% faster.
    
    Change-Id: I9fcb9afbcb560f234c7ae1b13ddb69eca3988ba1

[33mcommit f82280820a88e3b9b42c95bd0e172ddc7a6a7b22[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 15 11:26:29 2017 -0800

    vp9. Use same source_sad threshold for all speeds.
    
    Only affects real-[1;31mtime[m mode.
    
    Change-Id: Iba836f110c4da936f5173cc0f54424d5b6121bff

[33mcommit 7a48bfab4703a4b10aed6cbf42d00ef8cda7ba70[m
Merge: 016933ad4 943f9c035
Author: James Zern <jzern@google.com>
Date:   Mon Feb 13 21:00:33 2017 +0000

    Merge "vpx_usec_[1;31mtime[mr_elapsed: use 64-bit math"

[33mcommit 943f9c0356204683e295288e0bd8558abc98ae03[m
Author: James Zern <jzern@google.com>
Date:   Thu Feb 9 19:28:59 2017 -0800

    vpx_usec_[1;31mtime[mr_elapsed: use 64-bit math
    
    this prevents a rollover when tv_sec is a long:
    signed integer overflow: 2776 * 1000000 cannot be represented in type
    'long'
    
    Change-Id: I03dc4476ee122b02e2856dad28358a20cf16a9f8

[33mcommit 969957f9f2a124861145a0d18781b855e98caa54[m
Author: Jingning Han <jingning@google.com>
Date:   Thu Jan 26 15:00:04 2017 -0800

    Fix real-[1;31mtime[m compression regression in hbd mode
    
    This commit resolves the compression performance regression in
    real-[1;31mtime[m encoding setting when high bit-depth mode is enabled.
    
    The current solution temporarily disables the SIMD implementations
    of vpx_satd, hadamard8x8, and hadamard16x16 in high bit-depth mode.
    
    The commit makes the coding results bit-wise identical between
    regular coding pipeline and high bit-depth at profile 0.
    
    BUG=webm:1365
    
    Change-Id: Icfb900821733749685370460a1a5a7e07f76f4bf

[33mcommit 270fadc135b2005a6f23a87ab0f27ddb93cdc5e8[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Jan 23 13:30:37 2017 -0800

    PartialIDctTest: reduce number of RunQuantCheck iterations
    
    This currently runs 1000 * 1000 = one *million* [1;31mtime[ms which is quite
    unnecessary. It's one of the slowest items in Jenkins and takes over an
    hour for each of the larger transforms.
    
    Change-Id: I01653b5e610683e1a2d778ec60cf5065562ab8db

[33mcommit f4169936ee9f944d3a269b2636085c34010fd853[m
Merge: b608c0978 219cdab67
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Jan 20 20:35:07 2017 +0000

    Merge "vp9: Add feature to use block source_sad for real[1;31mtime[m mode."

[33mcommit 219cdab676fa77532072798fe10627f729f05585[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jan 17 10:39:26 2017 -0800

    vp9: Add feature to use block source_sad for real[1;31mtime[m mode.
    
    Only for speed >= 7, and affects skipping of intra modes.
    Threshold is set low for now, needs to be tuned.
    Small/no difference in metrics on rtc clips.
    
    Change-Id: If9bdbd43f08d1f80407cdd2e9e5e96780dcd2424
For keyword perf:
[33mcommit ae35425ae64a3d9573f85a4a92c5638a58044057[m
Author: Kyle Siefring <kylesiefring@gmail.com>
Date:   Sun Oct 22 19:34:19 2017 -0400

    Optimize convolve8 SSSE3 and AVX2 intrinsics
    
    Changed the intrinsics to [1;31mperf[morm summation similiar to the way the assembly does.
    
    The new code diverges from the assembly by preferring unsaturated additions.
    
    Results for haswell
    
    SSSE3
    Horiz/Vert  Size  Speedup
    Horiz       x4    ~32%
    Horiz       x8    ~6%
    Vert        x8    ~4%
    
    AVX2
    Horiz/Vert  Size  Speedup
    Horiz       x16   ~16%
    Vert        x16   ~14%
    
    BUG=webm:1471
    
    Change-Id: I7ad98ea688c904b1ba324adf8eb977873c8b8668

[33mcommit 4906cea0276c17a089f3b7616a43511cbc5ff069[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Fri Oct 20 05:21:15 2017 -0700

    vpx: [x86] vpx_hadamard_16x16_avx2() improvements
    
    ~10% [1;31mperf[mormance gain.  Fixed the cosmetics noted in the
    previous commit.
    
    Change-Id: Iddf475f34d0d0a3e356b2143682aeabac459ed13

[33mcommit 2caff16151bc0450142aaab5bc44dcf7ef603e11[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Aug 14 11:55:42 2017 -0700

    vp9 svc: Fix the stats output when sl = 1.
    
    Actual frame size and bitrate is all 0 when using SVC sample encoder
    with sl = 1 because the stats are set in parse_su[1;31mperf[mrame_index which
    will not caculate properly when sl = 1 since there is no su[1;31mperf[mrame.
    
    Use pkt->data.frame.sz instead when sl = 1.
    
    Change-Id: I93f5e98a4c779e32b007e1564ba5396af9e34ad6

[33mcommit 5b44ef0c501a8756fe53de2deb07647239aefe69[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jun 23 13:37:38 2017 +0100

    Respond more rapidly to excessive local overshoot.
    
    This patch attempts to address a bug reported for 4K video.
    https://b.corp.google.com/issues/62215394
    
    In this instance a [1;31mperf[mect storm of a moderate complexity section
    followed by a much easier section where a CGI overlay helped to
    suppress film grain noise, followed by a much harder and very grainy
    section at the end, cause a massive local rate spike that pushed a chunk
    over the upper allowed rate limit.
    
    This patch detects cases where the rate for a frame is much higher than
    expected and allows, in this special case, for rapid adjustment of the active
    Q range.
    
    For the example chunk in the bug report the target rate was 18Mb/s and the
    observed rate was over 37 Mb/s with a surge for the last few frames to over
    100Mb/s. This patch brings the overall chunk rate right back down to ~18.2 Mbit/s
    and  almost completely eliminates the rate spike at the end. (See graphs appended
    to bug report)
    
    Also see  I108da7ca42f3bc95c5825dd33c9d84583227dac1 which fixes a bug
    unearthed during testing of this patch and also has a bearing on high rate
    encodes such as 4K.
    
    This patch does have a negative impact on some metrics. Most notably there are
    clips in our standard test set where it hurts global psnr (though in many cases it
    conversely helps SSIM, FAST SSIM and PSNR-HVS). It is also worth noting that
    the clips (and data rates) where there is a big metric impact, are almost all cases
    where there is currently a significant overshoot vs the target rate and overall rate
    accuracy is greatly improved.
    
    Change-Id: I692311a709ccdb6003e705103de9d05b59bf840a

[33mcommit 76567d84cef1bd8a8dd734a70f554d80208a66fd[m
Author: Cheng Chen <chengchen@google.com>
Date:   Tue Apr 4 14:39:17 2017 -0700

    Speed up encoding by skipping altref recode
    
    Speed up for speed 0.
    Reduce 10+% of encoding time for hdres in speed 0,
    with less than 0.1% PSNR loss.
    Compute total difference of previous and current frame context probability
    model. If the diff is less than the threshold, skip recoding the frame.
    
    Borg test (positive number means [1;31mperf[mormance loss):
                    lowres    midres    hdres
    PSNR:           0.030     0.032     0.065
    
    Local speed test: bitrate set at 1200
                    blue_sky  pedestrian  rush_hour
    Encoding time:   -10.0%     -16.5%      -16.5%
    
    Change-Id: I4e2d200ea3115d48b2c3e890143596b31b8ef9e9

[33mcommit 760c214519fe69951297985ee8d7cd817a6febc4[m
Author: Kyle Siefring <kylesiefring@gmail.com>
Date:   Mon May 1 09:19:11 2017 -0700

    block error avx2: sum in 32 bits when possible
    
    Add 31bit pairs before unpacking in x86 block error code
    
    AVX2 code provides a very minor [1;31mperf[mormance improvement.
    
    BUG=webm:1210
    
    Change-Id: I4c82308eaf65741dca2f5c6db9be9c85f905073a

[33mcommit bf15ca10911024e224a4c168c6f5778a23cb7275[m
Author: Ranjit Kumar Tulabandu <ranjit.tulabandu@ittiam.com>
Date:   Wed Mar 22 19:38:59 2017 +0530

    Fix for out of range motion vector bug in sub-pel motion estimation
    
    BUG=webm:1397
    
    (yunqingwang)
    To verify that this patch wouldn't cause much [1;31mperf[mormance change,
    the Borg tests were run. Here was the result:
           avg_psnr   overall_psnr  ssim
    hdres: -0.002     0.006         0.013
    midres:   0         0             0
    lowres:   0         0             0
    
    Change-Id: Iae395ae7b741e0513cf5bab9dcace110b792a67d

[33mcommit 8440cc48179d2e5d161007d45618c10a2d9d1352[m
Merge: d9a9a4ffe fedcf83f3
Author: Yi Luo <luoyi@google.com>
Date:   Wed Mar 15 02:32:52 2017 +0000

    Merge "Improve idct32x32_1024_add SSSE3 intrinsics [1;31mperf[mormance"

[33mcommit fedcf83f333820cfbcc8c35f2b0117bb1c08599e[m
Author: Yi Luo <luoyi@google.com>
Date:   Mon Mar 6 15:11:49 2017 -0800

    Improve idct32x32_1024_add SSSE3 intrinsics [1;31mperf[mormance
    
    - Function level speed improves ~12%.
    
    Change-Id: I9b7dbddabf08c7d0f6b25264e6074d5ccbe39290

[33mcommit 48fca113d1040192786bce3c630da6f648328f85[m
Author: James Zern <jzern@google.com>
Date:   Thu Mar 9 23:29:54 2017 -0800

    inv_txfm_ssse3,butterfly: fix win32 abi compatibility
    
    only the first 3 parameters can be aligned to 16 as required by __m128i,
    make them all pointers for consistency.
    
    since:
    07c48ccfe Improve idct32x32_34_add SSSE3 intrinsics [1;31mperf[mormance
    
    BUG=webm:1384
    
    Change-Id: I0324f701e723a27cb470036a180693ba8829d01d

[33mcommit 018290a344c8144f012f08aaa83491b9749f7e96[m
Merge: f951881e8 327add990
Author: Yi Luo <luoyi@google.com>
Date:   Fri Mar 10 17:14:30 2017 +0000

    Merge "Improve idct32x32_135_add SSSE3 intrinsics [1;31mperf[mormance"

[33mcommit 327add990f85b386726c7b8a8fb2c937e899fdd5[m
Author: Yi Luo <luoyi@google.com>
Date:   Thu Mar 2 16:52:41 2017 -0800

    Improve idct32x32_135_add SSSE3 intrinsics [1;31mperf[mormance
    
    - Split the inv txfm into three parts to avoid stack spillover.
    - Function level speed improves ~12%.
    - Use function and macro to remove some repeated code.
    
    Change-Id: I14f5f072334fd766808cb52bf648df792e7379ee

[33mcommit 07c48ccfe090625e409be50ff82b6d8e6fc93578[m
Author: Yi Luo <luoyi@google.com>
Date:   Tue Feb 28 16:38:41 2017 -0800

    Improve idct32x32_34_add SSSE3 intrinsics [1;31mperf[mormance
    
    - Split the transform into first half and second half.
    - Reschedule the instructions to avoid stack spillover.
    - Function level speed improves ~16%.
    
    Change-Id: I166889840d23aa8a273eca00f6fbdae8b4566f35

[33mcommit f62dcc9c334eb5060293cbf0cfd7de82bb4ea78c[m
Author: Yi Luo <luoyi@google.com>
Date:   Thu Feb 16 13:15:22 2017 -0800

    Replace idct32x32_1024_add_ssse3 assembly with intrinsics
    
    - Encoding/decoding test, BQTerrace_1920x1080_60.y4m, on
      i7-6700, no obvious user-level speed [1;31mperf[mormance downgrade.
    - Passed unit tests.
    
    Change-Id: I20688e0dd3731021ec8fb4404734336f1a426bfc

[33mcommit 72a43e237878cb6f7f964e2fd3aa08ee04c0efee[m
Author: Yi Luo <luoyi@google.com>
Date:   Tue Feb 14 17:09:59 2017 -0800

    Add idct32x32_135_add SSSE3 intrinsics
    
    - Replace the corresponding assembly code.
    - No user level speed [1;31mperf[mormance degrade.
    - Unit tests passed.
    
    Change-Id: Idd0c5a4bad4976f1617c34100cb46e75e3b961e5

[33mcommit bd86de1ac8f1d3f5fa894e2605821914c2d9ff22[m
Author: Yi Luo <luoyi@google.com>
Date:   Wed Feb 8 11:09:03 2017 -0800

    Replace idct32x32_34_add_ssse3 assembly with intrinsics
    
    - No user-level speed [1;31mperf[mormance change.
    - Pass unit tests.
    
    Change-Id: Idfc598e00f354265e41f6b3219f4734216c115c6

[33mcommit 2a21b45fdcb82cac39ba36ab5cf55b433b45323a[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Fri Feb 3 08:29:21 2017 -0800

    Fix visual studio build failure
    
    Fixed the following issue.
    ..\test\vp9_ethread_test.cc(69): warning C4805: '|=' : unsafe mix of type 'bool' and type 'int' in operation [C:\src\buildbot\test-libvpx\tests\dveCPjwhBE\.build-x86_64-win64-vs10\test_libvpx.vcxproj]
    ..\test\vp9_ethread_test.cc(69): warning C4800: 'int' : forcing value to bool 'true' or 'false' ([1;31mperf[mormance warning) [C:\src\buildbot\test-libvpx\tests\dveCPjwhBE\.build-x86_64-win64-vs10\test_libvpx.vcxproj]
    
    Change-Id: I37f897cf12a0b7500d2fcbac9e4615f08a83fdb4

[33mcommit 969957f9f2a124861145a0d18781b855e98caa54[m
Author: Jingning Han <jingning@google.com>
Date:   Thu Jan 26 15:00:04 2017 -0800

    Fix real-time compression regression in hbd mode
    
    This commit resolves the compression [1;31mperf[mormance regression in
    real-time encoding setting when high bit-depth mode is enabled.
    
    The current solution temporarily disables the SIMD implementations
    of vpx_satd, hadamard8x8, and hadamard16x16 in high bit-depth mode.
    
    The commit makes the coding results bit-wise identical between
    regular coding pipeline and high bit-depth at profile 0.
    
    BUG=webm:1365
    
    Change-Id: Icfb900821733749685370460a1a5a7e07f76f4bf

[33mcommit 13234d3c433b6379ee1cc0de398dd71cef3f5907[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jan 19 10:07:12 2017 -0800

    Remove neon assembly for idct 16x16 and 8x8
    
    Tested using test/partial_idct_test.cc:DISABLED_Speed
    
    Both gcc 4.9 and clang 3.8 from the r13 Android NDK offer improvements
    using the intrinsics:
    <function>    <clang asm> <gcc asm> <clang intrin> <gcc intrin>
    idct16x16_256  1720ms      1703ms    1546ms         1554ms
    idct16x16_10   1320ms      1247ms     518ms          488ms
    idct16x16_1     107ms       108ms      64ms           68ms
    idct8x8_64      924ms       931ms     866ms          989ms
    idct8x8_12      826ms       824ms     519ms          514ms
    idct8x8_1       172ms       166ms     110ms          125ms
    
    idct8x8_64 isn't quite [1;31mperf[mect (slight regression with gcc intrinsics)
    but as a counter example idct16x16_10 goes from ~1300ms to ~500ms
    
    On a sample clip, clang improved from 48.5 to 49fps and gcc stayed roughly
    stable.
    
    BUG=webm:1303
    
    Change-Id: I9d4fd2b41b46ea6174a887b40a82c8e6e4769ed4

[33mcommit 91fc730d831a46751fe5adb96f4897085b483313[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jan 9 16:38:49 2017 -0800

    vp9: 1 pass cbr: Adjustments to usage of gf_cbr_boost and aq=3 mode.
    
    When aq=3 mode is on and the gf_cbr_boost is set: make sure golden frame
    is always refreshed, and don't incorporate segement cost in qp setting
    on the boosted golden frame.
    
    Better [1;31mperf[mormance on RTC set with gf_cbr_boost on,
    for example with gf_cbr_boost=50, gains from ~0.5-3%.
    
    Change-Id: Ie811f5e4d444ff3320bd6e2c1745b2c4c09a8460
For keyword optim:
[33mcommit c5dc3373dbd442ea299bacf276c4258fa7ce0559[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Jan 9 12:46:45 2018 -0800

    work around pic issue with gcc 6
    
    Enable pic when building sse2 or higher [1;31moptim[mizations.
    
    BUG=webm:1464
    
    Change-Id: I36c6e83ed716649f3d9ee10ce3aa9bb847cac2d9

[33mcommit a2127236ae4742f329e5571d76b84de08cd3b8ea[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Dec 7 17:24:41 2017 -0800

    vp9: Reset buffer level on large bitrate changes.
    
    For a large change in the target avg_frame_bandwidth,
    via the update in change_config()), reset the buffer_level
    to [1;31moptim[mal_level.
    
    This fix prevents possible frame drops, where for example,
    encoder suddenly goes from lower to higher bitrate.
    
    Change-Id: I2f844c41d04c01240e85f574e59d2b9075c7eb6d

[33mcommit 08a668af32d05de2b29d29372b1749dd29ee8a61[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Dec 15 17:06:47 2017 +0800

    vp8: [loongson] [1;31moptim[mize loopfilter v2.
    
    Optimize function vp8_mbloop_filter_vertical_edge_mmi and
    function vp8_mbloop_filter_horizontal_edge_mmi.
    Make full use of memory loading delay slot and reduce unnecessary
    instructions.
    
    Change-Id: I61da2c3a44c06044225461f46bf487d83cba6c16

[33mcommit 09519a55c75f020c76ba7a8ca35141f895d2f472[m
Merge: 7970cc02d f2ad52346
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Dec 15 00:53:21 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize sixtab predict v2."

[33mcommit f2ad523461088526f9a8c1c028e1b006976ecd87[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Thu Dec 14 16:29:58 2017 +0800

    vp8: [loongson] [1;31moptim[mize sixtab predict v2.
    
    1. Delete unnecessary zero setting process.
    2. Optimize the method of calculating SSE in vpx_varianceWxH.
    
    Change-Id: I8bab801416e7f4958c28c6d080e3cf785a50f82b

[33mcommit 90ce21e519505986c413aa493c13128a451df61a[m
Merge: e83d00f58 298f5ca47
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Mon Dec 4 01:30:06 2017 +0000

    Merge "vpx_dsp: [loongson] [1;31moptim[mize variance v2."

[33mcommit 298f5ca47d752d6c05f5f27f27e32c936f370752[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Dec 1 13:44:48 2017 +0800

    vpx_dsp: [loongson] [1;31moptim[mize variance v2.
    
    1. Delete unnecessary zero setting process.
    2. Optimize the method of calculating SSE in vpx_varianceWxH.
    
    Change-Id: I58890c6a2ed1543379acb48e03e620c144f6515f

[33mcommit 8099220e6c5e2cc8c857f85e1429d857c87a6f2a[m
Merge: c22ab8ab9 339f4dcae
Author: Kaustubh Raste <kaustubh.raste@imgtec.com>
Date:   Fri Dec 1 01:24:25 2017 +0000

    Merge "mips msa [1;31moptim[mize vpx_scaled_2d function"

[33mcommit 392e0188f68b024c6e7f99f1fdc54aa70f755aaa[m
Merge: 8d70aef05 d49bf26b1
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Thu Nov 30 00:53:50 2017 +0000

    Merge changes Icd9c866b,I81717e47
    
    * changes:
      vp8: [loongson] [1;31moptim[mize regular quantize v2.
      vp8: [loongson] [1;31moptim[mize vp8_short_fdct4x4_mmi v2.

[33mcommit d49bf26b1c076d167cc9488faaa7d766bd5120a3[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Nov 29 16:59:22 2017 +0800

    vp8: [loongson] [1;31moptim[mize regular quantize v2.
    
    1. Optimize the memset with mmi.
    2. Optimize macro REGULAR_SELECT_EOB.
    
    Change-Id: Icd9c866b0e6aef08874b2f123e9b0e09919445ff

[33mcommit 339f4dcaeef92c503347faacb4f07d55b1c02106[m
Author: Kaustubh Raste <kaustubh.raste@imgtec.com>
Date:   Wed Nov 29 13:27:04 2017 +0530

    mips msa [1;31moptim[mize vpx_scaled_2d function
    
    Change-Id: I638507b360c71489ab0e87bd558d2719ad995333

[33mcommit 9966cc8d1269c8ac105b08d9332727bdb5c110bb[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Nov 29 11:58:38 2017 +0800

    vp8: [loongson] [1;31moptim[mize vp8_short_fdct4x4_mmi v2.
    
    Optimize the calculate process of a,b,c,d.
    
    Change-Id: I81717e47bc988ace1412d478513e7dd3cb6b0cc9

[33mcommit cbe62b9c2d2b006aba52c8eebe7d842e59166fe4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Nov 21 15:04:53 2017 -0800

    vp9-svc: Fix to the layer buffer settings.
    
    For the case when the number of temporal layers > 1,
    the buffer levels (starting/[1;31moptim[mal_buffer_level,
    and maximum_buffer_size) were not scaled properly.
    
    In vp9_update_layer_context_change_config():
    when setting the layer-buffer levels, fix is to scale
    the layer-target_bandwidth by the target_bandwidth
    (which is the full stream bandwidth) instead of the
    spatial_layer_target.
    
    This is needed because prior to the call
    vp9_update_layer_context_change_config(), set_rc_buffer_sizes()
    is called which sets the buffer levels based on target bandwidth
    (which is the full bandwidth for the SVC stream).
    
    This fix properly sets the layer-buffer levels based on the
    layer-bandwidth, and leads to better rate targeting.
    
    Small/neutral change in avgPSNR/SSIM metrics on RTC set.
    
    Change-Id: Ic0f4f7f3487c37b9a9adb4781ae5edfed7140a57

[33mcommit df15220a89035d3599939ab81af8fa2552233785[m
Merge: 9336e0162 577d4fa79
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Oct 18 00:55:36 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize idct with mmi"

[33mcommit 9336e01621698b1802d4fe3522d36ed19efc9f0c[m
Merge: 0d2e95193 580d32240
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Oct 17 16:03:29 2017 +0000

    Merge changes I17fff122,Ic149e3cb
    
    * changes:
      Add 4 to 3 scaling SSSE3 [1;31moptim[mization
      Test extreme inputs in frame scale functions

[33mcommit 577d4fa792f6e12124b116b52ec23294201f18bc[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 13 16:20:21 2017 +0800

    vp8: [loongson] [1;31moptim[mize idct with mmi
    
    1. vp8_dequant_idct_add_y_block_mmi
    2. vp8_dequant_idct_add_uv_block_mmi
    
    Change-Id: I9987147be2685ac79d4b045d1d56f6709ee1223c

[33mcommit 580d32240f9a2f7783ced9b0e409de62ba07f4e1[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 11 11:59:04 2017 -0700

    Add 4 to 3 scaling SSSE3 [1;31moptim[mization
    
    Note this change will trigger the different C version on SSSE3 and
    generate different scaled output.
    
    Its speed is 2x compared with the version calling vpx_scaled_2d_ssse3().
    
    Change-Id: I17fff122cd0a5ac8aa451d84daa606582da8e194

[33mcommit 3e2770de4fe8814f0bcc9ca96f89014adb0905ff[m
Merge: 28d1c0535 f70de09f2
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Oct 13 00:37:57 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize dct with mmi"

[33mcommit f70de09f2a3c6e77086c7fb1cafd1da209befc6f[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 13 14:03:11 2017 +0800

    vp8: [loongson] [1;31moptim[mize dct with mmi
    
    1. vp8_short_fdct4x4_mmi
    2. vp8_short_fdct8x4_mmi
    3. vp8_short_walsh4x4_mmi
    
    Change-Id: I89a7df25cfd09fae309fac257ad8b6a3dc1c8acb

[33mcommit bc4098a8e969f1ab3281a801a4ba3b78d788cec3[m
Merge: 72c69e14a e8ed2bb76
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Thu Oct 12 00:33:17 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize quantize with mmi"

[33mcommit e8ed2bb76258f5d0d2def256b43ed6938b6d6a45[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Mon Sep 11 18:07:25 2017 +0800

    vp8: [loongson] [1;31moptim[mize quantize with mmi
    
    1. vp8_fast_quantize_b_mmi
    2. vp8_regular_quantize_b_mmi
    
    Change-Id: Ic6e21593075f92c1004acd67184602d2aa5d5646

[33mcommit 16166bfdaaf7ed7f46dcd7c23da8df864ff1df82[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 4 09:55:56 2017 -0700

    Add 4 to 1 scaling x86 [1;31moptim[mization
    
    Change-Id: I51c190f0a88685867df36912522e67bdae58a673

[33mcommit 9a71811d98825857e42042344d42822b4b1a7e79[m
Merge: ffa3a3c44 6543213e8
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 4 16:15:14 2017 +0000

    Merge changes Id6a8c549,Ib1e0650b,Ic369dd86
    
    * changes:
      Refactor x86/vpx_subpixel_8t_intrin_ssse3.c
      Add vpx_dsp/x86/mem_sse2.h
      Add transpose_8bit_{4x4,8x8}() x86 [1;31moptim[mization

[33mcommit 67c38c92e7ccff356516405db9b301e39c5f21a6[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Oct 2 13:01:56 2017 -0700

    Add transpose_8bit_{4x4,8x8}() x86 [1;31moptim[mization
    
    Change-Id: Ic369dd86b3b81686f68fbc13ad34ab8ea8846878

[33mcommit 0e55b0b0a7394a47ebd911ae3dd538cd042e592b[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Sep 12 11:49:58 2017 -0700

    Add 4 to 3 scaling NEON [1;31moptim[mization
    
    Speed comparing with the one calling vpx_scaled_2d_neon()
      ~1.7 x in general
      ~2.8x for BILINEAR filter
    
    BUG=webm:1419
    
    Change-Id: I8f0a54c2013e61ea086033010f97c19ecf47c7c6

[33mcommit f12e786c543176f4fd2e71190c423c282598345e[m
Merge: 819c5b365 73102d1ed
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 27 00:49:28 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize copymen with mmi"

[33mcommit 73102d1ed20d79a22b977555e775d199101de53b[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 6 17:57:16 2017 +0800

    vp8: [loongson] [1;31moptim[mize copymen with mmi
    
    1. vp8_copy_mem16x16_mmi
    2. vp8_copy_mem8x8_mmi
    3. vp8_copy_mem8x4_mmi
    
    Change-Id: I3de29a11fa7402df0e48bbb944440b1e66498a65

[33mcommit 2aacfa1acd016864af0f996193e957286c494603[m
Merge: 65f1c9065 b81de6617
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Sep 15 23:53:40 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize dequantize with mmi"

[33mcommit b81de66171216a094e48f45f609fc56ac3f54277[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 6 11:30:25 2017 +0800

    vp8: [loongson] [1;31moptim[mize dequantize with mmi
    
    1. vp8_dequantize_b_mmi
    2. vp8_dequant_idct_add_mmi
    
    Change-Id: I505f8afb7a444173392b325906e6a4f420f00709

[33mcommit 5b558592f564be258671f73175d5a4f987cf321c[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 6 08:51:21 2017 +0800

    vp8: [loongson] [1;31moptim[mize idctllm with mmi
    
    1. vp8_short_idct4x4llm_mmi
    2. vp8_short_inv_walsh4x4_mmi
    3. vp8_dc_only_idct_add_mmi
    
    Change-Id: I616923681e79d78607a4988608fc39df77b093f4

[33mcommit fa01426ade0c95a6872fdff8b6d20186f86e135d[m
Merge: c39cd9235 761f2f5cb
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Sep 13 01:05:46 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize loopfilter with mmi"

[33mcommit a9bbe53dbb8ce599100ceb7ce864d8d81dfcb858[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Sep 7 12:50:36 2017 -0700

    Add 4 to 1 scaling NEON [1;31moptim[mization
    
    BUG=webm:1419
    
    Change-Id: If82a93935d2453e61b7647aae70983db1740bec7

[33mcommit 761f2f5cb45faf042028dd7bc642b9224c53fadd[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Sep 8 09:42:51 2017 +0800

    vp8: [loongson] [1;31moptim[mize loopfilter with mmi
    
    1. vp8_loop_filter_horizontal_edge_mmi
    2. vp8_loop_filter_vertical_edge_mmi
    3. vp8_mbloop_filter_horizontal_edge_mmi
    4. vp8_mbloop_filter_vertical_edge_mmi
    5. vp8_loop_filter_simple_horizontal_edge_mmi
    6. vp8_loop_filter_simple_vertical_edge_mmi
    
    Change-Id: Ie34bbff3a16cff64e39a50798afd2b7dac9bcdc3

[33mcommit 9a2dd7e67ed20a7389db618f1a8a25d5b3a3c89c[m
Merge: d7caee217 ef41c6286
Author: James Zern <jzern@google.com>
Date:   Fri Sep 8 19:23:40 2017 +0000

    Merge changes I9ec438aa,I99c954ff
    
    * changes:
      Update convolve functions' assertions
      Add 2 to 1 scaling NEON [1;31moptim[mization

[33mcommit 43cbdc216d218c18feb7188c68d6293927ffe7f8[m
Merge: 2c7b7424c 009521379
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Sep 8 00:59:31 2017 +0000

    Merge "vp8: [loongson] [1;31moptim[mize sixtap predict with mmi"

[33mcommit 2c7b7424c5c3043b363ac23498c4b5dc3505f990[m
Merge: 3ec20445b f4150163a
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Sep 8 00:55:14 2017 +0000

    Merge "vpxdsp: [loongson] [1;31moptim[mize sad functions with mmi"

[33mcommit 71b38a144ebc50cb8bb043366ae959267acf4206[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Sep 5 15:07:00 2017 -0700

    Add 2 to 1 scaling NEON [1;31moptim[mization
    
    BUG=webm:1419
    
    Change-Id: I99c954ffa50a62ccff2c4ab54162916141826d9b

[33mcommit 00952137906fa8f9a07544cc56c88dd52c17d4f7[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Sun Sep 3 00:40:37 2017 +0800

    vp8: [loongson] [1;31moptim[mize sixtap predict with mmi
    
    1. vp8_sixtap_predict16x16_mmi
    2. vp8_sixtap_predict8x8_mmi
    3. vp8_sixtap_predict8x4_mmi
    4. vp8_sixtap_predict4x4_mmi
    
    Change-Id: I186669d1a1d998a0f3ba3a548e25eee8b52c251b

[33mcommit f4150163a24008a12d4e1ceb9b5f7ee3a8f80360[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Sat Sep 2 15:46:38 2017 +0800

    vpxdsp: [loongson] [1;31moptim[mize sad functions with mmi
    
    1. vpx_sadWxH_c
    2. vpx_sadWxH_avg_c
    3. vpx_sadWxHx3_c
    4. vpx_sadWxHx8_c
    5. vpx_sadWxHx4d_c
    
    Change-Id: Ie13161e3d73a052ea6ea7bac9cfadf55598fea7a

[33mcommit ece1989fa2da10eecf1cb1dde1d5f8afa9480b8b[m
Merge: 34e48d611 9e4647c7a
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Aug 25 06:44:02 2017 +0000

    Merge "vpx_dsp:loongson [1;31moptim[mize vpx_varianceWxH_c,vpx_sub_pixel_varianceWxH_c and vpx_sub_pixel_avg_varianceWxH_c with mmi."

[33mcommit 9e4647c7abc3ec69fe3ddd7537d7e9954c4d3596[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Thu Aug 24 23:11:58 2017 +0800

    vpx_dsp:loongson [1;31moptim[mize vpx_varianceWxH_c,vpx_sub_pixel_varianceWxH_c and vpx_sub_pixel_avg_varianceWxH_c with mmi.
    
    Change-Id: Ia576a721df6312329b599c31cfe1fb1267a9f174

[33mcommit d080c9252488727fa7ae6e518db694b703c01e48[m
Merge: 30c261b1e 59e065b6e
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Thu Aug 24 00:55:11 2017 +0000

    Merge "vpx_dsp:loongson [1;31moptim[mize vpx_mseWxH_c(case 16x16,16X8,8X16,8X8) with mmi."

[33mcommit 59e065b6edfa4f62edf23b7c0365b99f5ef86b5e[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Tue Aug 22 08:44:36 2017 +0800

    vpx_dsp:loongson [1;31moptim[mize vpx_mseWxH_c(case 16x16,16X8,8X16,8X8) with mmi.
    
    Change-Id: I2c782d18d9004414ba61b77238e0caf3e022d8f2

[33mcommit bff5aa982708c5d471671c4c8edbfdb607018960[m
Merge: 661efeca9 7d82e57f5
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Tue Aug 22 00:37:23 2017 +0000

    Merge "vpx_dsp:loongson [1;31moptim[mize vpx_subtract_block_c (case 4x4,8x8,16x16) with mmi."

[33mcommit 661efeca97d5d46d932fc3ea799ffe84904f3a5c[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Aug 2 14:28:05 2017 -0700

    quantize test: test _fp_ version of quantize
    
    None of the x86 [1;31moptim[mizations pass the tests.
    
    Change-Id: Ic67f2ba1977b657e68f2a13b0711fc5fcbafd909

[33mcommit 7d82e57f5b7c1eab79c9b06e8542942b4b016b1c[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Wed Aug 2 14:17:09 2017 +0800

    vpx_dsp:loongson [1;31moptim[mize vpx_subtract_block_c (case 4x4,8x8,16x16) with mmi.
    
    Change-Id: Ia120ad1064d0b6106d9685cf075bdab373eef19e

[33mcommit f95686895b041555d533840aed8928a08f2f1de0[m
Merge: 0472382db d72e20b12
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Aug 16 16:36:37 2017 +0000

    Merge changes I08b562b6,Ia275940a,I51106e90
    
    * changes:
      Add vpx_highbd_idct32x32_{34, 135, 1024}_add_{sse2, sse4_1}
      Update highbd idct x86 [1;31moptim[mizations.
      Update 32x32 idct sse2 and ssse3 [1;31moptim[mizations.

[33mcommit 69775d2f40161cf00d2df99ca4c896dd727ed27d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Aug 14 16:47:24 2017 -0700

    Update highbd idct x86 [1;31moptim[mizations.
    
    BUG=webm:1412
    
    Change-Id: Ia275940af7d7d8637e9a851a9e39d655bfbe4069

[33mcommit 3f05a70c415c18e9fd2982dbfc59fe790aa1413d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Aug 10 15:17:48 2017 -0700

    Update 32x32 idct sse2 and ssse3 [1;31moptim[mizations.
    
    Change-Id: I51106e90344035452621c49a6e1be7d5276b6c70

[33mcommit 746c0eab3bebc03607bca8d54d59f3790c9c091c[m
Author: James Zern <jzern@google.com>
Date:   Mon Aug 14 09:31:14 2017 -0700

    disable SSSE3/VP9QuantizeTest* in hbd builds
    
    this test fails with the configuration similar to the assembly prior to:
    d52cb5972 quantize: copy ssse3 [1;31moptim[mizations to intrinsics
    
    BUG=webm:1458
    
    Change-Id: Idc5c0b84c0598259fc49609a9f0756de531d3baf

[33mcommit 0b393ae505b80ef710658fba94bfe06917380d64[m
Merge: 68805583e d52cb5972
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Aug 10 15:42:20 2017 +0000

    Merge "quantize: copy ssse3 [1;31moptim[mizations to intrinsics"

[33mcommit d52cb5972930b68b0d0ce15b45d1a788dcd78322[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Aug 3 10:22:07 2017 -0700

    quantize: copy ssse3 [1;31moptim[mizations to intrinsics
    
    Fairly minor differences from sse2. pabsw and psignw are the big gains.
    Also re-uses some values in eob calculation to avoid an extra pcmp.
    
    Fixes test failures in HBD and OS X builds.
    
    Allows using it in 32bit builds, where it is about 40% faster than sse2.
    
    Substantially faster than the assembly for skip_block. 10-20% faster the
    rest of the time.
    
    Change-Id: If783bb3567e561e47667e10133b9c84414a334e2

[33mcommit c9fb719ee15b3c591bdf67618d41779dc0731da3[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Aug 3 17:42:54 2017 -0700

    Update butterfly() in idct x86 [1;31moptim[mizations.
    
    Change-Id: Ic73e03bab9fdc085146f52094014db4af36ad701

[33mcommit 6624f20785bb782ad02edc27a60403946c11ff29[m
Merge: 6843e7c7f 15a47db73
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Aug 3 20:51:02 2017 +0000

    Merge changes I76727df0,I66297d78,I1d000c6b
    
    * changes:
      Extract inlined 16x16 idct sse2 code into header file
      Add transpose_32bit_8x4() sse2 [1;31moptim[mization
      Update x86 idct [1;31moptim[mization

[33mcommit 8c0ab7607e14cf63eb56a3f92b971100b4c9ef31[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Aug 2 16:15:58 2017 -0700

    Add transpose_32bit_8x4() sse2 [1;31moptim[mization
    
    Change-Id: I66297d78b38db718cfe3ebb8ea972f5a72c17955

[33mcommit 6738ad7aafd8c62ae7c421d9ec494714d5d99409[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Jul 31 17:46:20 2017 -0700

    Update x86 idct [1;31moptim[mization
    
    Move constant coefficients preparation into inline function.
    
    Change-Id: I1d000c6b161794c8828ff70768439b767e2afea1

[33mcommit 2758de5cb259b37e92fbf22ba6325bb84531c0f4[m
Author: Shiyou Yin <yinshiyou-hf@loongson.cn>
Date:   Fri Jun 23 16:26:30 2017 +0800

    loongson mmi configuration patch.
    
    enable loongson mmi [1;31moptim[mization: ../configure --enable-mmi
    
    Change-Id: I7792c3adeac1d5b573917d7857bba6c1cc05fea5

[33mcommit d35b6273406ac7ee04576d3d160842511633b544[m
Author: James Zern <jzern@google.com>
Date:   Sat Jul 29 11:07:01 2017 -0700

    Revert "Rewrite vpx_highbd_idct8x8_{12,64}_add_sse2"
    
    This reverts commit aa1c4cd140007ea5b4be99732fbb23d1fd8cf2b5.
    
    This fails the following tests with extreme input coefficients:
    SSE2/InvTrans8x8DCT.CompareReference/0
    SSE2/InvTrans8x8DCT.CompareReference/2
    
    previously the [1;31moptim[mized path was skipped in this range
    
    Change-Id: I9af015a46eba96208834a219fafd651d37556a80

[33mcommit 7105e66d19811add930055959598beb68f21df29[m
Author: Urvang Joshi <urvang@google.com>
Date:   Fri Jul 28 15:57:22 2017 -0700

    Remove the DP version of vp9_[1;31moptim[mize_b().
    
    The greedy version was already enabled by default here:
    https://chromium-review.googlesource.com/c/546848/
    
    And the speed+compression gains from greedy version were already
    mentioned here:
    https://chromium-review.googlesource.com/c/531675/
    
    Change-Id: Iad9f7d03490c845ad1e230af028c9d39edddca97

[33mcommit b72d3e8a25720494cef1911f9b9dc3e2c9090323[m
Author: Han Shen <shenhan@google.com>
Date:   Wed Jul 12 12:56:19 2017 -0700

    Earmark extra space for VSX.
    
    Backend specific [1;31moptim[mization for PPC VSX reads 16 bytes, whereas arm neon /
    sse2 only reads <= 8 bytes. Although the extra bytes read are actually never
    used, this is not a warrant for groping around.  Fixed by allocating more when
    building for VSX. This is reported by asan.
    
    Also note - PPC does have assembly that loads 64-bit content from memory - lxsdx
    loads one 64-bit doubleword (whereas lxvd2x loads two 64-bit doubleword) from
    memory. However, we only have "vec_vsx_ld" builtins that mapped to lxvd2x, no
    builtins to lxsdx. The only way to access lxsdx is through inline assembly,
    which does not fit well in the origin paradigm.
    
    Refer:
      vsx:
        vpx_tm_predictor_4x4_vsx @ third_party/libvpx/git_root/vpx_dsp/ppc/intrapred_vsx.c
      neon:
        vpx_tm_predictor_4x4_neon @ third_party/libvpx/git_root/vpx_dsp/arm/intrapred_neon_asm.asm
      sse2:
        tm_predictor_4x4 @ third_party/libvpx/git_root/vpx_dsp/x86/intrapred_sse2.asm
    
    BUG=b/63112600
    
    Tested:
      asan tests passed.
    
    Change-Id: I5f74b56e35c05b67851de8b5530aece213f2ce9d

[33mcommit 56d3f1573a86ae466e1284d637e5798a481519aa[m
Merge: 817f68cdc 101981b73
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Jul 18 20:42:39 2017 +0000

    Merge changes I62c2e313,Ibd7a0337,I94e1d886
    
    * changes:
      quantize test: test sse2 and avx [1;31moptim[mizations
      quantize test: extend arrays
      quantize test: restrict and correct input

[33mcommit 4b9a848bb3d0f08ab423aca795132af9f2aea7bf[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Jul 14 11:29:32 2017 -0700

    variance: call C comp_avg_pred
    
    Keep [1;31moptim[mized code out of the reference implementation. This matches
    the style of the other sub calls.
    
    Change-Id: I3da6acd4f2c647b029c420e22ac9410a18259689

[33mcommit 101981b736a7d5fbfef41a9785cac17070910e4b[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Jul 18 10:06:23 2017 -0700

    quantize test: test sse2 and avx [1;31moptim[mizations
    
    ssse3 does not pass either of the tests.
    
    avx 32x32 does not pass.
    
    Change-Id: I62c2e31336fd2327327afaa0da896ad79a3def44

[33mcommit c7ebe8225334d0b057505df0f76ee3db74da054b[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Jul 18 09:55:45 2017 -0700

    quantize test: extend arrays
    
    Officially the quant structures are 8 elements, with one dc element and
    7 repeated ac elements. The low bit depth [1;31moptim[mizations take advantage
    of this to fill the xmm registers. The high bit depth version manually
    duplicates the values.
    
    If all the [1;31moptim[mizations were unified, the structure sizes could be
    greatly reduced.
    
    Change-Id: Ibd7a0337a7832ce2a1a05ee433c310077e1059ae

[33mcommit 1dee320446562515ba9a0343a32ff5aa6e1aec96[m
Merge: 7d5afa227 5322a31b1
Author: Urvang Joshi <urvang@google.com>
Date:   Wed Jul 12 00:08:56 2017 +0000

    Merge "Remove the token state array from greedy [1;31moptim[mize_b."

[33mcommit 5322a31b189178ad714aa03e42760e4cacd45a9e[m
Author: Urvang Joshi <urvang@google.com>
Date:   Tue Jul 11 13:05:29 2017 -0700

    Remove the token state array from greedy [1;31moptim[mize_b.
    
    Reduces memory usage, and speeds up encoding for some difficult clips.
    No impact on output or metrics.
    
    Ported from aomedia patch:
    https://aomedia-review.googlesource.com/c/14501
    
    Change-Id: I26ec69af8336f9e80da486a1cfbfc89a3596954d

[33mcommit 30eeb4dc32161dedd487674771eaa0bc89e57459[m
Merge: 6ff5de68d 4bb99ee27
Author: Urvang Joshi <urvang@google.com>
Date:   Sat Jun 24 00:58:24 2017 +0000

    Merge "Enable greedy version of [1;31moptim[mize_b() in VP9 by default."

[33mcommit 6ff5de68ddae842a92459ac0ee39fc141f92bdf9[m
Merge: ee1fcb0e6 b8a4b5dd8
Author: Linfeng Zhang <linfengz@google.com>
Date:   Sat Jun 24 00:51:07 2017 +0000

    Merge "Cosmetics, 8x8 idct SSE2 [1;31moptim[mization"

[33mcommit 4bb99ee27e9edeec2fa81d8e91f126a189e342b5[m
Author: Urvang Joshi <urvang@google.com>
Date:   Fri Jun 23 17:04:58 2017 -0700

    Enable greedy version of [1;31moptim[mize_b() in VP9 by default.
    
    Improvements were already mentioned in the previous patch:
    https://chromium-review.googlesource.com/#/c/531675/
    
    Change-Id: I4906ab1c61c25a815bdeb986016fad6dcb69eb71

[33mcommit b8a4b5dd8d2ae895ff08e88c2cd2b9b8c8bf17c5[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Jun 21 15:18:17 2017 -0700

    Cosmetics, 8x8 idct SSE2 [1;31moptim[mization
    
    Change-Id: Id21fa94fd323e36cd19a2d890bf4a0cafb7d964d

[33mcommit 9e03eedf625c6248f04d1f055f2ca60caac1c877[m
Merge: 492d52b9c c7e4917e9
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Jun 21 00:38:24 2017 +0000

    Merge changes Ib26dd515,Ie60dabc3
    
    * changes:
      Clean 8x8 idct x86 [1;31moptim[mization
      Remove vpx_idct8x8_64_add_ssse3()

[33mcommit c7e4917e974e30f292ca83f744b8c8bee417b461[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Jun 15 11:29:07 2017 -0700

    Clean 8x8 idct x86 [1;31moptim[mization
    
    Create load_buffer_8x8() and write_buffer_8x8().
    
    Change-Id: Ib26dd515d734a5402971c91de336ab481b213fdf

[33mcommit a4ea7e131b139c5cb68e50f9d2518da53695a810[m
Author: Urvang Joshi <urvang@google.com>
Date:   Thu Jun 8 14:51:01 2017 -0700

    VP9: Add greedy version of av1_[1;31moptim[mize_b().
    
    This was ported from the greedy version in AV1, written by Dake He
    (dkhe@google.com).
    See:
    https://aomedia.googlesource.com/aom/+/master/av1/encoder/encodemb.c#137
    
    Greedy version is disabled by default, but can be picked by setting
    USE_GREEDY_OPTIMIZE_B to 1.
    To be enabled by default later.
    
    This is both faster and better in terms of compression.
    
    Compression Improvement:
    ------------------------
    lowres: -0.119
    midres: -0.064
    hdres:  -0.405
    
    Speed Improvement:
    ------------------
    (Based on encode time of 3 videos of different difficulties at
    3 different target bitrates)
    With --cpu-used=0: 0.38% to 5.55% faster
    With --cpu-used=1: 0.24% to 2.79% faster
    With --cpu-used=2: 0.29% to 1.46% faster
    
    Change-Id: Ia7a23b3b244ad8eb253ac9e43cd03c5e021d2635

[33mcommit 903375a48a5013a454a9b1923777b94ac5d02981[m
Merge: 9cea3a3c4 eae7cf236
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jun 8 15:19:35 2017 +0000

    Merge "fdct16x16 neon [1;31moptim[mization"

[33mcommit eae7cf236835e2ecc048abf1b30976ec10496bca[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu May 25 10:02:34 2017 -0700

    fdct16x16 neon [1;31moptim[mization
    
    Roughly 2x speedup. Since the only change for HBD is to store(), the
    improvement appears to hold there as well.
    
    BUG=webm:1424
    
    Change-Id: I15b813d50deb2e47b49a6b0705945de748e83c19

[33mcommit b11a37f5403c64099f0cf69024004caf86c207d9[m
Merge: f0279ceb9 9b0d306a2
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed May 24 18:32:01 2017 +0000

    Merge changes I31fa6ef8,I228c6f29
    
    * changes:
      sub pel avg variance neon: add neon [1;31moptim[mizations
      sub pel variance neon: normalize variable names

[33mcommit 188d58eaa99ed5b47af77b354e303a82614ce62a[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu May 4 08:39:12 2017 -0700

    sub pel variance neon: 4x block sizes
    
    Add [1;31moptim[mizations for blocks of width 4
    
    BUG=webm:1423
    
    Change-Id: Idfb458d36db3014d48fbfbe7f5462aa6eb249938

[33mcommit 9b0d306a2fcbdefe31fa35a367293dbf23af0048[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed May 3 12:28:32 2017 -0700

    sub pel avg variance neon: add neon [1;31moptim[mizations
    
    These are missing an [1;31moptim[mized version of vpx_comp_avg_pred
    
    BUG=webm:1423
    
    Change-Id: I31fa6ef842e98f7ff3ea079ffed51ae33178e2ed

[33mcommit 3453c8d6c48d55a76ee51e89f41e39612b9ff363[m
Merge: 83a2bfd7d 069eedb3a
Author: Jerome Jiang <jianj@google.com>
Date:   Sat May 6 01:28:31 2017 +0000

    Merge "vp9: Neon [1;31moptim[mization for denoiser. Add unit tests."

[33mcommit 069eedb3a03ea42dfd79991b6fece4c283c648d8[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Apr 25 15:29:43 2017 -0700

    vp9: Neon [1;31moptim[mization for denoiser. Add unit tests.
    
    Denoiser on Neon is 5x faster than C code.
    
    BUG=webm:1420
    
    Change-Id: I805ab64f809ff2137354116be6213e7ec29c1dcb

[33mcommit 2346a6da4a3703eb2cb346f3b4a8e6d8a25c70f6[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed May 3 12:06:29 2017 -0700

    subpel variance neon: add mixed sizes
    
    Add support for everything except block sizes of 4.
    
    Performance is better but numbers will improve again when the variance
    [1;31moptim[mizations land.
    
    BUG=webm:1423
    
    Change-Id: I92eb4312b20be423fa2fe6fdb18167a604ff4d80

[33mcommit 4ba20da8b11c4c633a0f48ae1db1b683929c169a[m
Merge: 7178e68bb aa5a94199
Author: James Zern <jzern@google.com>
Date:   Sat Apr 15 00:26:08 2017 +0000

    Merge "Add AVX2 [1;31moptim[mization to copy/avg functions"

[33mcommit aa5a9419926abe3034d1791ed20cca853e5281db[m
Author: Yi Luo <luoyi@google.com>
Date:   Tue Mar 28 15:30:07 2017 -0700

    Add AVX2 [1;31moptim[mization to copy/avg functions
    
    Change-Id: Ibcef70e4fead74e2c2909330a7044a29381a8074

[33mcommit bdb593ab200fc4c4e1f0d4cab35ea7963f61c20e[m
Merge: f0ccaff55 28a862214
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Apr 14 04:10:55 2017 +0000

    Merge "vpx_comp_avg_pred: sse2 [1;31moptim[mization"

[33mcommit 28a8622143e03359cda6b9f2ae603015c501ab87[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Mar 23 14:54:48 2017 -0700

    vpx_comp_avg_pred: sse2 [1;31moptim[mization
    
    Provides over 15x speedup for width > 8.
    
    Due to smaller loads and shifting for width == 8 it gets about 8x
    speedup.
    
    For width == 4 it's only about 4x speedup because there is a lot of
    shuffling and shifting to get the data properly situated.
    
    BUG=webm:1390
    
    Change-Id: Ice0b3dbbf007be3d9509786a61e7f35e94bdffa8

[33mcommit 6fc2e57c2ca6c9a7b1eecb2c7d93b65222b6727d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Apr 5 14:41:35 2017 -0700

    Update 32x32 high bitdepth idct NEON [1;31moptim[mization
    
    Preparation of CONVERT_TO_BYTEPTR/SHORTPTR clean up.
    
    BUG=webm:1388
    
    Change-Id: I928d30a5698023bb90888d783cf81c51ec183760

[33mcommit 0842daa24e1a56d0c7f98e1ba44e330738587273[m
Merge: 288277831 3a6ec9ea7
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Fri Mar 17 16:18:20 2017 +0000

    Merge "vp9_[1;31moptim[mize_b: Combine extrabits cost with token lookup"

[33mcommit 3a6ec9ea72b7cc85f7dceb0753ee2d665ee2ef8c[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Thu Mar 16 16:34:26 2017 -0700

    vp9_[1;31moptim[mize_b: Combine extrabits cost with token lookup
    
    About 0.6% fewer cycles spent in vp9_[1;31moptim[mize_b.
    
    Change-Id: I2ae62a78374c594ed81d4e3100a5848e2f6f2c4e

[33mcommit 4e1ba35458bf933113aa1ec74ca306c1fd47e9af[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 20 20:15:40 2017 -0800

    vp9: Fix for non-rd pickmode for high-bitdepth build.
    
    Use the simple block_yrd under certain conditions.
    The [1;31moptim[mization code is completed but the speed is still slower
    (~6% on 720p) than the low-bitdepth build.
    
    For now, use the more complex block_yrd under certain conditions
    (always use it for speed <= 5, otherwise use it on key frames and for
    bsize >= 32x32).
    
    This gives about ~2-3% gain in quality for speed 7 on RTC set
    (over high bitdepth build), with about the same encoder fps as the
    low bitdepth build.
    
    Change-Id: Ibe92a1945d0bd635f880befb4c815727df62d754

[33mcommit 9cb470eba78235962d7f3ffd3314f1004379ecee[m
Merge: 3e7025022 bf05cd3c9
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Feb 17 22:11:08 2017 +0000

    Merge "vp8_short_fdct4x4: verify [1;31moptim[mized functions"

[33mcommit 1f8e8e5bf1eff47c22bcdfac5fe045d1d33ef01b[m
Author: Yi Luo <luoyi@google.com>
Date:   Fri Feb 17 10:59:46 2017 -0800

    Fix idct8x8 SSSE3 SingleExtremeCoeff unit tests
    
    - In SSSE3 [1;31moptim[mization, 16-bit addition and subtraction would
      overflow when input coefficient is 16-bit signed extreme values.
    - Function-level speed becomes slower (unit ms):
      idct8x8_64: 284 -> 294
      idct8x8_12: 145 -> 158.
    
    BUG=webm:1332
    
    Change-Id: I1e4bf9d30a6d4112b8cac5823729565bf145e40b

[33mcommit bf05cd3c99f07d7b9195e71918c809b9c287db00[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 23 16:45:03 2016 -0700

    vp8_short_fdct4x4: verify [1;31moptim[mized functions
    
    Change-Id: I7c7f5dfabde65c09f111fb0ced0e3ad231ee716e

[33mcommit 22dcfa80aa1ad33951b9fb0171e023c2a209d57d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Feb 7 11:46:36 2017 -0800

    vp9: Non-rd mode: use simple block_yrd for 8 bit high bitdepth builds
    
    Temporary fix until [1;31moptim[mization work for block_yrd is completed.
    This essentially reverts back to the state before the change:
    https://chromium-review.googlesource.com/c/433821/
    
    Compression loss is about ~5-6% on RTC set.
    Speed-up (from using this simple/model-based block_yrd) over the low
    bitdepth builds (which uses more complex block_yrd) is ~5% on 720p.
    
    Change-Id: Ie0af9eb0d111e5595f587870c44f08317403b8d8

[33mcommit 37cd112b0f1150679b0966bee13ec9ff8e09a642[m
Merge: 3b2d08a93 519b2e48a
Author: Hui Su <huisu@google.com>
Date:   Wed Jan 25 22:49:29 2017 +0000

    Merge "Fix an overflow warning in [1;31moptim[mize_b()"

[33mcommit 519b2e48a814e13a24177b1afd264edba7a86ef5[m
Author: Hui Su <huisu@google.com>
Date:   Mon Jan 23 11:25:31 2017 -0800

    Fix an overflow warning in [1;31moptim[mize_b()
    
    BUG=webm:1361
    
    Change-Id: Ib840bf3b39f7b3c8c017d3488a83434e9a0f45f5

[33mcommit c23970ec254a3328c4fcf8387b4444a724a627af[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Dec 22 10:04:42 2016 -0800

    postproc: vpx_mbpost_proc_down_neon
    
    This was much more amenable to [1;31moptim[mization than the across filter.
    Speedup of almost 2.5x
    
    BUG=webm:1320
    
    Change-Id: I49acc0f9cb2e7642303df90132cbc938acade4c4
For keyword regression:
[33mcommit 559166acfe37ef97bfd43835181773c904ac467b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Nov 17 09:47:03 2017 -0800

    vp9-svc: Enbale scale partition reference frames.
    
    For reference frames: enable scale partition for
    superblocks with low source sad or if bsize on lower-resoln
    is at least 32x32.
    
    Keep feature disabled for base temporal layer.
    
    Small [1;31mregression[m in avgPNSR/SSIM metrics, ~0.5-1%.
    Speedup ~2-3% on mac for SVC (3 spatial/3 temporal layers) at speed 7.
    
    Change-Id: I5987eb7763845b680059128b538bb5188be0cca5

[33mcommit bcbc6ed82df08ea7b02b5a7b996ad4cbb80e1293[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 6 22:14:56 2017 +0000

    Revert "Speed >=5 real-time: add TM intra mode for high_source_sad."
    
    This reverts commit 9311ef18b4b4eff0da3adf9d702a34f489a270ff.
    
    Reason for revert:
    Notice small [1;31mregression[m in some clips.
    Will revisit in another change.
    
    Original change's description:
    > Speed >=5 real-time: add TM intra mode for high_source_sad.
    >
    > Small/neutral change in metrics or speed for ytlive.
    > Some improvement in quality on frames with big content change.
    >
    > Change-Id: Ib3b0703a5f28ea6710e90324436e27598ab7384d
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    
    Change-Id: I9d8ec5195bb05ddf329d325699355185affb9b13
    No-Presubmit: true
    No-Tree-Checks: true
    No-Try: true

[33mcommit 03e8f13337b26bf7940814065f909704c579bb30[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Sep 21 10:59:33 2017 -0700

    vp9: Modification to adapt the ARF usage for 1 pass vbr
    
    Add stats for past ARF usage, and use it to disable
    ARF usage based on some conditions.
    
    Overall improvement on ytlive set, reduces the [1;31mregression[m
    on the problem clips for this feature.
    
    Only affects when sf->use_altref_onepass is enabled
    (currently off by default).
    
    Change-Id: I66267f227ea132dc86acb730e9882f85bead2cdb

[33mcommit adbfc4308a7dfe4c31478ca36dc2719fcf21cfff[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Jul 11 11:31:01 2017 -0700

    vp9: Remove isolated skin & non-skin blocks.
    
    0.007% [1;31mregression[m on rtc and 0.004% gain on rtc_derf.
    1 thread on QVGA,VGA and HD has ~0.2% speed [1;31mregression[m while 2 threads has
    ~0.2% speed gain on Google Pixel.
    
    Change-Id: Ia4a6ec904df670d7001e35e070b01e34149d23dc

[33mcommit 14d47180435602d2905c078323eb788731d61974[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 7 11:33:40 2017 -0700

    vp9: SVC: Enable simple_block_yrd for temporal layers.
    
    Enable simple_block_yrd for temporal enhancement layers (TL > 0).
    And remove block size condiiton for SVC mode.
    Only affects speed >= 7 SVC.
    
    Speedup ~3-4%.
    avgPSNR [1;31mregression[m on RTC for (3 spatial, 3 temporal) layers: ~1%.
    
    Change-Id: Iff4fc191623b71c69cd373e7c0823385e7ac67ed

[33mcommit 13d4a0d011be218cbe513fdf72c5b3b262b476bc[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:50:19 2017 +0000

    Revert "Revert "vp8: Real-time mode: reduce mode_check_freq thresh for speed 10.""
    
    This reverts commit 3704807805895850671261fa4470f1ce41dd2ac9.
    
    Reason for revert: <INSERT REASONING HERE>
    Does not look to be the cause of the test failures.
    
    Original change's description:
    > Revert "vp8: Real-time mode: reduce mode_check_freq thresh for speed 10."
    >
    > This reverts commit 4a7424adba7a65766a92635dc67b6e7d94646693.
    >
    > Reason for revert: <INSERT REASONING HERE>
    > Possibly causing test failures in roll into chromium.
    >
    > Original change's description:
    > > vp8: Real-time mode: reduce mode_check_freq thresh for speed 10.
    > >
    > > Reduces quality [1;31mregression[m at speed 10 for real-time mode.
    > >
    > > Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8
    > >
    >
    > TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    > # Not skipping CQ checks because original CL landed > 1 day ago.
    >
    > Change-Id: I1defcb74e78a5a3bd29b7d1b21a96a79fa26a457
    >
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    NOPRESUBMIT=true
    NOTREECHECKS=true
    NOTRY=true
    
    Change-Id: I13d86a2a68b8aa8c0c7465e6e58cff0e00bc7862

[33mcommit 3704807805895850671261fa4470f1ce41dd2ac9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:48:13 2017 +0000

    Revert "vp8: Real-time mode: reduce mode_check_freq thresh for speed 10."
    
    This reverts commit 4a7424adba7a65766a92635dc67b6e7d94646693.
    
    Reason for revert: <INSERT REASONING HERE>
    Possibly causing test failures in roll into chromium.
    
    Original change's description:
    > vp8: Real-time mode: reduce mode_check_freq thresh for speed 10.
    >
    > Reduces quality [1;31mregression[m at speed 10 for real-time mode.
    >
    > Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8
    >
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    # Not skipping CQ checks because original CL landed > 1 day ago.
    
    Change-Id: I1defcb74e78a5a3bd29b7d1b21a96a79fa26a457

[33mcommit 4a7424adba7a65766a92635dc67b6e7d94646693[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 12 11:01:33 2017 -0700

    vp8: Real-time mode: reduce mode_check_freq thresh for speed 10.
    
    Reduces quality [1;31mregression[m at speed 10 for real-time mode.
    
    Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8

[33mcommit 2574573feaf47c685ccd9de72f300c043c615d2f[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue May 9 17:23:00 2017 -0700

    vp9: Wrap threshold tuning for HD only when denoiser is enabled.
    
    Fixes a speed [1;31mregression[m.
    
    Change-Id: I23d942e4af17fa81fe4a366c7369b3ad537e59b0

[33mcommit f16f08e55bce50f3b5200ba9ced2d044b151f8af[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Apr 10 13:55:35 2017 -0700

    vp9: speed >= 8: Adjust speed settings on ARM.
    
    Set adaptive_rd_thresh to 2 when simple block yrd is not used.
    
    Fix [1;31mregression[m caused by computing y sad without
    int_pro_motion_estimation on low res motion clips.
    
    Overall 0.07% quality loss on rtc_derf.
    
    Change only affects low res on speed 8.
    
    Change-Id: Ic6a188a56529f1034d6431005fb4b0e24e8a7e27

[33mcommit 3d1fa00fce0dc040dd0107d36b9b825a9b8f2f6d[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Feb 22 09:49:17 2017 -0800

    vp9: Only compute y_sad for golden in variance partition for speed < 8.
    
    Only affects speed 8. No obvious quality [1;31mregression[m. Systematic speed
    ups by ~1% on Nexus 6.
    
    Change-Id: Ia904ca28ea041c3281c532911ec38fb7d7f46a17

[33mcommit aa327a1ed4280bfa30953b2cb4c05c8a64b595a1[m
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Feb 2 17:51:01 2017 -0800

    vp9: speed 8: Tune threshold of ac skip and partitioning.
    
    Threshold for partitioning only affects VGA and lower res.
    0.07% quality [1;31mregression[m is observed in borg tests on rtc_derf
    and 0.2% [1;31mregression[m on rtc.
    5.6% speed up for low res and 6.8% for VGA on Nexus 6.
    
    Change-Id: If85a2919b48c991de66059c90f32ed06980452be

[33mcommit 969957f9f2a124861145a0d18781b855e98caa54[m
Author: Jingning Han <jingning@google.com>
Date:   Thu Jan 26 15:00:04 2017 -0800

    Fix real-time compression [1;31mregression[m in hbd mode
    
    This commit resolves the compression performance [1;31mregression[m in
    real-time encoding setting when high bit-depth mode is enabled.
    
    The current solution temporarily disables the SIMD implementations
    of vpx_satd, hadamard8x8, and hadamard16x16 in high bit-depth mode.
    
    The commit makes the coding results bit-wise identical between
    regular coding pipeline and high bit-depth at profile 0.
    
    BUG=webm:1365
    
    Change-Id: Icfb900821733749685370460a1a5a7e07f76f4bf

[33mcommit ac1358cd56b6b0c76d773703af2584bb3a204c33[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Jan 23 12:10:01 2017 -0800

    vp9: Copy partition using avg_source_sad.
    
    Affecting only speed 8.
    Speed tests on Nexus 6 show 4% faster for QVGA and 2.4% faster for VGA.
    Little/negligible quality [1;31mregression[m observed on both rtc and rtc_derf sets.
    
    Change-Id: I337f301a2db49a568d18ba7623160f7678399ae1

[33mcommit 40ffa2839f115beaa805159a74eef07ee36faa45[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Jan 23 15:58:15 2017 -0800

    vp9: Adjust the threshold to set avg_source_sad_sb flag.
    
    Affect only speed 8. Small/Negligible [1;31mregression[m on rtc set.
    
    Change-Id: I67a6b6b4008a22ed798bd980336d95bb799f64b4

[33mcommit 13234d3c433b6379ee1cc0de398dd71cef3f5907[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jan 19 10:07:12 2017 -0800

    Remove neon assembly for idct 16x16 and 8x8
    
    Tested using test/partial_idct_test.cc:DISABLED_Speed
    
    Both gcc 4.9 and clang 3.8 from the r13 Android NDK offer improvements
    using the intrinsics:
    <function>    <clang asm> <gcc asm> <clang intrin> <gcc intrin>
    idct16x16_256  1720ms      1703ms    1546ms         1554ms
    idct16x16_10   1320ms      1247ms     518ms          488ms
    idct16x16_1     107ms       108ms      64ms           68ms
    idct8x8_64      924ms       931ms     866ms          989ms
    idct8x8_12      826ms       824ms     519ms          514ms
    idct8x8_1       172ms       166ms     110ms          125ms
    
    idct8x8_64 isn't quite perfect (slight [1;31mregression[m with gcc intrinsics)
    but as a counter example idct16x16_10 goes from ~1300ms to ~500ms
    
    On a sample clip, clang improved from 48.5 to 49fps and gcc stayed roughly
    stable.
    
    BUG=webm:1303
    
    Change-Id: I9d4fd2b41b46ea6174a887b40a82c8e6e4769ed4

[33mcommit 0c65aed099565c3117dc4d3f89d0e782b4ff7577[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Jan 13 11:28:27 2017 -0800

    vp9: Set low variance flag when partition is copied.
    
    Also set the flag to 1 when exit early choosing 64x64 block
    such that skipping new mv for golden works in these scenerios.
    
    Change the size of prev_segment_id to the number of superblocks
    to save memory.
    
    Borg test shows quality [1;31mregression[m of 0.012% on average PSNR
    and 0.035% on SSIM.
    
    Change-Id: I5014224c8617d439d35c66ece3fed9ae30b31d23
For keyword speed:
[33mcommit 9f9d4f8dc9888d3b4d6c793d031f3ce5d407bd65[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Dec 1 15:20:41 2017 -0800

    vp9-svc: Allow for nonzero motion on spatial reference.
    
    For nonrd pickmode on a given spatial layer, the spatial
    (golden) reference was always only using zeromv for prediction.
    In this patch if the downsampling filter used for generating
    the lower spatial layer is an averaging filter (nonzero phase),
    we allow for subpel motion on the spatial (golden) reference to
    compensate for the shift. This is done by forcing the testing of
    nonzero motion mode to compensate for spatial downsampling shift.
    
    Improvement for cases where the downsampling is averaging filter.
    In the current code this is only done for generating
    resolutions <= QVGA.
    
    Improvement for avgPSNR/SSIM on RTC set for [1;31mspeed[m 7: ~1.2%.
    Gain is larger (~2-3%) for VGA clips with 2 spatial layers.
    ~1% [1;31mspeed[m slowdown for 3 layer SVC on mac.
    
    Change-Id: I9ec4fa20a38947934fc650594596c25280c3b289

[33mcommit 2e701f7c29eb56a67af3c79833146290bc21b412[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Nov 30 12:08:00 2017 -0800

    Nonrd-pickmode: avoid duplicate computation of UV predictor.
    
    Avoids duplicate computation of UV predictor.
    
    Bit-exact when static_threshold is zero.
    Small/neutral difference on RTC set with nonzero static_threshold
    (since UV predictor won't be skipped with this change).
    
    Small [1;31mspeed[m gain, ~1-2%, at [1;31mspeed[m 8.
    
    Change-Id: Iba8d22a307768b391e29d63c9826aac5a4d9c285

[33mcommit 49f51af4c95149915069084efab971d88700041d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Nov 29 13:37:21 2017 -0800

    vp9-svc: Don't allow encode_breakout on golden ref.
    
    For 1 pass cbr SVC: GOLDEN is the spatial reference,
    better not to check for encoder_breakout on this reference.
    
    Small positive ~0.075% (mostly neutral) gain in avgPSNR/SSIM metrics.
    No observed change in encoder [1;31mspeed[m.
    
    Change-Id: Ib337f16d6771105bf06384c6a23ad047fc690418

[33mcommit 559166acfe37ef97bfd43835181773c904ac467b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Nov 17 09:47:03 2017 -0800

    vp9-svc: Enbale scale partition reference frames.
    
    For reference frames: enable scale partition for
    superblocks with low source sad or if bsize on lower-resoln
    is at least 32x32.
    
    Keep feature disabled for base temporal layer.
    
    Small regression in avgPNSR/SSIM metrics, ~0.5-1%.
    Speedup ~2-3% on mac for SVC (3 spatial/3 temporal layers) at [1;31mspeed[m 7.
    
    Change-Id: I5987eb7763845b680059128b538bb5188be0cca5

[33mcommit 849b3c238d3bc3a1d038d15413b7c96694285ffe[m
Merge: c66eeab30 44473e7eb
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Nov 17 10:34:56 2017 +0000

    Merge "Disable allow_partition_search_skip for [1;31mspeed[m 2."

[33mcommit 44473e7eb9cd8a83fba8f68604e371b03237423d[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Nov 16 16:15:06 2017 +0000

    Disable allow_partition_search_skip for [1;31mspeed[m 2.
    
    When allow_partition_search_skip  is set the two pass code
    can optionally skip the partition search in the rd loop if the image
    appears static (based on selection of 0,0 motion).
    
    Unfortunately 0,0 motion does not necessarily mean that there are
    no meaningful changes or that motion or intra modes will not be selected
    in the second pass.
    
    Disabling "allow_partition_search_skip" may hurt the encode [1;31mspeed[m a little
    for a small number of clips but can have a big impact on compression.
    The most notable example of this in our test sets is "bridge_close_cif"
    where this change gives a gains of 18%, 12% and 16% in opsnr, ssim and
    psnr-hvs.
    
    Change-Id: I765e288b5c0cd82bce00a148e7653a21e9203024

[33mcommit b3c93d60c224a672c403bf36fbdecf20314aa2fa[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Nov 14 19:52:54 2017 -0800

    vp9-svc: Fix flag for usage of reuse-lowres partition
    
    Fix/cleaup the conditioning for usage of the reuse-lowres
    partition feature.
    
    Replace the non-reference condition with the top temporal
    layer, and put this condition in the [1;31mspeed[m feature.
    
    This prevents doing update_partition_svc() on every
    VGA frame, instead it will now only do update for VGA in
    the top temporal layer frames.
    
    Also this makes it easier to test/enable this feature
    for lower layer temporal frames.
    
    Change-Id: Ia897afbc6fe5c84c5693e310bcaa6a87ce017be5

[33mcommit 8e6022844fdf3e97cfe10659f386299d716736ab[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Fri Nov 10 10:19:52 2017 -0800

    vpx: [x86] add vpx_satd_avx2()
    
    SSE2 instrinsic vs AVX2 intrinsic [1;31mspeed[m gains:
    blocksize   16: ~1.33
    blocksize   64: ~1.51
    blocksize  256: ~3.03
    blocksize 1024: ~3.71
    
    Change-Id: I79b28cba82d21f9dd765e79881aa16d24fd0cb58

[33mcommit 6c0011a2559ca56bc03fb06abf998b0b0ab90169[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Nov 9 15:24:10 2017 -0800

    vp9-svc: Avoid minmax variance for non-reference frames.
    
    For choose_partitioning ([1;31mspeed[m >= 6): avoid computation
    of minmax variance for non-reference frames in SVC.
    
    Existing condition only avoided this for [1;31mspeed[m >= 8.
    Combine that existing logic with non-reference condition.
    
    Small [1;31mspeed[mup (~0.5-1%) for 3 layer SVC,
    neutral change on avgPSNR/SSIM metrics.
    
    Change-Id: I3e9f3a1af0647b15e475cf170d9402908d672ee5

[33mcommit fdb054a05d03839c5b136ca9406b930d9179c6b6[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Nov 8 15:12:44 2017 -0800

    vp9: SVC feature to use partition from lower resolution.
    
    For SVC with 3 spatial layers:
    Add feature to copy/upscale partition from middle spatial layer
    to the upper/highest resolution, when superblock sad is not high.
    
    Enabled for [1;31mspeed[m >= 7 and only for non-reference frames.
    
    Speedup ~3-4%, small loss in avgPNSR/SSIM of ~1%.
    
    Change-Id: I7f0a2716c0fde28bade0f86159d11b7e31d6ab8d

[33mcommit 62ab5e99c1aa13704716ca056b8c806b22544a6b[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Nov 8 16:06:29 2017 -0800

    vpx: [x86] add vp9_block_error_fp_avx2()
    
    SSE2 asm vs AVX2 intrinsics [1;31mspeed[m gains:
    blocksize   16: ~1.00
    blocksize   64: ~1.17
    blocksize  256: ~1.67
    blocksize 1024: ~1.81
    
    Change-Id: I2a86db239cf57e3ff617890ccb2d236aba83ad5e

[33mcommit 6fbc354c97ca45754a76674dba5f6b43c2b0c15a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Nov 3 11:29:35 2017 -0700

    Nonrd_pickmode: avoid computing UV cost when early_term is set.
    
    For nonrd_pickmode: if early_term is set there should be
    no need to include UV in rdcost (when color_sensitivity is set).
    
    Neutral change on RTC and RTC_derf metrics, for [1;31mspeed[m >= 5.
    No change for ytlive metrics.
    
    Very small [1;31mspeed[m gain (~0.5%) on some clips with strong color content.
    
    Change-Id: Ifc00928ecd935fc71e94935ceef0ae7481249f07

[33mcommit eb7d431cb55c8254fcd0a362e269c1d7a25409ba[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 25 15:45:11 2017 -0700

    Compound prediction mode for nonrd pickmode.
    
    Allow for compound prediction mode in nonrd_pickmode for ZEROMV.
    For real-time encoding, 1 pass with non-zero lag-in-frames.
    
    Added [1;31mspeed[m feature to control the feature.
    Enabled for [1;31mspeed[m >=6 for now, under VBR mode.
    
    avgPSNR/SSIM metrics positive on ytlive set, for [1;31mspeed[m 6:
    some clips up by ~3-5%, some clips neutral gain, average gain
    across clips is ~1%.
    
    Small/negligible decrease in [1;31mspeed[m.
    
    Change-Id: I7a60c7596e69b9a928410c5ee2f9141eecd8613d

[33mcommit 0738d9016921d836a657a39f81f9ce408fd2dd59[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 23 10:58:28 2017 -0700

    vp9-svc: Allow for adapt_rd_thresh with row-mt.
    
    Set adaptive_row_thresh_mt = 1 at [1;31mspeed[m >= 7,
    for svc when multi-threading is used with row-mt.
    This allow the adaptive_rd_thresh feature to be used
    in the nonrd-pickmode.
    
    ~1-2% [1;31mspeed[mup for SVC encoding with small quality
    loss (< 0.6%) on RTC set.
    
    Change-Id: Iab9878dff117bccdaef3e4d0645165db9808cdfc

[33mcommit 580d32240f9a2f7783ced9b0e409de62ba07f4e1[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 11 11:59:04 2017 -0700

    Add 4 to 3 scaling SSSE3 optimization
    
    Note this change will trigger the different C version on SSSE3 and
    generate different scaled output.
    
    Its [1;31mspeed[m is 2x compared with the version calling vpx_scaled_2d_ssse3().
    
    Change-Id: I17fff122cd0a5ac8aa451d84daa606582da8e194

[33mcommit a673b4f4afb6591d48ffc5c74b539771e28e0f69[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 10 15:30:32 2017 -0700

    Adjust to scene detection for 1 pass vbr.
    
    Expose the threshold for setting key frame on cut,
    and increase it for [1;31mspeed[m 5.
    Also small adjustment to min_thresh.
    
    No change in overall metrics or fps.
    Small quality improvement and lower encode time on scene cuts.
    
    Change-Id: I36e06ff3b26b6c29aede39c23fce454525fc9026

[33mcommit 017257a317be2605e91341b20f539028730dc89b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 9 17:53:21 2017 -0700

    Adjustment to scene detection and key frame.
    
    For 1 pass vbr: use higher threshold on avg_sad
    and force key frame under scene cut detection if
    above the threshold. Allow it for [1;31mspeed[m >= 6 for now,
    since it does not use the full nonrd_pickmode partition
    (as in [1;31mspeed[m 5).
    
    Improves quality somewhat on scene cut frames.
    Neutral on overall metrics and fps for [1;31mspeed[m 6 on
    ytlive set.
    
    Change-Id: I12626f7627419ca14f9d0d249df86c7104438162

[33mcommit bcbc6ed82df08ea7b02b5a7b996ad4cbb80e1293[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 6 22:14:56 2017 +0000

    Revert "Speed >=5 real-time: add TM intra mode for high_source_sad."
    
    This reverts commit 9311ef18b4b4eff0da3adf9d702a34f489a270ff.
    
    Reason for revert:
    Notice small regression in some clips.
    Will revisit in another change.
    
    Original change's description:
    > Speed >=5 real-time: add TM intra mode for high_source_sad.
    >
    > Small/neutral change in metrics or [1;31mspeed[m for ytlive.
    > Some improvement in quality on frames with big content change.
    >
    > Change-Id: Ib3b0703a5f28ea6710e90324436e27598ab7384d
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    
    Change-Id: I9d8ec5195bb05ddf329d325699355185affb9b13
    No-Presubmit: true
    No-Tree-Checks: true
    No-Try: true

[33mcommit e405eb06b147d259b4509de896dbe4d8562f7133[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 6 10:53:40 2017 -0700

    Adjust threshold in scene detection
    
    For 1 pass vbr: increase min_thresh slightly, and also add
    condition on golden/arf update for using full nonrd_pick_partition.
    
    Reduces possible false detection for scene cut detection.
    
    Neutral/small change in metrics or [1;31mspeed[m for [1;31mspeed[m 5.
    
    Change-Id: I388f4d9a56e3cc763e0148338c1bc0381e58ad76

[33mcommit 9311ef18b4b4eff0da3adf9d702a34f489a270ff[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 5 12:58:51 2017 -0700

    Speed >=5 real-time: add TM intra mode for high_source_sad.
    
    Small/neutral change in metrics or [1;31mspeed[m for ytlive.
    Some improvement in quality on frames with big content change.
    
    Change-Id: Ib3b0703a5f28ea6710e90324436e27598ab7384d

[33mcommit e095bcce44deb1326446484a391a48c2f20735c9[m
Merge: 014976c25 18262a857
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 5 03:28:06 2017 +0000

    Merge "Adjust threshold for adapt_partition for [1;31mspeed[m 6."

[33mcommit 18262a8576097ca05f5c8c2d10ea966917bb1b8c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 4 18:01:37 2017 -0700

    Adjust threshold for adapt_partition for [1;31mspeed[m 6.
    
    Lower SAD threshold to select non_rd pickmode partition
    at superblock level more often.
    Small gain in metrics, small/negligible decrease in [1;31mspeed[m.
    
    Change-Id: I0f728236b91a604e4ca7e02039adc54d5985c4dc

[33mcommit 014976c251f2411f0887774d36e10b8532b6636e[m
Merge: 6a42bdd25 4bc1fc58b
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 4 23:36:27 2017 +0000

    Merge "Avoid nonrd_pick_partition for [1;31mspeed[m >= 6."

[33mcommit 4bc1fc58b6c8b456750b7c57ce654b36565cfec0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 4 15:27:45 2017 -0700

    Avoid nonrd_pick_partition for [1;31mspeed[m >= 6.
    
    For 1 pass vbr [1;31mspeed[m >= 6: when REFERENCE_PARTITION is selected,
    avoid doing the full nonrd_pickmode based partition.
    No change in overall metrics or [1;31mspeed[m.
    Reduces encode times on scene cuts by 10-20%.
    
    Change-Id: I0310b1610cc1c83793a509e0a9059840e8f18308

[33mcommit 77e51e2035b8818d2351d7bc6e3af423f91a69cf[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 4 11:41:52 2017 -0700

    Modify early exit for alt_ref in nonrd_pickmode.
    
    For 1 pass vbr mode:
    On no-show_frame/ARF: instead of skipping alt_ref_frame
    completely in mode testing, allow for checking (0, 0) on alt_ref.
    
    Small gain in metrics, ~0.18%, no change in [1;31mspeed[m.
    
    Change-Id: I32a3c24faca64ab70dd5091071a0dc301db7dd1e

[33mcommit 98dbf31c877c1388c5776aba249f879cda3b2969[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 3 17:14:24 2017 -0700

    Enable arf usage for [1;31mspeed[m >= 6, 1 pass vbr.
    
    For [1;31mspeed[m 6 on ytlive set:
    On average, [1;31mspeed[m slowdown ~5%, quality gain ~2%.
    
    Change-Id: Ia18237cc1d52c54d7e2cb3c71f571cf37ef61b44

[33mcommit c8678fb7f38024345462cfab3b34d649548ff445[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 3 10:55:55 2017 -0700

    Use adapt_partition for ARF in 1 pass.
    
    For [1;31mspeed[m 6 real-time mode: use adapt_partition
    on ARF frame instead of REFERENCE_PARTITION (which is slower).
    This requires enabling compute_source_sad_onepass for no-show_frames.
    
    Speedup of ~3-5% on some clips that heavily use ARF,
    small loss (~0.2%) in quality on ytlive set.
    
    Change-Id: Ib50acc97df06458244a6ac55d2bd882c30012536

[33mcommit 33e10dfa7e1e5071e9866999830e996026fa9da4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 2 14:00:18 2017 -0700

    ARF in 1 pass vbr: modify skip ref_frame in nonrd_pickmode.
    
    Speedup of ~2-3% on 1080p clips [1;31mspeed[m 6.
    Neutral/negligible loss in metrics on ytlive.
    
    Change-Id: I7ac47a4d8b58c566920bae29a94a0e8d59c36dee

[33mcommit c8f6e7b99efc8e873ef3ef9cfa5232ff1ee596bb[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 29 14:54:56 2017 -0700

    Fix partition selection in [1;31mspeed[m features for arf overlay frame.
    
    For real-time mode. Move the switch to fixed partition
    for is_src_frame_alt_ref so all [1;31mspeed[ms may use it
    if use_altref_onepass is set.
    
    Improves metrics by ~2% for ytlive set at [1;31mspeed[m 4
    (where use_altref_onepass is currently used).
    
    Change-Id: I033240386598c9dbd0364da89ccbcca64bc663ee

[33mcommit f2c3d0a7a3ac5d4eb844b50da386142e9610ee24[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 29 10:53:59 2017 -0700

    Enable use_altref_onepass for [1;31mspeed[m 4 real-time mode.
    
    Used for VBR mode with lag-in-frames > 0.
    On ytlive set at [1;31mspeed[m 4: ~3% average gain.
    
    Change-Id: I45dad1700bf8be9d8f177815dc062774f6f2f0de

[33mcommit 3bbd62ed27ee43a685a1b7b93e985e8c14e528a1[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Fri Sep 29 06:34:16 2017 -0700

    vpxdsp: [x86] add highbd_d135_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~1.81x
    
    C vs SSSE3 [1;31mspeed[m gains:
    _8x8 : ~1.96x
    _16x16 : ~1.88x
    _32x32 : ~2.02x
    
    BUG=webm:1411
    
    Change-Id: Iefaf8b39afbbfe34c1ad1d21e3a003b20f1f61e0

[33mcommit 4cae64c32c65a70e7c7d228f885cfc4bce0d5c41[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Sep 20 05:21:23 2017 -0700

    vpxdsp: [x86] add highbd_d117_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~2.04x
    
    C vs SSSE3 [1;31mspeed[m gains:
    _8x8 : ~2.82x
    _16x16 : ~5.93x
    _32x32 : ~2.79x
    
    BUG=webm:1411
    
    Change-Id: I31d949695991c067dac89d91e0bed3e666c94993

[33mcommit a2ef180dd021ce591f214d13f4c14cbe5fe4972b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Sep 28 10:47:34 2017 -0700

    Set rc->high_source_sad = 0  before scene detection.
    
    Only has effect when sf->use_altref_onepass is enabled,
    as in that case scene detection is skipped for non-show frame
    and so high_source_sad does not get reset to 0.
    
    No change in metrics or [1;31mspeed[m.
    
    Change-Id: I421f066d239341449c18826089e1810b9fc5967f

[33mcommit 786b124e201edd1796626f795be73ff71ec22d97[m
Merge: 80992a746 8d438dc31
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Sep 27 20:42:48 2017 +0000

    Merge "Revert "Remove the [1;31mspeed[m condition on scene detection in 1 pass code.""

[33mcommit 8d438dc3134e4bc7f9e1487020b9c755eaf336c9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Sep 27 19:42:48 2017 +0000

    Revert "Remove the [1;31mspeed[m condition on scene detection in 1 pass code."
    
    This reverts commit 535b7b915ae5574db2f95632243cc5bee865f02e.
    
    This is actually used in CBR to reset the rate control if high source sad is detected.
    
    Original change's description:
    > Remove the [1;31mspeed[m condition on scene detection in 1 pass code.
    >
    > Scene detection is used for VBR mode and for screen_content mode.
    >
    > It was also enabled for CBR mode via the [1;31mspeed[m condition,
    > but currently the analysis in the scene detection is not used
    > in CRB mode (similar computations are done locally at superblock level
    > when the source_sad feature is enabled).
    >
    > For 1 pass code.
    > No change in behavior. Small [1;31mspeed[m gain, ~0.5%.
    >
    > Change-Id: I59991d7ef2af320bea7af4b907596e057affa42f
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    
    Change-Id: Ib4e6b02047f75632503e7b0fc870af97fa9291c3
    No-Presubmit: true
    No-Tree-Checks: true
    No-Try: true

[33mcommit 19c45ccd4389ac900c8aa68275f068c738585ebe[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Sep 27 10:06:14 2017 -0700

    vpxdsp: [x86] add highbd_d153_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~1.95x
    
    C vs SSSE3 [1;31mspeed[m gains:
    _8x8 : ~3.30x
    _16x16 : ~5.67x
    _32x32 : ~3.87x
    
    BUG=webm:1411
    
    Change-Id: Ib483989b25614aa89b635e8c087d0879a5d71904

[33mcommit 535b7b915ae5574db2f95632243cc5bee865f02e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Sep 27 10:11:24 2017 -0700

    Remove the [1;31mspeed[m condition on scene detection in 1 pass code.
    
    Scene detection is used for VBR mode and for screen_content mode.
    
    It was also enabled for CBR mode via the [1;31mspeed[m condition,
    but currently the analysis in the scene detection is not used
    in CRB mode (similar computations are done locally at superblock level
    when the source_sad feature is enabled).
    
    For 1 pass code.
    No change in behavior. Small [1;31mspeed[m gain, ~0.5%.
    
    Change-Id: I59991d7ef2af320bea7af4b907596e057affa42f

[33mcommit 819c5b365d4bf58446246b724cbbcca5fd064ae4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Sep 26 15:47:14 2017 -0700

    Remove the [1;31mspeed[m condition in setting compute_source_sad.
    
    The [1;31mspeed[m condition is not needed, feature can used for any
    [1;31mspeed[m in 1 pass code.
    
    Change-Id: I878ef3f63a075302eda48c0343fa243c80aab9ba

[33mcommit d5094cfde8850293bc7790190300533483651f9d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Sep 26 10:18:43 2017 -0700

    Replace flag USE_ALTREF_FOR_ONE_PASS with [1;31mspeed[m feature.
    
    To be used for 1 pass VBR.
    Off by default in [1;31mspeed[m features.
    
    Change-Id: I5d6110d6d191990db526fe68ec9715379a4d1754

[33mcommit cf82f7276ee9fc79c22aa7804328a25c5ce92eba[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Aug 30 09:27:44 2017 -0700

    vpxdsp: [x86] add highbd_d45_predictor functions
    
    C vs SSSE3 [1;31mspeed[m gains:
    _4x4 : ~2.45x
    _8x8 : ~10.61x
    _16x16 : ~11.34x
    _32x32 : ~6.36x
    
    BUG=webm:1411
    
    Change-Id: Ic91389a4f1a8ad093f498afe53765b897fb9be09

[33mcommit 42373b21cea6651b3063e14a8cdaaaf646ae7f14[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Sep 20 14:55:31 2017 -0700

    vp9: Modify pickmode early exit for ARF in 1pass.
    
    Add the condition frames_since_golden > 0 to the
    early exit check for ARF usage in nonrd_pickmode.
    This improves quality of first frame following ARF, where
    frame_since_golden = 0.
    
    Small/neutral gain in metrics for [1;31mspeed[m 6, neutral change in [1;31mspeed[m.
    
    Only affects when USE_ALTREF_FOR_ONE_PASS is enabled.
    
    Change-Id: I82e73e6ff6fc849e5ca5448563cb8a0515fe0cdc

[33mcommit bc86e2c6a25ad3e7efb02875542f1525db4bea42[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Tue Sep 12 18:01:31 2017 -0700

    vpxdsp: [x86] add highbd_d63_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~2.94x
    
    C vs SSSE3 [1;31mspeed[m gains:
    _8x8 : ~8.69x
    _16x16 : ~6.32x
    _32x32 : ~5.33x
    
    BUG=webm:1411
    
    Change-Id: I2c35b527eac2229f17aaa9d118fb601e7195efe4

[33mcommit cd463c7acb52160fd001a5ec311b27802d97e7d1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Sep 19 11:00:40 2017 -0700

    vp9: Fix condition for limiting ARF 1 pass vbr.
    
    Fix the setting to frames_till_gf_update_due, and
    adjust the limit value.
    Only affects when USE_ALTREF_FOR_ONE_PASS is enabled.
    
    Neutral change to metrics and [1;31mspeed[m for ytlive.
    
    Change-Id: I266d9a00b36221bc8602fa2746d4e8a8f7d4dfae

[33mcommit ebb015a5398e1da5e90864a1d23f9ed512ace8e2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Sep 18 17:30:49 2017 -0700

    vp9: Adjustments for ARF usage in 1 pass vbr.
    
    Only when USE_ALT_REF_ONE_PASS is enabled (off by default).
    Force fixed partition to 64x64 when is_src_alt_ref_frame is true,
    and don't force early exit for some modes in nonrd_pickmode
    for ARF noshow frames.
    
    Small gain ~0.2% on ytlive metrics for [1;31mspeed[m 6.
    Neutral [1;31mspeed[m difference.
    
    Change-Id: I27eb6622d0453c09a06ccdc3b16368762474d11d

[33mcommit d6c9bbc2b6f2b15495c3e1fcc86feba23b27dc08[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Sep 6 10:08:03 2017 -0700

    vpxdsp: [x86] add highbd_d207_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~2.31x
    
    C vs SSSE3 [1;31mspeed[m gains:
    _8x8 : ~4.73x
    _16x16 : ~10.88x
    _32x32 : ~4.80x
    
    BUG=webm:1411
    
    Change-Id: I0bac29db261079181ddabc6814bd62c463109caf

[33mcommit bc4bcca3fdcc839794daf6cc0aa9eacc3befb854[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Tue Sep 5 07:52:36 2017 -0700

    vpxdsp: [x86] add highbd_dc_128_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~7.64x
    _8x8 : ~16.60x
    _16x16 : ~8.15x
    _32x32 : ~5.05x
    
    BUG=webm:1411
    
    Change-Id: If165d419711cfda901bd428a05ca1560a009e62e

[33mcommit ebf3ae1a290c4fa161e87b9dbb2a6b2555097ae1[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Aug 29 13:36:34 2017 -0700

    vp9: Skip testing duplicate zero mv in nonrd-pickmode.
    
    Neutral on rtc set for [1;31mspeed[m 8. Neutral on ytlive for [1;31mspeed[m 5.
    
    Saves some computation cycles but no [1;31mspeed[m gain observed on Pixel.
    
    Change-Id: I34c4642cd543aa89c5b9c4bff6b7113577c64c91

[33mcommit c39a05ff61db40d39717df583b8aefd42cc3a2bf[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Aug 30 09:13:14 2017 -0700

    vpxdsp: [x86] add highbd_dc_left_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~6.49x
    _8x8 : ~10.82x
    _16x16 : ~7.61x
    _32x32 : ~5.29x
    
    BUG=webm:1411
    
    Change-Id: Ibc30c50cb7139049bf05298010803499e6ef949b

[33mcommit f783e3a75d2debf41bb50793edd50b7459ea84f0[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Tue Aug 29 11:25:32 2017 -0700

    vpxdsp: [x86] add highbd_dc_top_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~7.39x
    _8x8 : ~11.36x
    _16x16 : ~8.68x
    _32x32 : ~4.33x
    
    BUG=webm:1411
    
    Change-Id: I7f1487cd1531d4e7f0fbb4596fed3bfb72a59d58

[33mcommit 30d9a1916ca1409497f9bd903fa18d4265621266[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Mon Aug 28 07:26:08 2017 -0700

    vpxdsp: [x86] add highbd_h_predictor functions
    
    C vs SSE2 [1;31mspeed[m gains:
    _4x4 : ~8.12x
    _8x8 : ~9.71x
    _16x16 : ~8.21x
    _32x32 : ~5.0x
    
    BUG=webm:1422
    
    Change-Id: I5e8a1ed4db7b8dc539b3e2a728b0b34d8b4b1993

[33mcommit 7c10251f22963fa2342d0f048a96f73de3f667bd[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Aug 28 17:05:48 2017 -0700

    vp9: Speed 8: Enable skip_encode_sb
    
    Neutral in borg tests.
    
    Some clips show 3-4% [1;31mspeed[m gain on 2 threads on Pixel.
    
    Change-Id: Ic959f34e44892a854551de6e9a3d9ec819ffed00

[33mcommit 64c55576b76fde99506cc8da491d08b8e6e8d78f[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Aug 28 12:48:19 2017 -0700

    vp9: Remove resolution condition for using source_sad in [1;31mspeed[m 6.
    
    Rev d147771 fixed the test failure. So remove the resolution condition
    for using source_sad in [1;31mspeed[m 6.
    
    BUG=webm:1452
    
    Change-Id: I1efba97e1ef5bd4de5f886299f6fcb907187abcd

[33mcommit 43b9e785bad9cc39c9bab84fe22fd5afb9efb58b[m
Merge: 3e069846b a74593b30
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Aug 25 21:46:35 2017 +0000

    Merge "vp9: SVC: Modify mv search condition in [1;31mspeed[m features."

[33mcommit a0de2692fc5ee69825b35fa6158f116448849e68[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Aug 21 16:39:56 2017 -0700

    vp9: Speed 6 adapt_partition for live/vbr usage.
    
    Enable adapt_partition for vbr mode for [1;31mspeed[m 6.
    This allows the usage of the pickmode-based partition
    (used in [1;31mspeed[m 5), but only selectively for superblocks
    with high source sad, otherwise the faster variance based
    partition scheme is used.
    
    For [1;31mspeed[m 6 on ytlive set: avgPSNR/SSIM metrics up by ~0.6%,
    several clips up by ~1.5%. Small/negligible decrease in [1;31mspeed[m.
    
    Change-Id: I12f3efef6b3e059391de330fdbe5a44c2587f1f8

[33mcommit a74593b30c1472cf8e9c61d5a0d39fa3b9cdf4df[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Aug 25 09:59:57 2017 -0700

    vp9: SVC: Modify mv search condition in [1;31mspeed[m features.
    
    For SVC at [1;31mspeed[m >= 7: only use the improved mv search
    on base spatial layer, if top layer resolution is above 640x360.
    
    ~2.3% [1;31mspeed[mup
    Small/negligible loss in avgPSNR metrics on rtc set.
    
    Change-Id: Iaef75a57ebf1c248931bc1aa28d20b7fecac1851

[33mcommit d14777157e6891759ae2bada3787e16604edbda2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Aug 24 10:36:27 2017 -0700

    vp9: Adjust 16x16 splot threshold for variance partition
    
    For [1;31mspeed[ms < 7, increase threshold that controls the split
    of 16x16->8x8 blocks, for resolutions 720p and higher.
    
    Minor change for [1;31mspeed[m 5 (since it uses reference partition scheme
    which only uses variance partition as first step).
    For [1;31mspeed[m 6: ~0.5% increase in avgPSNR/SSIM metrics on ytlvie set.
    No change in [1;31mspeed[m.
    
    Change-Id: I5126580973201538d8ca26a9256b93c4d11d685b

[33mcommit c9ff7b66372581af8960a5dab5ca498999bd538a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Aug 23 13:01:57 2017 -0700

    vp9: SVC: Skip NEWMV for small blocks for (0, 0) base_mv.
    
    For SVC encoding:
    average [1;31mspeed[mup ~1.5%, with small ~0.57 loss in avgPSNR metrics.
    
    Change-Id: Icebce6f6ef4e819d7dfcf8db898c583167351de4

[33mcommit 7c27872164941cecd17e685a0a2c537b996509ec[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Aug 22 15:43:35 2017 -0700

    quantize avx: copy implementation to intrinsics
    
    Adds an early exit based on ptest. Slightly slower than ssse3 in the
    full case because of the extra check, but potentially faster if lots of
    rows can be skipped.
    
    Very close in [1;31mspeed[m to the assembly.
    
    Can run in 32 bit, unlike the assembly. Allows reworking the function
    prototype to use structs.
    
    Change-Id: If80e2b9ba059370a4cad3c973196e82a97b4330e

[33mcommit a31461c853f65e5fd9c20dfdeb82b18d6590eff8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 22 14:46:39 2017 -0700

    vp9: Condition lighting change detection on CBR mode.
    
    This feature is used for the CBR RTC encoding mode
    at [1;31mspeed[m >= 6. This change will exclude it for VBR mode.
    
    For [1;31mspeed[m 6 live encoding (VBR):
    avgPSNR/SSIM metrics on ytlive set up by ~1% (few clips up by 2/3%).
    No change in [1;31mspeed[m.
    
    Change-Id: I1a0dd94c334f7df309ab5a48d477d7e25355b798

[33mcommit 0472382dbef39c98c2e3a7f322d053545160745d[m
Merge: 6b9c691da e15be3025
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 16 13:01:38 2017 +0000

    Merge "Fix for encoder slowdown (for [1;31mspeed[ms >= 3)"

[33mcommit e15be3025b5b77efead67f5037d4c152450619be[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Aug 14 16:11:34 2017 +0100

    Fix for encoder slowdown (for [1;31mspeed[ms >= 3)
    
    Some clips in nightly unit test exhibiting significant encoder slowdown which
    appears to bisect to Change-Id: I692311a709ccdb6003e705103de9d05b59bf840a.
    
    The above change allowed for emergency iterations of the recode loop and
    adjustment of the Q range if there is a large rate miss.
    
    This patch disables the above adaptation for cases of cpu_[1;31mspeed[m >= 3 or more
    specifically where cpi->sf.recode_loop >= ALLOW_RECODE_KFARFGF.
    
    For [1;31mspeed[ms >= 3 the code does not currently run a dummy bit pack operation
    inside the recode loop. Without this dummy pack operation there is no up to
    date estimate of the current frame's size to use as a basis for assessing the
    requirement for a recode. In practice it was using the previous frames size (or 0
    for the first frame) which could cause odd behavior.
    
    If we require the emergency rate correction added in  Change-Id: I6923.. for
    the higher [1;31mspeed[m settings it will be necessary to enable the dummy pack
    which will in turn hurt encode [1;31mspeed[m.
    
    BUG=webm:1454
    
    Change-Id: I4fb3c6062ca9508325a6f31582f8e80f1a9b126f

[33mcommit 68805583e9544f14ebe72583bcc5b788f8da6c7f[m
Merge: 853165ba3 427de67e6
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 8 23:08:10 2017 +0000

    Merge "vp9: Partition logic adjustment for [1;31mspeed[m 6 feature."

[33mcommit 427de67e631244c2b469e922cef07e1583f4b097[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 8 10:34:47 2017 -0700

    vp9: Partition logic adjustment for [1;31mspeed[m 6 feature.
    
    When adapt_partition_source_sad is enabled (currently only at
    [1;31mspeed[m 6 for resoln <= 360p): use lower subsize (8x8 instead of 16x16)
    for nonrd_select_partition on 32X32 blocks.
    
    And force avoiding rectangular partition checks in
    nonrd_pick_partition for [1;31mspeed[m >= 6.
    
    Small increase ~0.5 in metrics for [1;31mspeed[m 6 on rtc_derf,
    no change in [1;31mspeed[m.
    
    Change-Id: Id751bc8f7573634571b2d6f5e29627cd5cebccae

[33mcommit 787970a62519a0082dca723224ca757529014b9f[m
Merge: b9577e07f 1059b5cc5
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Aug 2 21:16:35 2017 +0000

    Merge "quantize test: add [1;31mspeed[m comparison"

[33mcommit 1059b5cc523ceda9ce0217a162007448a0b35967[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jul 27 14:14:20 2017 -0700

    quantize test: add [1;31mspeed[m comparison
    
    Test some possible scenarios.
    
    Change-Id: I1a612e7153b31756be66390ceea55877856d5a33

[33mcommit 999bd6ea84ca0249190dea97d5290fea5ed5c520[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 28 19:11:53 2017 -0700

    vp9: Fix denoising condition when pickmode partition is used.
    
    When the superblock partition is based on the nonrd-pickmode,
    we need to avoid the denoising. Current condition was based on
    the [1;31mspeed[m level. This change is to make the condition at the
    superblock level, as the switch in partitioning may be done at
    sb level based on source_sad (e.g., in [1;31mspeed[m 6).
    
    Change-Id: I12ece4f60b93ed34ee65ff2d6cdce1213c36de04

[33mcommit 064fc570ff8399536563e3846500fd99b273b034[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 28 10:29:12 2017 -0700

    vp9: Speed feature to adapt partition based on source_sad.
    
    Move the source_sad feature to [1;31mspeed[m 6 (from [1;31mspeed[m 7), and
    add [1;31mspeed[m feature to switch from the variance-based partition
    to reference_partition (which uses nonrd-pickmode for bsize selection)
    if source_sad is high.
    
    Currently used only for [1;31mspeed[m 6 for resoln <= 360p.
    About 4-5% improvement on 360p in RTC set.
    Some [1;31mspeed[m slowdown, but still ~30% faster than [1;31mspeed[m 5.
    
    Change-Id: Ib0330ee5fe9fdd2608aed91359a2a339d967491c

[33mcommit 7105e66d19811add930055959598beb68f21df29[m
Author: Urvang Joshi <urvang@google.com>
Date:   Fri Jul 28 15:57:22 2017 -0700

    Remove the DP version of vp9_optimize_b().
    
    The greedy version was already enabled by default here:
    https://chromium-review.googlesource.com/c/546848/
    
    And the [1;31mspeed[m+compression gains from greedy version were already
    mentioned here:
    https://chromium-review.googlesource.com/c/531675/
    
    Change-Id: Iad9f7d03490c845ad1e230af028c9d39edddca97

[33mcommit 56d95b77f558c57ca3b04f727d51b2c70cce1503[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jul 19 13:02:53 2017 -0700

    vp8: Remove isolated skin & non skin blocks.
    
    Neutral on RTC metrics and [1;31mspeed[m on Pixel.
    
    Change-Id: I26b907483fe133e6e4c1009d147631f0d0e0f2fb

[33mcommit adbfc4308a7dfe4c31478ca36dc2719fcf21cfff[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Jul 11 11:31:01 2017 -0700

    vp9: Remove isolated skin & non-skin blocks.
    
    0.007% regression on rtc and 0.004% gain on rtc_derf.
    1 thread on QVGA,VGA and HD has ~0.2% [1;31mspeed[m regression while 2 threads has
    ~0.2% [1;31mspeed[m gain on Google Pixel.
    
    Change-Id: Ia4a6ec904df670d7001e35e070b01e34149d23dc

[33mcommit ad563713437b8c0fd0aabaa9df9473385acd300d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jul 17 16:04:04 2017 -0700

    vp9: Fix to setting content_state for real-time mode.
    
    When content_state_sb is set to LowVarHighSumdiff, don't reset
    it to VeryHighSad. Visually better on clips with strong lighting changes.
    
    Small/negligible change in RTC metrics and [1;31mspeed[m.
    
    Change-Id: I20c383e3c4cf8d1149de5f9260449c0b7cf7c6aa

[33mcommit 0c9e2f4c15a6edd982cdd3fed1209c7a93b9ecd2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jul 13 14:49:39 2017 -0700

    vp9: Reuse motion from choose_partitioning in NEWMV search.
    
    When int_pro_motion_estimation is done for superblock in
    choose_partitioning, use it to avoid the full_pixel_search
    for NEWMV mode, if bsize is >= 32X32.
    
    For [1;31mspeed[m > 7.
    Small/neutral change on RTC metrics.
    ~1-2% [1;31mspeed[mup on arm on high motion clip.
    
    Change-Id: I3cfe6833ff4bf75d4afa83eaf058ad45729de85b

[33mcommit 666e394d41c68e9a57866fc3bd70e54b36d43ab4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jul 13 16:09:11 2017 -0700

    vp9: Adjust minmax threshold for variance partitioning.
    
    Only affects [1;31mspeed[m 7. Improvement on high motion clips.
    
    Change-Id: Ibddb68fed9c63207df29ffd790f9205b1cecf687

[33mcommit 5322a31b189178ad714aa03e42760e4cacd45a9e[m
Author: Urvang Joshi <urvang@google.com>
Date:   Tue Jul 11 13:05:29 2017 -0700

    Remove the token state array from greedy optimize_b.
    
    Reduces memory usage, and [1;31mspeed[ms up encoding for some difficult clips.
    No impact on output or metrics.
    
    Ported from aomedia patch:
    https://aomedia-review.googlesource.com/c/14501
    
    Change-Id: I26ec69af8336f9e80da486a1cfbfc89a3596954d

[33mcommit 8c3f18efa175be5ee6b26efcba5fdb5611e5119a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jul 6 13:06:39 2017 -0700

    vp9: Nonrd mode: use content_state_sb for high motion.
    
    In the content_state for a superblock is set to HighSad,
    use that to bias some decisions in variance partition and
    nonrd pickmde: use int_pro_motion for sad computation in
    choose_partitioning, and set large_block in pickmode based
    on the content_state_sb.
    
    Only affects [1;31mspeed[m >= 7.
    
    Immprovement for high motion content.
    Small gain (~1%) in RTC metrics.
    Speedup of ~5 for high motion clip on android ([1;31mspeed[m 8, 1 thread).
    
    Change-Id: I5774c4854f012b89c8e969f6129b60988c2ce11c

[33mcommit 2290898ac7d0abfcf1eaf3be147e6b419380f0eb[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 28 17:03:53 2017 -0700

    vp9: Adjust condition for checking intra mode.
    
    For nonrd_pickmode: add condition for checking
    intra mode if the sb content state is VeryHighSad.
    
    Reduces artifacts when sudden change in content.
    
    Metrics on RTC/RTC_derf neutral (small gain).
    No [1;31mspeed[m loss observed.
    
    Change-Id: I07006d28fd2dc06c1d06b07630102b0fece50c40

[33mcommit 88d11f473c7020a5da63ff8cbc1e32a21dd27898[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jun 27 20:14:26 2017 -0700

    vp9: Speed >= 8: Remove logic on reducing subpel.
    
    Existing logic was only affecting resolutions above 720p.
    Needs more testing for reducing subpel for [1;31mspeed[m >= 8.
    
    No change on RTC metrics.
    
    Change-Id: I2f4bf9f25891614aafa9a86aa5a5063a3ccfce4d

[33mcommit a220b931f5b5fccf4ecc758649806dc48bea1b7c[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Jun 27 13:17:59 2017 -0700

    vp9: compute skinmap only once before encoding.
    
    This could save some cycles since skin detection is used in multiple
    places in vp9.
    
    1~2% [1;31mspeed[m up on ARM.
    
    Change-Id: I86b731945f85215bbb0976021cd0f2040ff2687c

[33mcommit 18805eee6c2a0c01b045a59a6ea95a1e02ab718a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jun 22 14:59:27 2017 -0700

    vp9: Use scene detection for CBR mode.
    
    Use the scene detection for CBR mode, and use it to reset the
    rate control if large source sad is detected and rate
    correctioni fact/QP is at minimum state.
    
    Avoids large frame sizes after big content change following
    low content period.
    
    Only affects CBR mode for 1 pass at [1;31mspeed[ms 5, 6, 7.
    Change-Id: I56dd853478cd5849b32db776e9221e258998d874

[33mcommit efe1982e63b73680ac0190ccd5e747e1992a4394[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Jun 21 17:26:20 2017 +0100

    Fix int overflow in rate control for high bit rates.
    
    Fix misplaced cast that caused an overflow and incorrect rate adaptation
    behavior for high data rates. This in particular will have affected 4k encodes
    but could also have come into play for some higher rate 1080p cases.
    
    In our standard test sets the quality impact is small though several high rate
    clips show improved rate accuracy. This can also impact the number of recode
    loop hits and on one problem 4k  clip the encode time for [1;31mspeed[ms 0 and 1 was
    reduced by >25%
    
    Change-Id: I108da7ca42f3bc95c5825dd33c9d84583227dac1

[33mcommit 33a9394eb1db0f2f537bf4e94533cb9deef93e94[m
Merge: 828a1fa6d 8cf6f78fc
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jun 22 03:27:46 2017 +0000

    Merge "vp9: Adjustments for aq-mode and pickmode for [1;31mspeed[m >= 8."

[33mcommit 8cf6f78fcee6cf436fb5b5c540806129e16ebc7a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 21 15:24:56 2017 -0700

    vp9: Adjustments for aq-mode and pickmode for [1;31mspeed[m >= 8.
    
    Adjust the threshold for turning off cyclic refresh for high motion,
    and avoid testing golden in nonrd pickmode for [1;31mspeed[m >= 8 if
    golden refresh was long ago.
    
    No change/neutral on RTC metrics.
    Change-Id: I40959b8d9637f3553e7458bbabd8c6024c2c09c0

[33mcommit ff7fb4b28046094be7c467dc9d8246ad715cd30f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jun 19 13:56:04 2017 -0700

    vp9: Speed >= 8: Adjust resolution threshold for subpel.
    
    Get some quality gain on RTC metrics (~7%), with
    ~5-8% [1;31mspeed[m slowdown.
    
    Change-Id: I0d02942a77074424ee0326b6e110ddff09f2df5e

[33mcommit 112cd95507fe9e0460154514d5345beb99e20739[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jun 15 16:23:36 2017 -0700

    vp9: SVC: Rework the usage of base_mv for SVC.
    
    Set the base_mv_aggressive for temporal enhancement layers (TL > 0).
    Under the aggressive mode, skip the NEWMV depending on the
    SSE of the base_mv. Also reduce the subpel motion to 1/2 under
    aggressive mode if base_mv is good.
    
    Speedup ~3% with small/negligible loss in quality on RTC.
    Affects [1;31mspeed[m >= 6.
    
    Change-Id: I89341b279cad6da2a04b76d5e726016191dacdb8

[33mcommit e540ca715558f2e4dcf536f717b9888f1e19b4be[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jun 9 17:48:03 2017 -0700

    vp9: SVC: Use prune_evenemore only for non_reference.
    
    Set subpel prune_evenmore only for non_reference frames,
    instead of all TL > 0 frames. Gain some quality back at
    cost of small [1;31mspeed[m loss (~1-2%).
    
    Change only effects SVC encoding at [1;31mspeed[m >= 7.
    
    Change-Id: I5b9f51e51dccfd7050521a66996176b0415ca3f9

[33mcommit eae7cf236835e2ecc048abf1b30976ec10496bca[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu May 25 10:02:34 2017 -0700

    fdct16x16 neon optimization
    
    Roughly 2x [1;31mspeed[mup. Since the only change for HBD is to store(), the
    improvement appears to hold there as well.
    
    BUG=webm:1424
    
    Change-Id: I15b813d50deb2e47b49a6b0705945de748e83c19

[33mcommit 14d47180435602d2905c078323eb788731d61974[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 7 11:33:40 2017 -0700

    vp9: SVC: Enable simple_block_yrd for temporal layers.
    
    Enable simple_block_yrd for temporal enhancement layers (TL > 0).
    And remove block size condiiton for SVC mode.
    Only affects [1;31mspeed[m >= 7 SVC.
    
    Speedup ~3-4%.
    avgPSNR regression on RTC for (3 spatial, 3 temporal) layers: ~1%.
    
    Change-Id: Iff4fc191623b71c69cd373e7c0823385e7ac67ed

[33mcommit 27b34a109d4de5d67f5167e8d7cb4a1d07df14af[m
Merge: de4cb716e 7d2f5f8e9
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jun 6 23:07:44 2017 +0000

    Merge "vp9: SVC: Adjust some [1;31mspeed[m settings for SVC [1;31mspeed[m >= 7."

[33mcommit 7d2f5f8e9d78843ef1eeb701ead5fd1c3dbbcd43[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jun 6 15:28:06 2017 -0700

    vp9: SVC: Adjust some [1;31mspeed[m settings for SVC [1;31mspeed[m >= 7.
    
    Keep the 1/4subpel for all frames, use SUBPEL_TREE_PRUNED_EVENMORE
    for all temporal enhancement layer frames.
    
    Change-Id: Ibc681acbb6fc75b7b3c57fc483fcb11d591dfc9a

[33mcommit e30781ff80d931bc113a2dcb6970b1760c1feb1e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 26 11:36:45 2017 -0700

    vp9: SVC: Force subpel search off under certain conditions.
    
    For SVC 1 pass non-rd mode:
    Force subpel seach off for SVC for non-reference frames
    under motion threshold.
    
    Add flag to svc context to indicate if the frame is not used
    as a reference.
    
    Little/no quaity loss, ~2% [1;31mspeed[mup.
    
    Change-Id: Ic433c44b514d19d08b28f80ff05231dc943b28e9

[33mcommit 8c6fa5c5e3a8c40873775c01b8bdb5f8ac84df9c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jun 1 16:07:15 2017 -0700

    vp9: Speed >8: Set subpel_search_method for low motion.
    
    Speed >=8: for resolutions above CIF, and for low motion content,
    set subpel_search_method to SUBPEL_TREE_PRUNED_EVENMORE.
    
    Small [1;31mspeed[m gain (~2%) on vga clips,
    RTC metrics up by ~2-3% on average.
    
    Change-Id: Ie26ba0264589652f92dfe74308740debf94cf0cc

[33mcommit 4be18ab295b9dded9c273fc9ee28188ce3400dc0[m
Merge: 327c9bb1d 747cf7a50
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 26 05:23:47 2017 +0000

    Merge "vp9: SVC: Enable copy partition for SVC [1;31mspeed[m >= 7."

[33mcommit 747cf7a50533dbff6b04ce723754d960fc859ee2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu May 25 11:01:25 2017 -0700

    vp9: SVC: Enable copy partition for SVC [1;31mspeed[m >= 7.
    
    Adjust the max_copied_frame setting for temporal layers.
    Keep the same setting for non-SVC at [1;31mspeed[m 8.
    This change also enables copy_partiton for non-SVC at [1;31mspeed[m 7,
    but with smaller value of max_copied_frame (=2).
    
    ~2% [1;31mspeed[mup for SVC [1;31mspeed[m 7, 3 layers, with little/no quality loss.
    
    Change-Id: Ic65ac9aad764ec65a35770d263424b2393ec6780

[33mcommit 2ba4729ef80b73187d0f9d9a1fbf7eca60887f67[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon May 15 17:14:11 2017 -0700

    vp9: Make copy partition work for SVC and dynamic resize.
    
    Only affects [1;31mspeed[m 8.
    
    Make changes to copy partition to fix a bug in setting microblock
    offset. Avg PSNR shows 0.02% gain on rtc_derf and 0.08% loss on rtc.
    
    Change-Id: I61c3e5914dde645331344388e7437e5638acd4f3

[33mcommit 7b742da63e4b829ba013670dd838d263f5df8956[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue May 2 07:31:05 2017 -0700

    neon variance: process 4x blocks
    
    Continue processing sets of 16 values. Plenty of improvement for 4x8
    (doubles the [1;31mspeed[m) but only about 30% for 4x4.
    
    BUG=webm:1422
    
    Change-Id: Ib8dd96f75d474f0348800271d11e58356b620905

[33mcommit baef5486bf32226a044c48f8fc9894e2db4def6d[m
Merge: b9987a7c2 13d4a0d01
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:50:28 2017 +0000

    Merge "Revert "Revert "vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10."""

[33mcommit 13d4a0d011be218cbe513fdf72c5b3b262b476bc[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:50:19 2017 +0000

    Revert "Revert "vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10.""
    
    This reverts commit 3704807805895850671261fa4470f1ce41dd2ac9.
    
    Reason for revert: <INSERT REASONING HERE>
    Does not look to be the cause of the test failures.
    
    Original change's description:
    > Revert "vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10."
    >
    > This reverts commit 4a7424adba7a65766a92635dc67b6e7d94646693.
    >
    > Reason for revert: <INSERT REASONING HERE>
    > Possibly causing test failures in roll into chromium.
    >
    > Original change's description:
    > > vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10.
    > >
    > > Reduces quality regression at [1;31mspeed[m 10 for real-time mode.
    > >
    > > Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8
    > >
    >
    > TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    > # Not skipping CQ checks because original CL landed > 1 day ago.
    >
    > Change-Id: I1defcb74e78a5a3bd29b7d1b21a96a79fa26a457
    >
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    NOPRESUBMIT=true
    NOTREECHECKS=true
    NOTRY=true
    
    Change-Id: I13d86a2a68b8aa8c0c7465e6e58cff0e00bc7862

[33mcommit b9987a7c25303df209e99ad4d9d332bf7fa04a22[m
Merge: dac3b5972 370480780
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:48:38 2017 +0000

    Merge "Revert "vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10.""

[33mcommit 3704807805895850671261fa4470f1ce41dd2ac9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 16 22:48:13 2017 +0000

    Revert "vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10."
    
    This reverts commit 4a7424adba7a65766a92635dc67b6e7d94646693.
    
    Reason for revert: <INSERT REASONING HERE>
    Possibly causing test failures in roll into chromium.
    
    Original change's description:
    > vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10.
    >
    > Reduces quality regression at [1;31mspeed[m 10 for real-time mode.
    >
    > Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8
    >
    
    TBR=marpan@google.com,builds@webmproject.org,jianj@google.com
    # Not skipping CQ checks because original CL landed > 1 day ago.
    
    Change-Id: I1defcb74e78a5a3bd29b7d1b21a96a79fa26a457

[33mcommit 4a7424adba7a65766a92635dc67b6e7d94646693[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 12 11:01:33 2017 -0700

    vp8: Real-time mode: reduce mode_check_freq thresh for [1;31mspeed[m 10.
    
    Reduces quality regression at [1;31mspeed[m 10 for real-time mode.
    
    Change-Id: I9f624bea9ca262dab32ce9de7d6d91175d6becc8

[33mcommit 6b9d1302141af9d80c840a80b419a50a71656dc2[m
Merge: 4c0655f26 1fcd5cca3
Author: Jerome Jiang <jianj@google.com>
Date:   Sat May 13 03:20:48 2017 +0000

    Merge "vp9: [1;31mspeed[m 8: Fix seg fault in partition copy when drop frames."

[33mcommit 1fcd5cca3c810d37b8d81c69b6ebfe04c9f4cd4c[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri May 12 15:57:23 2017 -0700

    vp9: [1;31mspeed[m 8: Fix seg fault in partition copy when drop frames.
    
    BUG=webm:1433
    
    Change-Id: I4f3984ef28660d3218d48007d7c977bdbdaf8af6

[33mcommit 629279a45c1be8b5daa22b39e9c8f85503831e24[m
Merge: c64667c33 5f39262dc
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 12 00:35:39 2017 +0000

    Merge "vp9: Adjust [1;31mspeed[m features for [1;31mspeed[m 8 at low resoln."

[33mcommit c5c31b9eb6ddbcf413d5333b7a5bd77b89a15b78[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu May 11 12:10:35 2017 -0700

    vp9: SVC: Increase the partiiton and acskip thresholds
    
    Increase the partition and acskip thresholds for temporal
    enhancement layers.
    
    ~1-2% [1;31mspeed[mup, with negligible loss in quality.
    
    Change-Id: Id527398a05855298ad9ddac10ada972482415627

[33mcommit 76567d84cef1bd8a8dd734a70f554d80208a66fd[m
Author: Cheng Chen <chengchen@google.com>
Date:   Tue Apr 4 14:39:17 2017 -0700

    Speed up encoding by skipping altref recode
    
    Speed up for [1;31mspeed[m 0.
    Reduce 10+% of encoding time for hdres in [1;31mspeed[m 0,
    with less than 0.1% PSNR loss.
    Compute total difference of previous and current frame context probability
    model. If the diff is less than the threshold, skip recoding the frame.
    
    Borg test (positive number means performance loss):
                    lowres    midres    hdres
    PSNR:           0.030     0.032     0.065
    
    Local [1;31mspeed[m test: bitrate set at 1200
                    blue_sky  pedestrian  rush_hour
    Encoding time:   -10.0%     -16.5%      -16.5%
    
    Change-Id: I4e2d200ea3115d48b2c3e890143596b31b8ef9e9

[33mcommit 2574573feaf47c685ccd9de72f300c043c615d2f[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue May 9 17:23:00 2017 -0700

    vp9: Wrap threshold tuning for HD only when denoiser is enabled.
    
    Fixes a [1;31mspeed[m regression.
    
    Change-Id: I23d942e4af17fa81fe4a366c7369b3ad537e59b0

[33mcommit fff358fb068b0e7796734806ea53083fbe80056d[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri May 5 16:50:19 2017 -0700

    Change target bitrate thresh in denoiser test.
    
    An intended behavior change disabling exhaustive searches in [1;31mspeed[m
    feature causes VP9/DatarateTestVP9LargeDenoiser.4threads test failure.
    Change the threshold to make it pass.
    
    BUG=webm:1429
    
    Change-Id: Ibcbe2314c6b2525799894f5d7204fc8eb4ec2a1e

[33mcommit d6a7489dd5980352593826710937ae9486d63279[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon May 1 13:19:49 2017 -0700

    neon variance: process two rows of 8 at a time
    
    When the width is equal to 8, process two rows at a time. This doubles
    the [1;31mspeed[m of 8x4 and improves 8x8 by about 20%.
    
    8x16 was using this technique already, but still improved a little bit
    with the rewrite.
    
    Also use this for vpx_get8x8var_neon
    
    BUG=webm:1422
    
    Change-Id: Id602909afcec683665536d11298b7387ac0a1207

[33mcommit a3452996a16bd70c72d68a14e1465cd44a2c4950[m
Author: Yi Luo <luoyi@google.com>
Date:   Mon Apr 17 15:43:06 2017 -0700

    High bit depth inter prediction horizontal/vertical filters AVX2
    
    User level [1;31mspeed[m improvement on i7-6700, cpu-used=1,
      x86_64 Linux, bitrate, 1080p, 8Mbps, 4K, 16Mbps:
    - Decoder:
      1080p: ~4%
      4K: ~5%
    - Encoder:
      1080p: ~1%
      4K: ~3%
    
    Change-Id: I51b48f9c5de0d62487d5a11aa579c97bd03dd640

[33mcommit e6ca81ee6706e3c151cdc9b5b33ea695f35e062d[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Mon May 1 15:53:44 2017 +0000

    ppc: Add convolve8_avg_vert_vsx
    
    Only the generic one again, [1;31mspeed[mups for 8x8 and larger blocks to
    come later.
    
    Change-Id: I90d481d3a602d1e277ead8f3934eca126b86b72d

[33mcommit a65f1771ada45c2df5b44ce226516f853f9d10ae[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Mon May 1 15:53:44 2017 +0000

    ppc: Add convolve8_vert
    
    Only the generic one again, [1;31mspeed[mups for 8x8 and larger blocks
    to come later.
    
    Change-Id: Ia509d6225984b4930ec03928c9bcbf51486da99f

[33mcommit 04de501229a57e9f78574fe660be7eb3b162036c[m
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Apr 27 12:56:52 2017 -0700

    vp9: Fix condition for disabling adaptive_rd_thresh.
    
    Add [1;31mspeed[m constrains for disabling adaptive_rd_thresh when
    row_mt_bit_exact is set.
    
    Change-Id: I2445115c2f9a2e46b8a0966031a0fea488d4964e

[33mcommit 004fab120a4f57881ef9f7431f91043748d7bf95[m
Merge: 15ee8a8c4 c614164cb
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 26 15:45:05 2017 +0000

    Merge "vp9: SVC: Adjust some [1;31mspeed[m settings for temporal layers."

[33mcommit 997e54ea433b4d6293c58e6b2bcc001b66f727b0[m
Merge: 92ec0674f 69b0242e9
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Apr 26 00:09:21 2017 +0000

    Merge "vp9: [1;31mspeed[m >= 8: Skip uv variance in model_rd_sb_y_large"

[33mcommit c614164cb6b16bcf26f30ed761950d0276769779[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Apr 25 16:11:19 2017 -0700

    vp9: SVC: Adjust some [1;31mspeed[m settings for temporal layers.
    
    Make some [1;31mspeed[m setting changes for temporal enhancement layers,
    and remove the switch in subpel_force_stop for the aggressive_base_mv
    in non-rd pickmode.
    
    Gain some 2-3% [1;31mspeed[m with little/negligible quality loss.
    
    Change-Id: I3e2a7f80ff45f38c0a6ceb01b34dbca2f53edbf0

[33mcommit 69b0242e9a98d4742592e3e3dbaa5592759ed021[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Apr 21 10:10:05 2017 -0700

    vp9: [1;31mspeed[m >= 8: Skip uv variance in model_rd_sb_y_large
    
    For [1;31mspeed[m >= 8 and color_sensitivity not set, skip the transform
    skipping test in UV planes.
    Add a new condition to check noise level to skip chroma check
    for [1;31mspeed[m >= 8 if y_sad is high.
    
    1~2% [1;31mspeed[mup on ARM for [1;31mspeed[m 8.
    
    Borg tests show neutral results in both rtc and rtc_derf.
    
    Change-Id: Idecd3ff6e28c97757a43bb6f3a7082c85f72109c

[33mcommit 92ec0674fdb21f3f195a1aba227e53adc1033621[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 14 11:32:19 2017 -0700

    vp9; Reduce artifact in non-rd pickmode for lighting changes.
    
    Add a low-variance high-sumdiff to the superblock content state
    and use it to limit the mv and bias some decisions in non-rd pickmode.
    Only affects [1;31mspeed[m >= 6.
    
    Reduces artifact for lighting changes.
    Small/no difference in metrics on RTC set.
    
    Change-Id: Ic84b2379fe0ae3fa71ae826ee6bae3eaf551a25b

[33mcommit 10a497bd3823d88cf4c2f816a648ca0e79bd07be[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Mon Apr 24 12:06:49 2017 -0700

    Make the row based multi-threaded encoder deterministic
    
    This patch followed allow_exhaustive_searches feature modification and
    continued to modify the encoder to achieve the determinism in the row
    based multi-threaded encoding. While row-mt = 1 and using multiple
    threads, the adaptive feature in encoder was disabled, which gave
    BDRate gain(at [1;31mspeed[m 1, -0.6% ~ -0.7%; at [1;31mspeed[m 2, -0.46% ~ -0.59%),
    but some encoder [1;31mspeed[m losses(7% ~ 10% at [1;31mspeed[m 1 and 3% ~ 6% at
    [1;31mspeed[m 2). These [1;31mspeed[m losses were acceptable considering the [1;31mspeed[m
    gains obtained from row-mt.
    
    Change-Id: I60d87a25346ebc487a864b57d559f560b7e398bb

[33mcommit bca4564683a35c795973ce2a318cc4f1391f9bbb[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Apr 19 17:00:08 2017 -0700

    Make allow_exhaustive_searches feature no longer adaptive
    
    A previous patch turned on allow_exhaustive_searches feature only for
    FC_GRAPHICS_ANIMATION content. This patch further modified the feature
    by removing the exhaustive search limit, and made it no longer adaptive.
    As a result, the 2 counts that recorded the number of motion searches
    were removed, which helped achieve the determinism in the row based
    multi-threading encoding. Tests showed that this patch didn't cause
    the encoder much slower.
    
    Used exhaustive_searches_thresh for this [1;31mspeed[m feature, and removed
    allow_exhaustive_searches. Also, refactored the [1;31mspeed[m feature code
    to follow the general [1;31mspeed[m feature setting style.
    
    Change-Id: Ib96b182c4c8dfff4c1ab91d2497cc42bb9e5a4aa

[33mcommit 7ae1e321a15033370f3658affc8594e401b564e3[m
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Apr 20 10:57:02 2017 -0700

    vp9: Non-rd pickmode:  Avoid computation duplication.
    
    In non-rd pickmode ([1;31mspeed[m >= 5), avoid duplication of computations in
    model_rd_for_sb_y when the [1;31mspeed[m feature use_simple_block_yrd is
    enabled (or for high bitdepth build under certain conditions).
    
    QVGA, VGA and HD have 1.23%, 2.68% and 1.7% [1;31mspeed[mup on ARM for [1;31mspeed[m 8,
    respectively.
    
    Encoding results are bitexact for [1;31mspeed[m >= 5.
    
    Change-Id: I3f9130810c21439f5ad7e159e21cb2243dcd05f1

[33mcommit 58245d7050d7ea4433f8c1965d229d623f0dd4b7[m
Author: Luca Barbato <lu_zero@gentoo.org>
Date:   Sun Apr 9 13:05:09 2017 +0000

    ppc: dc predictor 8x8
    
    Slightly faster, the other dc predictors cannot be faster since
    the computation [1;31mspeed[mup is overwhelmed by the time spent reading
    dst to write just the 8x8 part.
    
    Change-Id: I94a0b50500adf8b7b6bb919dbf5c7adf5b9fba66

[33mcommit 5f39262dccb82a46cbce7a51c255432d22ef4049[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 14 10:16:44 2017 -0700

    vp9: Adjust [1;31mspeed[m features for [1;31mspeed[m 8 at low resoln.
    
    For low resolutions (<= CIF): use quarter-pixel and simple_block_yrd.
    
    ~5% gain on RTC_derf.
    ~6-7% slowdown on ARM.
    
    Change-Id: I4439ebd1116b9decac04786503f978840b68a60c

[33mcommit 863f860bfcf3bdc26eeecb299aa481d0f63d11ac[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Apr 11 16:17:18 2017 -0700

    vp9: Avoid encoder loopfilter for non-reference frames.
    
    Useful for SVC, where the top layer enhancement frames may
    not update any reference buffers, as is the case for the
    patterns in the 1 pass CBR SVC when #temporal_layers > 1.
    
    ~3% encoder [1;31mspeed[mup for SVC patterns with temporal layers
    in 1 pass CBR mode.
    
    Updated the SVC datarate tests for the mismatch frames.
    Set the frame-dropper off in some tests with #temporal_layers > 1
    so we can correctly set #mismatch frames. Adjusted rate target
    threshold for tests where frame-dropper was turned off.
    
    Change-Id: Ia0c142f02100be0fed61cd2049691be9c59d6793

[33mcommit 28a8622143e03359cda6b9f2ae603015c501ab87[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Mar 23 14:54:48 2017 -0700

    vpx_comp_avg_pred: sse2 optimization
    
    Provides over 15x [1;31mspeed[mup for width > 8.
    
    Due to smaller loads and shifting for width == 8 it gets about 8x
    [1;31mspeed[mup.
    
    For width == 4 it's only about 4x [1;31mspeed[mup because there is a lot of
    shuffling and shifting to get the data properly situated.
    
    BUG=webm:1390
    
    Change-Id: Ice0b3dbbf007be3d9509786a61e7f35e94bdffa8

[33mcommit 2420f44342db48bb491a048f0cd14c818f7d5817[m
Merge: 6557baf33 f16f08e55
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Apr 11 00:45:20 2017 +0000

    Merge "vp9: [1;31mspeed[m >= 8: Adjust [1;31mspeed[m settings on ARM."

[33mcommit f16f08e55bce50f3b5200ba9ced2d044b151f8af[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Apr 10 13:55:35 2017 -0700

    vp9: [1;31mspeed[m >= 8: Adjust [1;31mspeed[m settings on ARM.
    
    Set adaptive_rd_thresh to 2 when simple block yrd is not used.
    
    Fix regression caused by computing y sad without
    int_pro_motion_estimation on low res motion clips.
    
    Overall 0.07% quality loss on rtc_derf.
    
    Change only affects low res on [1;31mspeed[m 8.
    
    Change-Id: Ic6a188a56529f1034d6431005fb4b0e24e8a7e27

[33mcommit 6557baf3363e967c05da910daf3ec41d22594e2d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Apr 10 14:56:46 2017 -0700

    vp9: 1 pass CBR: avoid nonrd_pick_partition on segment.
    
    For [1;31mspeed[m 5, 1 pass CBR: Don't use the nonrd_pick_partition
    on the segment, rather use choose_partitioning followed by
    nonrd_select_partition (as is done on base segment).
    
    Little/no quality loss on RTC and RTC_derf (< 0.3%),
    [1;31mspeed[mup of at least 5%.
    
    Change-Id: I5273d5f950e60adf5e437b4ca8c4f63964641e83

[33mcommit 3227a9be5fe1fdf662fe397e6abddce3c702e671[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 6 10:25:55 2017 -0700

    vp9; Move the denoising condition for [1;31mspeed[m 5.
    
    Move the condition for effectively disabling the denoising
    for [1;31mspeed[m 5 into the vp9_denoiser_denoise().
    
    This is cleaner, and also moving the condition into vp9_denoiser_denoise
    will keep the denoiser buffer updated with the current source.
    This allows for more consistent behavior if [1;31mspeed[m is changed midstream.
    
    Change-Id: Ia001f591c56e454bf724c3ae73c024badb183ef8

[33mcommit c9fbb1881a1323272d9afac23a4988c6905a6322[m
Merge: 705fc9f10 288d73c86
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Apr 6 02:57:16 2017 +0000

    Merge "vp9: [1;31mspeed[m 8: Compute y sad without int_pro_motion_estimation."

[33mcommit 288d73c861c3064040c63235e33aae6665e7c349[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Apr 4 17:47:03 2017 -0700

    vp9: [1;31mspeed[m 8: Compute y sad without int_pro_motion_estimation.
    
    Little change in overall PSNR in rtc. 2-4% [1;31mspeed[mup on VGA on ARM.
    
    Change-Id: I3395806d7afd456deacd4077c330adca13ab0645

[33mcommit 511a20744491d31e9a4113a47982fbfb209de0dd[m
Merge: 6fc2e57c2 2136de937
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 6 00:25:44 2017 +0000

    Merge "vp9: Temporal denoising: avoid denoising for [1;31mspeed[m <= 5."

[33mcommit 2136de9374a48b30d7b9e8a169f6ac5999aca670[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 5 16:38:33 2017 -0700

    vp9: Temporal denoising: avoid denoising for [1;31mspeed[m <= 5.
    
    Temporal denoiser runs in non-rd pickmode, so it is only used
    for [1;31mspeed[m >= 5. Regression exists for [1;31mspeed[m 5, due to use of
    reference_partition (which use non-rd pickmode for partitioning).
    Avoid denoising for now at [1;31mspeed[m 5.
    
    Change-Id: I74a74d2e1404d7cfd33dcf4ec06dd2e503256cf0

[33mcommit 58ba880b941ee263e434db2ec609c33f0424e17d[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Mar 31 14:24:03 2017 -0700

    Refactor: Clean memory allocation for copy partition.
    
    Move the memory allocation from setting [1;31mspeed[m features.
    
    Change-Id: I2e89dfaeb46daee63effe5a5df62feed732aa990

[33mcommit 4863e07c01ca539bd2a0ebcbed6f210050d6c578[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 22 22:36:19 2017 -0700

    vp9: Non-rd partition: avoid unneeded call to chrome_check
    
    Since y_sad is not computed yet (on the early exit due to source_sad),
    no need to check for setting color_sensitiviy.
    
    Only affects [1;31mspeed[m >=8. No change in behavior.
    
    Change-Id: I3a6f2d20fed38d8b8ec51b75bcacf9a21f2db916

[33mcommit ff0e0a76e8ce4030e5ca30a4ad65d8a41c2584c0[m
Merge: dcd6c87b8 4d5099132
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 22 22:56:17 2017 +0000

    Merge "vp9: Adjust some [1;31mspeed[m settings for [1;31mspeed[m 8."

[33mcommit 4d50991320d51c0560249ea9e607d15f63058d33[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 22 12:15:06 2017 -0700

    vp9: Adjust some [1;31mspeed[m settings for [1;31mspeed[m 8.
    
    Allow for simple_block_rd for VGA resoln, and reduce
    adaptive_rd_thresh to 1.
    
    On average no loss on RTC set, ~4% [1;31mspeed[mup on mac.
    
    Change-Id: Ib549c4061c853776062b5e34040f839d470fbebc

[33mcommit dcd6c87b80f2435ce4f206c5875f3be1f23b6999[m
Merge: c099d6be1 20c289269
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Mar 22 22:02:24 2017 +0000

    Merge "vp9: Enable adaptive_rd_threshold for row mt for realtime [1;31mspeed[m 8."

[33mcommit 20c2892693b3be46cb53b8c9262d41d7a61999aa[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Mar 14 13:45:20 2017 -0700

    vp9: Enable adaptive_rd_threshold for row mt for realtime [1;31mspeed[m 8.
    
    Change it to row based array to avoid the slow down cause by sync.
    row-mt on, [1;31mspeed[m 8, 2 threads: ~4% [1;31mspeed[mup for VGA on ARM benefited
    from adaptive_rd_threshold.
    
    Change-Id: I887e65a53af20a6c4f48d293daaee09dab3512cf

[33mcommit 06c8713e89514ccbed2d68e847adfd7830b53881[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Mar 16 15:55:33 2017 -0700

    vp9: Use sb content measure to bias against golden.
    
    For each superblock, keep track of how far from current frame
    was the last significant content change, and use that (along
    with GF distance), to turnoff GF search in non-rd pickmode.
    
    Only enabled for [1;31mspeed[m >= 8.
    
    avgPNSR on RTC/RTC_derf down by ~0.9/1.2.
    Speedup on mac: ~3-5%.
    Speedup on arm: 3.6% for VGA and 4.4% for HD.
    
    Change-Id: Ic3f3d6a2af650aca6ba0064d2b1db8d48c035ac7

[33mcommit 9c2552a1c149cbc7ee407c514e0cf78e6f45bcec[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Thu Mar 16 15:45:07 2017 -0700

    Record the sum of tx block eobs in the partition block
    
    The sum of tx bloxk eobs is needed in the machine learning based partition
    early termination. The eobs are first accumulated during tx search, and
    then the value associated with the best tx_size is copied to ctx for later
    use.
    
    After the sum of eobs are calculated correctly, re-enabled
    ml_partition_search_early_termination [1;31mspeed[m feature.
    
    Re-did the quality/[1;31mspeed[m test to check the impact of the fix.
    
    1. Borg test BDRATE result:
    4k set:     PSNR: +0.183%; SSIM: +0.100%;
    hdres set:  PSNR: +0.168%; SSIM: +0.256%;
    midres set: PSNR: +0.186%; SSIM: +0.326%;
    
    2.Average [1;31mspeed[m gain result:
    4k clips: 21%;
    hd clips: 26%;
    midres clips: 15%.
    
    The result is in line with the original result.
    
    Change-Id: I4209a95c89be03b4cbfb6a95b16885f89feddbda

[33mcommit 02975a604c679b57ad57e4785abf6f7f0ebd6052[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Mar 16 17:05:42 2017 -0700

    vp9: Fix [1;31mspeed[m 8 condition for enabling copy_partition.
    
    Change-Id: I2c090e6ba853a30fef1957b620853315f9471753

[33mcommit 27d5a57072ff10f4a751ff72a8484ab402a0ecab[m
Merge: 2fa709280 02463273c
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Mar 15 00:03:52 2017 +0000

    Merge "vp9: Using source sad for [1;31mspeed[mup for dynamic resizing."

[33mcommit 02463273c974a48c87992c603c944161f9507677[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Mar 13 15:27:02 2017 -0700

    vp9: Using source sad for [1;31mspeed[mup for dynamic resizing.
    
    Only for [1;31mspeed[m >= 7.
    
    Change-Id: I3ac85fbb4023cf7e6f8333806b345b0174382a09

[33mcommit fedcf83f333820cfbcc8c35f2b0117bb1c08599e[m
Author: Yi Luo <luoyi@google.com>
Date:   Mon Mar 6 15:11:49 2017 -0800

    Improve idct32x32_1024_add SSSE3 intrinsics performance
    
    - Function level [1;31mspeed[m improves ~12%.
    
    Change-Id: I9b7dbddabf08c7d0f6b25264e6074d5ccbe39290

[33mcommit 78a69469042e309786f390040eb8d92de00615d0[m
Merge: c0c789ab5 c216c8d6f
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 14 17:50:17 2017 +0000

    Merge "vp9: Speed >= 8: Enable simple_block_yrd [1;31mspeed[m feature."

[33mcommit c0c789ab501c569b808034340c7ca5e97d907b4f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 14 09:17:06 2017 -0700

    vp9: Adjust copy partition threshold, for [1;31mspeed[m 8.
    
    Reduce it from 5 to 4, small/no change in metrics or [1;31mspeed[m.
    Small reduction in dragging artifact near moving head.
    
    Change-Id: Ic3bc5ca67c70bf0c89fc2ed14454840a28ae5b6a

[33mcommit c216c8d6f29c74f58bebc11701b762fbfd74c55a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Sun Mar 12 22:38:52 2017 -0700

    vp9: Speed >= 8: Enable simple_block_yrd [1;31mspeed[m feature.
    
    Enable [1;31mspeed[m feature for resolutions > VGA.
    avgPSNR on RTC down by ~1.7%.
    Speedup on ARM: ~5%.
    
    Change-Id: I7a3fe5f7425aa8df3f4a2eced1afa355bc0d4c95

[33mcommit f0a22b23feed4977c36acce1d6b1a0d53af6beb8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 8 10:57:48 2017 -0800

    vp9: Fix to source_sad feature for SVC.
    
    Allow [1;31mspeed[m feature sf->use_source_sad to be used
    on highest spatial layer for SVC.
    
    Change-Id: I260eb0478902764f49f83e43b17024fe86ff3b22

[33mcommit 670101439fe4a976fcacf997ff383b6cd6704596[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Mon Feb 27 14:26:15 2017 -0800

    Apply machine learning-based early termination in VP9 partition search
    
    This patch was based on Yang Xian's intern project code. Further modifications
    were done.
    1. Moved machine-learning related parameters into the context structure.
    2. Corrected the calculation of sum_eobs.
    3. Removed unused parameters and calculations.
    4. Made it work with multiple tiles.
    5. Added a [1;31mspeed[m feature for the machine-learning based partition search
    early termination.
    6. Re-organized the code.
    
    The patch was rebased to the top-of-tree.
    
    Borg test BDRATE result:
    4k set:     PSNR: +0.144%; SSIM: +0.043%;
    hdres set:  PSNR: +0.149%; SSIM: +0.269%;
    midres set: PSNR: +0.127%; SSIM: +0.257%;
    
    Average [1;31mspeed[m gain result:
    4k clips: 22%;
    hd clips: 23%;
    midres clips: 15%.
    
    Change-Id: I0220e93a8277e6a7ea4b2c34b605966e3b1584ac

[33mcommit ffb3c50da1d7ac24e6ae7858cb62abb348552b6a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 7 14:32:30 2017 -0800

    vp9: Enable row multithreading for SVC in real-time mode.
    
    Enable row-mt for SVC for real-time mode, [1;31mspeed[m >=5.
    
    Add the controls to the sample encoders, but keep it off for now.
    Add the control and enable it for the 1 pass CBR unittests.
    
    For [1;31mspeed[m 7, 3 layer SVC, 2 threads, row-mt enabled gives about ~5% [1;31mspeed[mup.
    
    Change-Id: Ie8e77323c17263e3e7a7b9858aec12a3a93ec0c1

[33mcommit 327add990f85b386726c7b8a8fb2c937e899fdd5[m
Author: Yi Luo <luoyi@google.com>
Date:   Thu Mar 2 16:52:41 2017 -0800

    Improve idct32x32_135_add SSSE3 intrinsics performance
    
    - Split the inv txfm into three parts to avoid stack spillover.
    - Function level [1;31mspeed[m improves ~12%.
    - Use function and macro to remove some repeated code.
    
    Change-Id: I14f5f072334fd766808cb52bf648df792e7379ee

[33mcommit 04aa9e28d532e45b85f8a8342b6108124d207eec[m
Merge: 97b6a6f03 ea3c817ac
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Mar 9 03:58:14 2017 +0000

    Merge "vp9: Enable two [1;31mspeed[m features for SVC real-time mode."

[33mcommit ea3c817ac23d5075df2905e6549cd2dadb4750f6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 8 16:10:45 2017 -0800

    vp9: Enable two [1;31mspeed[m features for SVC real-time mode.
    
    Enable short_circuit_low_temp_var and limit_newmv_early_exit
    for SVC, 1 pass CBR mode.
    
    Change-Id: I77df2b2c6cc40657bb8ea76e19dfc2fdaad6389e

[33mcommit 834f26c3b98a99945d0e675956818a79a924998a[m
Merge: 42a1b310e c4c0331f6
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Mar 8 23:14:27 2017 +0000

    Merge "Shift [1;31mspeed[m 2 from non-large VP9 tests to large ones."

[33mcommit 099e9bf1ff823ca3720c7ba24791a1482c1e7d16[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Mar 8 12:24:15 2017 -0800

    Make the partition search early termination feature to be frame size dependent
    
    The 2 thresholds(i.e. partition_search_breakout_dist_thr and
    partition_search_breakout_rate_thr) are used as the partition search
    early termination [1;31mspeed[m feature. This refactoring patch made this
    feature to be frame size dependent consistently throughout the code.
    
    Change-Id: Idaa0bd8400badaa0f8e2091e3f41ed2544e71be9

[33mcommit 77311e0dff5c5f561e0f6480bad5e276e22bf4ca[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Mar 7 13:06:06 2017 -0800

    Update vpx_idct32x32_1024_add_neon()
    
    Most are cosmetics changes.
    Speed has no change with clang 3.8, and about 5% faster with gcc 4.8.4
    
    Tried the strategy used in 8x8 and 16x16 (which operations' orders are
    similar to the C code), though [1;31mspeed[m gets better with gcc, it's worse
    with clang.
    
    Tried to remove store_in_output(), but [1;31mspeed[m gets worse.
    
    Change-Id: I93c8d284e90836f98962bb23d63a454cd40f776e

[33mcommit c4e5c54d69920c07f5d421ba805da1a4c9c3e82d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Mar 7 15:29:15 2017 -0800

    cosmetics,dsp/arm/: vpx_idct32x32_{34,135}_add_neon()
    
    No [1;31mspeed[m changes and disassembly is almost identical.
    
    Change-Id: Id07996237d2607ca6004da5906b7d288b8307e1f

[33mcommit c4c0331f65424fabd10b56c97dc8dfac68b1bccb[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Mar 7 13:58:11 2017 -0800

    Shift [1;31mspeed[m 2 from non-large VP9 tests to large ones.
    
    This may fix the time out failure of valgrind tests in nightly
    since more coverages were added on row-mt.
    
    Change-Id: Id9414e66d1a266602c7495243d9f5cb69e17ccdc

[33mcommit b60617f5ff9e50ac0d7878752efba27bcaaf3037[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Mar 2 13:01:53 2017 -0800

    vp9: Speed 8: reduce the adaptive_rd_thresh level.
    
    Reduce the level from 4 to 2.
    This gives ~1-2% quality gain on RTC set, with small decreaee in [1;31mspeed[m (~1-2% on mac).
    
    Change-Id: I7d959731badcee3d45b2f4a08efe378765016a13

[33mcommit 453f18040f62f4f1699c0e7c5e1ee288e571d9d2[m
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Mon Feb 13 11:36:02 2017 -0800

    vp9,realtime: Enable row multithreading for non-rd
    
    Enable row level multithreading for realtime encodes where non-rd
    path is used ([1;31mspeed[m >= 5).
    
    Change-Id: I5439cb49a02171166d8e1de06c7d5e6f8e819a41

[33mcommit 07c48ccfe090625e409be50ff82b6d8e6fc93578[m
Author: Yi Luo <luoyi@google.com>
Date:   Tue Feb 28 16:38:41 2017 -0800

    Improve idct32x32_34_add SSSE3 intrinsics performance
    
    - Split the transform into first half and second half.
    - Reschedule the instructions to avoid stack spillover.
    - Function level [1;31mspeed[m improves ~16%.
    
    Change-Id: I166889840d23aa8a273eca00f6fbdae8b4566f35

[33mcommit defe094e9e5e081028b0d4fcbf61f5a49ff1c34e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 27 12:03:12 2017 -0800

    vp9: Fix an issue with setting variance thresholds.
    
    From commit:
    https://chromium-review.googlesource.com/c/441393/
    
    On non-segment the set_vbp_thresholds() should be called
    again to adjust thresholds based on content_state of superblock.
    This was the intended behavior from 441393.
    
    Small change in RTC metrics and [1;31mspeed[m.
    
    Change-Id: I45e5fbdc4af74db76b3cb4f13074fcae0eb2219e

[33mcommit 904b957ae965bd3d67f15a75cd9db7954f810d33[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Feb 16 17:57:44 2017 -0800

    consolidate block_error functions
    
    vp9_highbd_block_error_8bit_c was a very simple wrapper around
    vp9_block_error_c. The SSE2 implemention was practically identical to
    the non-HBD one. It was missing some minor improvements which only
    went into the original version.
    
    In quick [1;31mspeed[m tests, the AVX implementation showed minimal
    improvement over SSE2 when it does not detect overflow. However, when
    overflow is detected the function is run a second time. The
    OperationCheck test seems to trigger this case and reverses any
    [1;31mspeed[m benefits by running ~60% slower. AVX2 on the other hand is
    always 30-40% faster.
    
    Change-Id: I9fcb9afbcb560f234c7ae1b13ddb69eca3988ba1

[33mcommit 0998a146d4f63c1758d1d1b941e7a33a1515695d[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Feb 22 14:24:02 2017 -0800

    Make vp9_scale_and_extend_frame_ssse3 work for hbd when bitdepth = 8.
    
    Only works for bitdepth = 8 when compiled with high bitdepth flag.
    4x [1;31mspeed[m ups for handling 1:2 down/upsampling.
    
    Validated manually for:
    1) Dynamic resize for a single layer encoding
    2) SVC encoding with 3 spatial layers
    Results are bitexact with the patch and the [1;31mspeed[m gain (~4x) in the
    scaling was verified.
    
    BUG=webm:1371
    
    Change-Id: I1bdb5f4d4bd0df67763fc271b6aa355e60f34712

[33mcommit 7e7d820d5b33969c00b3c3041e39d35a3eae6555[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Feb 17 08:44:50 2017 -0800

    vp9: Non-rd pickmode: use simple block_yrd under some conditons.
    
    For [1;31mspeed[m 8 only.
    3% [1;31mspeed[m up for QVGA and 6.3% for VGA on Nexus 6.
    ~3% avgPSNR decrease on rtc_derf and 2.9% on rtc.
    
    Disabled for now.
    
    Change-Id: I70133f1f6c804d663d594df437bfe7fdb0030d6a

[33mcommit 3d1fa00fce0dc040dd0107d36b9b825a9b8f2f6d[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Feb 22 09:49:17 2017 -0800

    vp9: Only compute y_sad for golden in variance partition for [1;31mspeed[m < 8.
    
    Only affects [1;31mspeed[m 8. No obvious quality regression. Systematic [1;31mspeed[m
    ups by ~1% on Nexus 6.
    
    Change-Id: Ia904ca28ea041c3281c532911ec38fb7d7f46a17

[33mcommit 7f2daa74a05beee77003ef4288eafb3e3db9a531[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 13 10:16:42 2017 -0800

    vp9: Incorporate source sum_diff into non-rd partition thresholds.
    
    Increase the variance partition thresholds for superblocks that
    have low sum-diff (from source analysis prior to encoding frame).
    Use it for now only for [1;31mspeed[m >= 7 or for denoising on.
    
    Small change on metrics for rtc set: less than ~0.1 avgPNSR decrease
    on RTC set, for both [1;31mspeed[m 7 and 8.
    
    Change-Id: I38325046ebd5f371f51d6e91233d68ff73561af1

[33mcommit 4e1ba35458bf933113aa1ec74ca306c1fd47e9af[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 20 20:15:40 2017 -0800

    vp9: Fix for non-rd pickmode for high-bitdepth build.
    
    Use the simple block_yrd under certain conditions.
    The optimization code is completed but the [1;31mspeed[m is still slower
    (~6% on 720p) than the low-bitdepth build.
    
    For now, use the more complex block_yrd under certain conditions
    (always use it for [1;31mspeed[m <= 5, otherwise use it on key frames and for
    bsize >= 32x32).
    
    This gives about ~2-3% gain in quality for [1;31mspeed[m 7 on RTC set
    (over high bitdepth build), with about the same encoder fps as the
    low bitdepth build.
    
    Change-Id: Ibe92a1945d0bd635f880befb4c815727df62d754

[33mcommit 1f8e8e5bf1eff47c22bcdfac5fe045d1d33ef01b[m
Author: Yi Luo <luoyi@google.com>
Date:   Fri Feb 17 10:59:46 2017 -0800

    Fix idct8x8 SSSE3 SingleExtremeCoeff unit tests
    
    - In SSSE3 optimization, 16-bit addition and subtraction would
      overflow when input coefficient is 16-bit signed extreme values.
    - Function-level [1;31mspeed[m becomes slower (unit ms):
      idct8x8_64: 284 -> 294
      idct8x8_12: 145 -> 158.
    
    BUG=webm:1332
    
    Change-Id: I1e4bf9d30a6d4112b8cac5823729565bf145e40b

[33mcommit f62dcc9c334eb5060293cbf0cfd7de82bb4ea78c[m
Author: Yi Luo <luoyi@google.com>
Date:   Thu Feb 16 13:15:22 2017 -0800

    Replace idct32x32_1024_add_ssse3 assembly with intrinsics
    
    - Encoding/decoding test, BQTerrace_1920x1080_60.y4m, on
      i7-6700, no obvious user-level [1;31mspeed[m performance downgrade.
    - Passed unit tests.
    
    Change-Id: I20688e0dd3731021ec8fb4404734336f1a426bfc

[33mcommit 72a43e237878cb6f7f964e2fd3aa08ee04c0efee[m
Author: Yi Luo <luoyi@google.com>
Date:   Tue Feb 14 17:09:59 2017 -0800

    Add idct32x32_135_add SSSE3 intrinsics
    
    - Replace the corresponding assembly code.
    - No user level [1;31mspeed[m performance degrade.
    - Unit tests passed.
    
    Change-Id: Idd0c5a4bad4976f1617c34100cb46e75e3b961e5

[33mcommit 725606a6783b293d45434b3dba75bd34e04c22d9[m
Merge: d5edf56bb f82280820
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 15 20:07:19 2017 +0000

    Merge "vp9. Use same source_sad threshold for all [1;31mspeed[ms."

[33mcommit f82280820a88e3b9b42c95bd0e172ddc7a6a7b22[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 15 11:26:29 2017 -0800

    vp9. Use same source_sad threshold for all [1;31mspeed[ms.
    
    Only affects real-time mode.
    
    Change-Id: Iba836f110c4da936f5173cc0f54424d5b6121bff

[33mcommit 716c1d5ff512135577ba80d336f0c572c987db21[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 15 09:18:34 2017 -0800

    Vp9: Speed 8 aq-mode=3: Reduce computation in estimating bits per mb.
    
    vp9_compute_qdelta_by_rate has almost 2% overhead in profiling on Nexus 6.
    Reduce the calling of that function in [1;31mspeed[m 8 by estimating the delta-q.
    Both rtc and rtc_derf show little/no change in avg psnr/ssim.
    Encoding [1;31mspeed[m is 2~3% faster on Nexus 6.
    
    Change-Id: If25933715783f31104a18a5092ea347b1221b5f5

[33mcommit 71061e9332c05324007e7f6c900285273793366d[m
Author: Ranjit Kumar Tulabandu <ranjit.tulabandu@ittiam.com>
Date:   Fri Feb 10 16:25:50 2017 +0530

    Row based multi-threading of encoding stage
    
    (Yunqing Wang)
    This patch implements the row-based multi-threading within tiles in
    the encoding pass, and substantially [1;31mspeed[ms up the multi-threaded
    encoder in VP9.
    
    Speed tests at [1;31mspeed[m 1 on STDHD(using 4 tiles) set show that the
    average [1;31mspeed[mups of the encoding pass(second pass in the 2-pass
    encoding) is 7% while using 2 threads, 16% while using 4 threads,
    85% while using 8 threads, and 116% while using 16 threads.
    
    Change-Id: I12e41dbc171951958af9e6d098efd6e2c82827de

[33mcommit bd86de1ac8f1d3f5fa894e2605821914c2d9ff22[m
Author: Yi Luo <luoyi@google.com>
Date:   Wed Feb 8 11:09:03 2017 -0800

    Replace idct32x32_34_add_ssse3 assembly with intrinsics
    
    - No user-level [1;31mspeed[m performance change.
    - Pass unit tests.
    
    Change-Id: Idfc598e00f354265e41f6b3219f4734216c115c6

[33mcommit 318ca07657507e464556ffb909c28856eb6e1d13[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Mon Feb 13 12:29:31 2017 -0800

    The bitstream bit match test in multi-threaded encoder
    
    While the new-mt mode is enabled(namely, allowing to use row-based
    multi-threading in encoder), several [1;31mspeed[m features that adaptively
    adjust encoding parameters during encoding would cause mismatch
    between single-thread encoded bitstream and multi-thread encoded
    bitstream. This patch provides a set_control API to disable these
    features, so that the bit match bitstream is obtained in the unit
    test.
    
    Change-Id: Ie9868bafdfe196296d1dd29e0dca517f6a9a4d60

[33mcommit 71f5314993ff0ff02ae827f69acc8c34837f2e65[m
Merge: b106abe57 1a5482d4d
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Feb 7 22:24:59 2017 +0000

    Merge "vp9: Denoiser [1;31mspeed[m-up: increase partition and ac skip thresholds."

[33mcommit 1a5482d4d856feacd7bf5a6385f72051675f93a7[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 6 17:02:28 2017 -0800

    vp9: Denoiser [1;31mspeed[m-up: increase partition and ac skip thresholds.
    
    Add factor to increase varianace partition and ac skip thresholds,
    under certain conditions (noise level and sum_diff), to increase
    denoiser [1;31mspeed[m.
    
    Change-Id: I7671140ef3598bf5f114a72623d68792bcd7b77b

[33mcommit aa327a1ed4280bfa30953b2cb4c05c8a64b595a1[m
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Feb 2 17:51:01 2017 -0800

    vp9: [1;31mspeed[m 8: Tune threshold of ac skip and partitioning.
    
    Threshold for partitioning only affects VGA and lower res.
    0.07% quality regression is observed in borg tests on rtc_derf
    and 0.2% regression on rtc.
    5.6% [1;31mspeed[m up for low res and 6.8% for VGA on Nexus 6.
    
    Change-Id: If85a2919b48c991de66059c90f32ed06980452be

[33mcommit d47f257484e9a4c50211adad0b1d4ebc0680d3d5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jan 30 11:12:49 2017 -0800

    vp9: Modify bsize condition for using model_rd_large for [1;31mspeed[m 7.
    
    In non-rd pickmode: Allow [1;31mspeed[m 7 to also use larger block size in
    model_rd. Small change in behavior for [1;31mspeed[m 7.
    
    Change-Id: I8c5523e424308e8f0bc71b3f6324dec42a464cc8

[33mcommit b16c77cdc4de7a3245d35fe87f1d5d87779ef238[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jan 26 20:01:41 2017 -0800

    vp9: Modify bsize condition for using model_rd_large.
    
    In non-rd pickmode: small change in behavior for [1;31mspeed[m 6 and 7.
    Remove condition on HIGHBITDEPTH flag.
    
    Change-Id: I360a13fcc313d72612fe9b918162ef4bb278cdea

[33mcommit 3b2d08a93b218c110100d9ac2b7e939f3a7c4ed4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jan 25 11:39:02 2017 -0800

    vp9-denoiser: Modify skip denoising condition for small blocks.
    
    Skip denoising for blocks < 16x16, and for block = 16x16
    skip denoising for low noise levels and width > 480 for now.
    Allow for some [1;31mspeed[m-up in denoiser.
    
    Change-Id: Ib46cefe4741962d145fa08775defea3a9c928567

[33mcommit 3a7ad43fb81a456909d02dc4c2feff289a17430c[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Jan 24 17:20:05 2017 -0800

    vp9: Adjust threshold for y sad used in copying partition.
    
    Visual quality improvement is observed for noisy clips. Little effects
    on [1;31mspeed[m tests on Nexus 6.
    
    Change-Id: Ib38e04002220708c34102de7b5c36e9940775d89

[33mcommit ac1358cd56b6b0c76d773703af2584bb3a204c33[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Jan 23 12:10:01 2017 -0800

    vp9: Copy partition using avg_source_sad.
    
    Affecting only [1;31mspeed[m 8.
    Speed tests on Nexus 6 show 4% faster for QVGA and 2.4% faster for VGA.
    Little/negligible quality regression observed on both rtc and rtc_derf sets.
    
    Change-Id: I337f301a2db49a568d18ba7623160f7678399ae1

[33mcommit 40ffa2839f115beaa805159a74eef07ee36faa45[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Jan 23 15:58:15 2017 -0800

    vp9: Adjust the threshold to set avg_source_sad_sb flag.
    
    Affect only [1;31mspeed[m 8. Small/Negligible regression on rtc set.
    
    Change-Id: I67a6b6b4008a22ed798bd980336d95bb799f64b4

[33mcommit b71ff28a1aa9f9338083feb0063c3bea6c6c5103[m
Author: Marco Paniconi <marpan@google.com>
Date:   Sat Jan 21 18:12:45 2017 -0800

    vp9: Small threshold adjustment to unittest BasicRateTargeting444
    
    Due to recent change to [1;31mspeed[m >=7 from commit:219cdab.
    
    Change-Id: I366e7750ec91119881050ff6c05849504c7959e8

[33mcommit 219cdab676fa77532072798fe10627f729f05585[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jan 17 10:39:26 2017 -0800

    vp9: Add feature to use block source_sad for realtime mode.
    
    Only for [1;31mspeed[m >= 7, and affects skipping of intra modes.
    Threshold is set low for now, needs to be tuned.
    Small/no difference in metrics on rtc clips.
    
    Change-Id: If9bdbd43f08d1f80407cdd2e9e5e96780dcd2424

[33mcommit 0f9760ab6f2cfbf7802ae5de305b7b94da7a8f02[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 13 15:13:36 2017 -0800

    vp9: Modify usage of force_skip under low temporal variance in non-rd pickmode.
    
    For short_circuit set to level 1, skip newmv for 64x64 blocks if the
    low temporal variance flag is set. Also modify threshold for 64x64 split
    in variance partitioning.
    
    Overall [1;31mspeed[m-up on noisy clips of 2-4%.
    Only affect [1;31mspeed[m >= 7.
    
    Change-Id: I384b3772007e84de6f8707e480d2ddf1fe1f907d

[33mcommit 159cc3b33c718d90a1a3bae87682d1d21d4af480[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 13 11:21:33 2017 -0800

    vp9: Add [1;31mspeed[m feature flag for computing average source sad.
    
    If enabled will compute source_sad for every superblock on every frame,
    prior to encoding. Off by default, only on for [1;31mspeed[m=8 when
    copy_partition is set.
    
    Change-Id: Iab7903180a23dad369135e8234b7f896f20e1231

[33mcommit f217049dbe0df053a60c3cabaef85bbbe613338b[m
Merge: b6fe63a50 47270b685
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 13 19:07:56 2017 +0000

    Merge "vp9: Adjust threshold for copy partiton, for [1;31mspeed[m=8."

[33mcommit 47270b6858d3b8e3cbb9e5cddee203977382a1a6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 13 10:27:51 2017 -0800

    vp9: Adjust threshold for copy partiton, for [1;31mspeed[m=8.
    
    Change-Id: I4799cb2b67d911ee385e6d6992c61633ca77e69d

[33mcommit 2ff2376fbcb240c202a51d0f77b339da4ee63450[m
Author: Jerome Jiang <jianj@google.com>
Date:   Thu Jan 12 17:59:22 2017 -0800

    vp9: Update threshold for partition copy.
    
    Avoid many visual artifacts. Compression quality is improved by more
    than 1%. Encode [1;31mspeed[m is about 4% for QVGA and 6% for VGA faster on
    android.
    
    Change-Id: I4dd0a81429ddf7efdef1e80a191da5fb8de8e8af

[33mcommit 6e07bf363404b95165df6c9058f3f6a7ed7fac30[m
Merge: 9f27d1f84 f129e0952
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jan 11 20:50:42 2017 +0000

    Merge "vp9: Turn on the partition copy for [1;31mspeed[m 8. Tune threshold."

[33mcommit f129e09529e7d9e78acc39c44714d6e5fc2f0008[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Jan 10 12:43:22 2017 -0800

    vp9: Turn on the partition copy for [1;31mspeed[m 8. Tune threshold.
    
    For [1;31mspeed[m 8, it [1;31mspeed[ms up the encoding on android by 6% for QVGA and
    7.4% for VGA with the new threshold. Overall PSNR is improved by 0.667
    for rtc.
    
    Change-Id: I4a644560b32c0b5b4e9f49ffb953d000413a3732

[33mcommit 299ef2f8ebad1c831097f1aedd3b0b477350de15[m
Merge: 5b1a8ca5e 198b834c9
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Jan 10 00:51:09 2017 +0000

    Merge "vp9: Set less aggresive short_circuit_low_temp_var for HD at [1;31mspeed[m 8."

[33mcommit 198b834c977c335621e502b2a8b0621093577b61[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Jan 9 15:04:13 2017 -0800

    vp9: Set less aggresive short_circuit_low_temp_var for HD at [1;31mspeed[m 8.
    
    Quality improved by 1.866 and 0.386 for two noisy clips (dark720p and
    marcooffice720p), respectively.
    
    Change-Id: Ib33a7672ae9ca53da156208f7cd13f07b5543e44

[33mcommit 35c4a13eb7d9c3c8c4c85974f39a0042a9930b88[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jan 9 13:03:50 2017 -0800

    vp9: Fix comment in [1;31mspeed[m features.
    
    Change-Id: I65d79c06b152922d725bf559adaa508f91cd5766
