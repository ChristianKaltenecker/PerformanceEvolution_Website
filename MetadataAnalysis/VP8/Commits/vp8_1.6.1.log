Searching between v1.5.0 and v1.6.1
Keywords: slow, fast, time, perf(ormance), optim(ize), regression
Additional keywords: quality,bitrate,pass
Keywords: slow fast time perf optim regression speed quality bitrate pass
For keyword slow:
[33mcommit f6921412d4daeef4148944d462e25948be0857d7[m
Author: James Zern <jzern@google.com>
Date:   Thu Nov 17 12:28:57 2016 -0800

    partial_idct_test: s/SingleLargeCoef/SingleExtremeCoeff/
    
    tests with 'Large' in the name are reserved for [1;31mslow[m running tests which
    may not be run on all platforms
    
    Change-Id: I2a7d6dd46b29b50469893e46433844132fb727c2

[33mcommit 0421d8e318016758942107c1bab820f480eb1be2[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Sep 26 15:35:23 2016 +0100

    Limit max arf boost and scale motion breakout for image size.
    
    Added a cap on the maximum boost for an arf based on interval length.
    Fixed bug where by the image size was not accounted for in determining
    two of the motion breakout thresholds.
    
    Overall small gains of 0.2-0.4% psnr but on large image format clips with
    [1;31mslow[m zooms the gain may be as much as 20% or more (e.g. in_to_tree
    at 1080P)
    
    Change-Id: Id0a47391203026742daa9c97afac5705fd8c4dfb

[33mcommit d9dce2f48eed1368a44c368fa87a506bd89ffec5[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 11:29:20 2016 -0700

    Restore vp8_sixtap_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    performance-wise that uses _u8 and over-reads just a touch.
    
    The store, when unaligned, has a version that is ~25% [1;31mslow[mer but safe
    when xoffset = 0 (second pass filter only). When the first pass filter
    (or both) are in play, the new version is almost identical in speed.
    
    Worst case performance (both filters, unaligned stores) is roughly 3-4x
    faster than C.
    
    BUG=webm:817
    BUG=webm:1273
    
    Change-Id: I1e490e94453e0872151fe0dafb05557463f6247d

[33mcommit 2678aefc4820162aecf17348a6cfde4b3650383f[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jul 6 10:57:15 2016 -0700

    vp9: Choose the scheme for modeling rd for 32x32 based on skin color.
    
    For real time CBR mode, use model_rd_for_sb_y for 32x32 if the sb is
    a skin sb to avoid visual regression on the [1;31mslow[mly moving face.
    
    Refer to the cl: https://chromium-review.googlesource.com/#/c/356020/
    
    Change-Id: I42c36666b2b474ce5ee274239d52ae8ab400fd46

[33mcommit 0c60db7def133eb93e9479480f7a019fc6386de0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 12:18:53 2016 -0700

    vp9: Fix to quality regression issue for 1 pass.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1217
    
    Issue introduced in https://chromium-review.googlesource.com/#/c/339162/.
    The factor on avg_frame_qindex[INTER_FRAME] in that CL, used for q-basis to
    set active_best, can cause the QP to decrease too [1;31mslow[mly or get stuck
    in some cases when max-q=63.
    
    Removing that factor fixes the regression in issue#1217.
    
    Change-Id: I97fe28dca3c2bc2d852b1775f39c62164e032d4f

[33mcommit d4440614ae4534f68d94bb88c05f35c86624b38f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Dec 9 12:26:48 2015 -0800

    Non-rd variance partition: Adjustments to reduce dragging artifact.
    
    For non-rd variannce partition, speed >= 5:
    Adjustments to reduce dragging artifcat of background area near
    [1;31mslow[m moving boundary.
    
    -Decrease base threshold under low source noise conditions.
    -Add condition to split 64x64/32x32 based on average variances
    of lower level blocks.
    
    PSNR/SSIM metrics go down ~0.7/0.9% on average on RTC set.
    Visually helps to reduce dragging artifact on some rtc clips.
    
    Change-Id: If1f0a1aef1ddacd67464520ca070e167abf82fac
For keyword fast:
[33mcommit 41b0888a84d12926c66cb7f235ed0e850e0ca99e[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Dec 12 16:47:05 2016 -0800

    postproc: neon down and across macroblock filter
    
    Implement vpx_post_proc_down_and_across_mb_row in NEON.
    Runs about 6-7x [1;31mfast[mer than C.
    
    BUG=webm:1320
    
    Change-Id: Ic5c7d3552a88cfcf999ec5bf2bd46fee460642c2

[33mcommit 9720b58aacaaec301404b4fafa2e46f94c60c5f1[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Oct 12 15:27:47 2016 -0700

    Optimize idct32x32_34_add for NEON
    
    Approximately 3 times [1;31mfast[mer than the 1024 version which was used
    previously.
    
    BUG=webm:1295
    
    Change-Id: Id15fb3d096029ec38ef01c53e5f6eb08254347c9

[33mcommit 9dbb3ad39662ef872f1e902284503892f9bf0bda[m
Author: James Zern <jzern@google.com>
Date:   Wed Oct 19 21:04:12 2016 -0700

    remove idct32x32*_add_neon.asm
    
    the intrinsics are neutral to ~20% [1;31mfast[mer on cros/android
    devices when using gcc-4.9/clang-3.8.1 and gcc-4.9/clang-3.8.x from the
    r13 ndk. neutral results typically came with gcc-4.9 while larger
    positive gains were achieved with clang 3.8.x.
    
    BUG=webm:1303
    
    Change-Id: I4d31f9c017944681b881493525d4573a7a5b1e16

[33mcommit 57c6bf291e41d4e857df621bd3a9d00341a23a02[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 2 17:37:32 2016 -0700

    1 pass vbr: Allow for lookahead alt-ref in real-time mode.
    
    For 1 pass vbr real-time mode:
    Allow for the usage of alt-ref frame when non-zero lag-in-frames is used.
    Use non-filtered alt-ref, and select usage based on [1;31mfast[m scene/content
    analysis/detection within the lag of frames.
    
    Positive gains on ytlive set: overall avgPSNR ~3-4%.
    Several clips are up between 5-14%, a few clips are neutral/small change.
    
    Current speed decrease is about ~5-10%.
    
    Use the flag USE_ALTREF_FOR_ONE_PASS to enable this feature
    (off by default for now).
    
    Change-Id: I802d2bf3d44f9cf01f6d15c76be9c90192314769

[33mcommit 7481edb33f5ea82e29f12e0e872d04ea1a5373cb[m
Author: James Zern <jzern@google.com>
Date:   Tue Sep 27 19:43:03 2016 -0700

    vpx_dsp/get_prob: make clip_prob branchless
    
    + inline the function directly as there was only one consumer
    (get_prob())
    
    this is an attempt to reduce the amount of branches to workaround an amd
    bug. this change is mildly [1;31mfast[mer or neutral across x86-64, arm.
    
    http://support.amd.com/TechDocs/44739_12h_Rev_Gd.pdf
    665 Integer Divide Instruction May Cause Unpredictable Behavior
    
    BUG=chromium:639712
    
    Suggested-by: Pascal Massimino <pascal.massimino@gmail.com>
    Change-Id: Ia91823aded79aab469dd68095d44300e8df04ed2

[33mcommit 43743b1d3efd99642e8669e864b882628eaca176[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 15:21:35 2016 -0700

    Restore vp8_bilinear_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    performance-wise that uses _u8 and over-reads just a touch.
    
    It is still ~5x [1;31mfast[mer than C in the unaligned case and doing both
    filters.
    
    BUG=webm:892
    BUG=webm:1273
    
    Change-Id: Icf7167189391b46202f47233bb585c24c42bcc36

[33mcommit d9dce2f48eed1368a44c368fa87a506bd89ffec5[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 11:29:20 2016 -0700

    Restore vp8_sixtap_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    performance-wise that uses _u8 and over-reads just a touch.
    
    The store, when unaligned, has a version that is ~25% slower but safe
    when xoffset = 0 (second pass filter only). When the first pass filter
    (or both) are in play, the new version is almost identical in speed.
    
    Worst case performance (both filters, unaligned stores) is roughly 3-4x
    [1;31mfast[mer than C.
    
    BUG=webm:817
    BUG=webm:1273
    
    Change-Id: I1e490e94453e0872151fe0dafb05557463f6247d

[33mcommit 5d881770e59498075218e81244b9a07b774bab5a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 10 14:00:52 2016 +0100

    Change default recode rule for good speed 0 and best.
    
    Changes the default recode rule for Speed 0 and best quality
    from ALLOW_RECODE to ALLOW_RECODE_KFARFGF.
    
    Tested on the NF, hdres, midres and lowres test sets, this setting
    when combined with patch I40cb559... now performs "as well" in
    metrics terms (in fact it came out a tiny amount better overall)
    but encode time is 9.6%  [1;31mfast[mer (measured as the average
    from 27 mid rate local encodes on clips in the derf/lowres set.
    
    Change-Id: I8c781c0cdfa3a9929cd9406d15582fce47d6ae3b

[33mcommit 05fe0f20a653c579f93545403815f12bbda5254f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 17 12:03:57 2016 -0800

    vp9: Allow usage of lookahead for real-time, 1 pass vbr.
    
    Allow usage of lookahead for VBR in real-time mode, for 1 pass vbr.
    
    Current usage is for [1;31mfast[m checking of future scene cuts/changes,
    and adjusting rate control (gf interval and active_worst/target size).
    
    Added unittests (datarate) for 1 pass vbr mode, with non-zero lag.
    
    Added an experimental option to limit QP based on lookahead.
    
    Overall positive gain in metrics on ytlive set:
    avgPNSR/SSIM up on average ~1-3%; several clips up by 5, 7%.
    
    Change-Id: I960d57dfc89de121c4824b9a9bf88d2814e74b56

[33mcommit 8cbd4f87011efff05efab2fd99c18abd5baaaa2a[m
Author: Jacky Chen <jackychen@google.com>
Date:   Thu Jun 23 09:40:49 2016 -0700

    vp9: Increase thr_var for 32x32 blocks in var-based partitioning.
    
    For real-time mode, increase variance threshold for 32x32 blocks in
    var-based partitioning for resolution >= 720p, so that it is more
    likely to stay at 32x32 for high resolution which accelerates the
    encoding speed with little/no PSNR drop.
    
    PSNR effect on different speed settings:
    speed 8 rtc: 0.02 overall PSNR drop, 0.285% SSIM drop
    speed 7 rtc: 0.196% overall PSNR increase, 0.066% SSIM increase
    speed 5 rtc_derf: no effect.
    
    Speed up:
    gips_motion_WHD, 1mbps: 2.5% [1;31mfast[mer on speed 7, 2.6% [1;31mfast[mer on speed8
    gips_stat_WHD, 1mbps: 4.6% [1;31mfast[mer on speed 7, 5.6% [1;31mfast[mer on speed8
    
    Change-Id: Ie7c33c4d2dd7d09294917e031357fc5476c3a4bb

[33mcommit 7991241a50f9cf271dcb1063b9fbee0f025eb263[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Jun 24 09:39:27 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality regression.
    
    PSNR effect on different speed settings:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% [1;31mfast[mer on speed 7, 2.56% [1;31mfast[mer on speed8
    gips_stat_WHD, 1mbps: 2.17% [1;31mfast[mer on speed 7, 1.62% [1;31mfast[mer on speed8
    
    BUG=webm:1250
    
    Change-Id: I818babce5b8549b4b1a7c3978df8591bffde7173

[33mcommit 5c29ee726e622baf6f950dfe980df0d4c116c1a8[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 20 17:24:26 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality regression.
    
    PSNR effect on different speed setting:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% [1;31mfast[mer on speed 7, 2.56% [1;31mfast[mer on speed8
    gips_stat_WHD, 1mbps: 2.17% [1;31mfast[mer on speed 7, 1.62% [1;31mfast[mer on speed8
    
    Change-Id: I902f62def225ea01c145d7e5a93497398b8f5edf

[33mcommit c516dd67bc50eecd13dc7fc95b75251cf67c8750[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Jun 10 15:49:44 2016 -0700

    neon hadamard 16x16
    
    Runs about twice as [1;31mfast[m as C
    
    BUG=webm:1027
    
    Change-Id: I6760d99f4e22259439ca35d746194b12a81bfa71

[33mcommit 9b54e812f73e401762fbf3486f8bb83d98dce78a[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed May 11 13:26:19 2016 -0700

    neon hadamard 8x8
    
    Runs about 30% [1;31mfast[mer than the C
    
    BUG=webm:1021
    
    Change-Id: I6809d6d84c3077ab619c53298296950e976bdaba

[33mcommit ff3866dc43ee334eb098618b257b166eb5aaca0e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 4 11:10:02 2016 -0700

    vp9-noise estimation. Decrease frame period for estimating noise.
    
    Makes the noise estimation react little [1;31mfast[mer.
    Little/no change in metrics.
    
    Change only affects 1 pass cbr.
    
    Change-Id: I13f0daa90ecbf9d49eb1cf2e48febd9d92292940

[33mcommit b29612fbbea5d55726003a3a133d7b66bbb7226b[m
Author: Jacky Chen <jackychen@google.com>
Date:   Sun May 1 16:15:29 2016 -0700

    vp9: Refactor vp9_denoiser_NxM_sse2.
    
    Denoiser is ~1.5% [1;31mfast[mer in speed 6~8.
    
    Change-Id: I7b350f3c50cce6773d9c4eded4c0c1b722d0a5fc

[33mcommit bd924fbd210137f3a1f8a785dfc805696872882b[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 16 15:56:35 2016 -0700

    choose_partitioning: Avoid computing segment_id twice.
    
    1% [1;31mfast[mer remoting_perftest at speed -8.
    
    Change-Id: I78d591e14b8f890c1e69cacb6d490dfeb9c37900

[33mcommit 74a679de6f66b6a30d7399ae427ce2b85a967824[m
Author: Julia Robson <juliamrobson@gmail.com>
Date:   Fri Feb 26 14:42:25 2016 -0800

    Port "cost_coeff speed improvements" to vp9.
    
    About a 5% [1;31mfast[mer overall encode (perf cycles) at speed zero!
    
    Change-Id: Iaf013ba75884415cd824e98349f654ffb1c3ef33

[33mcommit 05437805f79780ad3f6afdff1a845512adf27201[m
Author: James Zern <jzern@google.com>
Date:   Fri Feb 5 12:31:48 2016 -0800

    intrapred/d135: flatten border results before storing
    
    the results along the top and left border are then stored with a moving
    window into the vector.
    ~40-67% [1;31mfast[mer on ARM, ~40-77+% on x86 depending on the block size.
    
    Change-Id: Iab369aa2946a3ae4eb7290d512868fe5db92dbc8

[33mcommit eb1d0f8d60baa7e7255fa2350cd2537457f15348[m
Author: James Zern <jzern@google.com>
Date:   Thu Nov 19 23:39:10 2015 -0800

    add vp9_satd_neon
    
    ~60-65% [1;31mfast[mer at the function level across block sizes
    
    Change-Id: Iaf8cbe95731c43fdcbf68256e44284ba51a93893

[33mcommit 5eefd3ebfdf61f76676de4f86e128e3d101311a2[m
Author: Geza Lore <gezalore@gmail.com>
Date:   Wed Oct 28 14:35:04 2015 +0000

    Add AVX vectorized vp9_diamond_search_sad
    
    This function now has an AVX intrinsics version which is about 80%
    [1;31mfast[mer compared to the C implementation. This provides a 2-4% total
    speed-up for encode, depending on encoding parameters. The function
    utilizes 3 properties of the cost function lookup table, constructed
    in 'cal_nmvjointsadcost' and 'cal_nmvsadcosts'.
    For the joint cost:
      - mvjointsadcost[1] == mvjointsadcost[2] == mvjointsadcost[3]
    For the component costs:
      - For all i: mvsadcost[0][i] == mvsadcost[1][i]
            (equal per component cost)
      - For all i: mvsadcost[0][i] == mvsadcost[0][-i]
            (Cost function is even)
    These must hold, otherwise the AVX version of the function cannot be used.
    
    Change-Id: I6c2791d43022822a9e6ab43cd124a773946d0bdc

[33mcommit 40dab58941695ee52b70e0bcb4b93da668e42d6b[m
Author: James Zern <jzern@google.com>
Date:   Wed Nov 4 20:01:34 2015 -0800

    convolve_copy_sse2: replace SSE w/SSE2 code
    
    this should be neutral or slightly [1;31mfast[mer on modern (P4+) architectures
    
    Change-Id: Iec4c080275941eb8c9e05a66a2daf0405d86a69b

[33mcommit f1342a7b070ef61b9fbdf03e899ac2107cfcb6bd[m
Author: Geza Lore <gezalore@gmail.com>
Date:   Wed Oct 28 14:35:04 2015 +0000

    Add AVX vectorized vp9_diamond_search_sad
    
    This function now has an AVX intrinsics version which is about 80%
    [1;31mfast[mer compared to the C implementation. This provides a 2-4% total
    speed-up for encode, depending on encoding parameters. The function
    utilizes 3 properties of the cost function lookup table, constructed
    in 'cal_nmvjointsadcost' and 'cal_nmvsadcosts'.
    For the joint cost:
      - mvjointsadcost[1] == mvjointsadcost[2] == mvjointsadcost[3]
    For the component costs:
      - For all i: mvsadcost[0][i] == mvsadcost[1][i]
            (equal per component cost)
      - For all i: mvsadcost[0][i] == mvsadcost[0][-i]
            (Cost function is even)
    These must hold, otherwise the AVX version of the function cannot be used.
    
    Change-Id: I184055b864c5a2dc37b2d8c5c9012eb801e9daf6
For keyword time:
[33mcommit afc8c4836fa711501f81a6d54cf0ffa49a2fb99f[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jan 4 16:19:42 2017 -0800

    vp9: Compute source sad for every superblock when partition copy is on.
    
    The source sad could be used to copy the partition without going into
    choose_partitioning function to speed up vp9 encoding. Computing source
    sad takes little [1;31mtime[m. Speed test on Android and Linux shows little
    encoding [1;31mtime[m gain (less than 1.4%).
    
    Turned off for now since partition copy is turned off.
    
    Change-Id: I61c9d5b8f22329760cb29a4ee30a7f9c232ce8d3

[33mcommit 3fcd595dfbed102d516080c41778a562dffef53d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Dec 19 14:07:49 2016 -0800

    vp9: Add datarate test for denoiser, for high noise case.
    
    Also breakout the denoiser tests, as the denoiser only
    runs for real-[1;31mtime[m speed >=5.
    
    Change-Id: I921b785860c35e9d1ebfad0833673a98490186c2

[33mcommit fce163cd54ce95651ae568d63d5bd4fc6605f202[m
Author: Gabriel Marin <gmx@chromium.org>
Date:   Wed Dec 14 11:07:50 2016 -0800

    Remove superfluous conditional on 'shortcut'
    
    Remove superfluous test. Produces a small improvement in instruction scheduling.
    Measured a 1% to 1.5% reduction in execution [1;31mtime[m for routine vp9_optimize_b
    with different compilers.
    
    No change in behavior.
    
    TEST=Verified that encoded files match bit for bit, with and without this
    change.
    BUG=b/33678225
    
    Change-Id: I2bf248d4c25fc0256147d7a8766ff9108ae9cba3

[33mcommit 1d5ca84df600ab610d14c0356b038ad4c395a6fd[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Dec 19 10:39:04 2016 -0800

    vp9: Add feature to copy partition from the last frame.
    
    Add feature to copy partition from the last frame.
    The copy is only done under certain conditions that SAD is below threshold.
    Feature is currently disabled, until threshold is tuned.
    Feature will be initially used for Speed 8 (ARM).
    
    Under extreme case of always copying partition for speed 8:
    Encode [1;31mtime[m is reduced by 5.4% on rtc_derf and 7.8% on rtc.
    Overall PSNR reduced by 2.1 on rtc_derf and 0.968 on rtc.
    
    Change-Id: I1bcab515af3088e4d60675758f72613c2d3dc7a5

[33mcommit 0549f5aae91b7d2f1265cea7e2edf34fda8f0433[m
Author: Gabriel Marin <gmx@chromium.org>
Date:   Tue Dec 13 16:22:48 2016 -0800

    Simplify address arithmetic in vp9_optimize_b
    
    Simplify address arithmetic on token_costs to reduce the number of generated
    instructions that are used for address arithmetic inside routine
    vp9_optimize_b. It also helps improve instruction scheduling depending on
    compiler and optimization level.
    
    Measured a 9.3% reduction in retired instructions and 5.3% reduction in
    execution [1;31mtime[m for this routine with GCC v4.8.4 and optimization flags -O3,
    and a reduction of up to 11.6% in execution [1;31mtime[m with other compilers.
    
    No change in behavior.
    
    TEST=Verified that encoded files match bit for bit, with and without this
    change.
    BUG=b/33678225
    
    Change-Id: I6098650fb5cd2aa04e014fe6e68ca20761f3a21f

[33mcommit 318a1ff5ecddd6d60fcf87147f1ff741d39b3dc4[m
Author: Jim Bankoski <jimbankoski@google.com>
Date:   Fri Dec 16 08:50:55 2016 -0800

    vp8 : use threading mutex's for tsan only.
    
    To avoid decode performance hit of 2% when running on hyperthreaded
    cores.
    
    This patch only uses the mutex's when we are running tsan.
    
    This is safe because 32 bit operations like read and store are atomic
    on all the platforms we care about. Tsan warns about race situations,
    but in this case either situation ( read occurs before write or write
    before read) the worst case is that we go around one extra [1;31mtime[m in the
    loop.  So the ordering doesn't really matter.
    
    That said a few other things have been tried :
    
    for instance as per here:
    webrtc/base/atomicops.h#52
    
    In this patch they use:
    __atomic_load_n(i, __ATOMIC_ACQUIRE);
    __atomic_store_n(i, value, __ATOMIC_RELEASE);
    
    This code works on gcc, clang ( replacing protected write and read), and
    avoids tsan errors. Incurring no penalty in performance.  In C11 its
    replaced by straight atomic operands.
    
    However there is no equivalent in the visual studio's we support as
    int32 on all windows platforms is already atomic.  To avoid tsan like
    warnings on windows we'd need to use interlocked exchange and the
    end result doesn't gain us any thing.
    
    Change-Id: I2066e3c7f42641ebb23d53feb1f16f23f85bcf59

[33mcommit a58e0b2a74b76fc218ac6a4ceffe7a8ec77557d7[m
Author: James Zern <jzern@google.com>
Date:   Thu Nov 24 17:51:10 2016 -0800

    build/make/Android.mk: correct rtcd template var refs
    
    the expansion of findstring and rtcd_dep_template_CONFIG_ASM_ABIS needs
    to be deferred until the block is parsed as makefile syntax rather than
    eval [1;31mtime[m where rtcd_dep_template_CONFIG_ASM_ABIS will be unset. this
    ensures vpx_config.asm is properly created.
    
    Change-Id: I7c38c6c082da78397936467482789dd468adc316

[33mcommit d793950ec8fe8dd445c3215a44c5d0842606bfe1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 21 16:37:32 2016 -0800

    vp9: Adjust cyclic refresh parameters for low bitrates.
    
    Increase the motion threshold and qp-delta for segment#2 boost.
    This can increase the frame-drop at low bitrates, but generally
    better spatial quality.
    
    Only affects real-[1;31mtime[m mode with aq-mode=3, at very low bitrates.
    
    Change-Id: I5ccb784667f70d0c27d369806b93b1f93d5605d1

[33mcommit 719f39f44e4a87efc811dcc6a88a6311e36ddb2c[m
Author: Jim Bankoski <jimbankoski@google.com>
Date:   Tue Nov 22 07:31:04 2016 -0800

    vp9-tests : split VpxEncoderThreadTest into two tests.
    
    VpxEncoderThreadTest was taking a very long [1;31mtime[m for some runs and
    timing out a lot.   This is an attempt to split the test into runs
    that can be run nightly ( speeds 2 through 9) and runs that can
    be run weekly ( speeds 0-1 ).
    
    Change-Id: Iee6f61a561006d3a30381dd3b52b9a4dce07a70c

[33mcommit 7317ce8bd4bd1c9d59dce938dbbc36a72eb49c26[m
Author: James Zern <jzern@google.com>
Date:   Fri Nov 18 18:53:22 2016 -0800

    build/make/Android.mk: use -fPIC w/ENABLE_SHARED=1
    
    fixes reloc errors like:
    R_X86_64_PC32
    vpx_dsp/x86/deblock_sse2.o:
    requires dynamic R_X86_64_PC32 reloc against 'vpx_rv' which may overflow
    at run[1;31mtime[m
    
    Change-Id: I218fc0e7c8258197f890d395f335e5a4fe82dccb

[33mcommit f09c687ea913ba246fc98752d0415026a11f5f9c[m
Merge: 011fdec1e 2218a4c29
Author: James Zern <jzern@google.com>
Date:   Tue Nov 15 23:41:18 2016 +0000

    Merge changes I3950c883,I2b679b04
    
    * changes:
      partial_idct_test: use <limits> for int16_min/max
      vpx_[1;31mtime[mr.h,x86.h: define NOMINMAX for windows.h

[33mcommit 360217a233bf67f78a3ab60a6a36e75b20cef816[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Nov 15 10:37:12 2016 -0800

    vp9: Speed 8: More aggresive golden skip for low res.
    
    Add a new, more aggresive short circuit: short_circuit_low_temp_var = 3 to skip
    golden of any mode when variance is lower than threshold for low res.
    This change only affects speed = 8, low resolution.
    
    Metrics for avgPSNR/SSIM on rtc_derf (low resolution) show loss of
    0.27/0.31%.
    On Nexus 6, the encoding [1;31mtime[m is reduced by ~2.3% on average across all
    low-res clips.
    
    Visually little change on rtc_derf clips.
    
    Change-Id: Ia8f7366fc2d49181a96733a380b4dbd7390246ec

[33mcommit 0412193bb9775f6be0f9f6c74b90ff705e584d92[m
Author: James Zern <jzern@google.com>
Date:   Tue Nov 15 12:16:14 2016 -0800

    vpx_[1;31mtime[mr.h,x86.h: define NOMINMAX for windows.h
    
    avoids the definition of min/max macros in headers that may appear in
    c++ unit tests. the codebase uses VPXMIN/MAX for this purpose in any
    case
    
    Change-Id: I2b679b045d64fb34fd8780f704e3caf10a758d82

[33mcommit eff68a3a4df99b8f475a1e3e5eb842bcb928fe00[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Nov 14 10:22:00 2016 -0800

    vp9: Speed 8: Turn off 4x4avg for low-res non-key frames.
    
    Changes only affects speed = 8 for low resolutions.
    
    Metrics for avgPSNR/SSIM on rtc_derf (low resolutions) show loss of
    0.5/0.6%.
    On Nexus 6, the encoding [1;31mtime[m is reduced by ~5.9% on average across all
    low-res clips.
    Visually little/no change on rtc_derf clips.
    
    Change-Id: I68dd50e558d72dcc1af8317d224bfae5e3bd872d

[33mcommit 9720b58aacaaec301404b4fafa2e46f94c60c5f1[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Oct 12 15:27:47 2016 -0700

    Optimize idct32x32_34_add for NEON
    
    Approximately 3 [1;31mtime[ms faster than the 1024 version which was used
    previously.
    
    BUG=webm:1295
    
    Change-Id: Id15fb3d096029ec38ef01c53e5f6eb08254347c9

[33mcommit 5deffa1175420c09b89e998b60bf3e26f8379397[m
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Wed Oct 19 11:07:41 2016 -0700

    vp9_bitstream: Encode tiles in parallel
    
    Re-use the tile worker threads to pack the bitstream in parallel
    on a per-tile basis.  Restricting this to real-[1;31mtime[m only for now
    (further testing is needed to ensure this does not make 2-pass
    worse in any case).
    
    BUG=webm:1309
    
    Change-Id: I8a80da7c5089b837d0df79a5c49d5e3022dfc8ec

[33mcommit a7d116aa67797b7dc14ad735bb75fe499b0b76ff[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 20 17:02:16 2016 -0700

    vp9: Speed=8 real-[1;31mtime[m: Keep the bias_golden feature on.
    
    Small/no change in metrics on RTC set, speed increase by 2-3%.
    
    Change-Id: Iee997bd7433e8e508216e9267b1c31c5a9aa5121

[33mcommit 68833c7f85781e8c667e37bc012ea322d88b2dc1[m
Author: James Zern <jzern@google.com>
Date:   Tue Oct 18 18:11:36 2016 -0700

    third_party: roll libwebm snapshot
    
    git log --no-merges 32d5ac4..9732ae9
    9732ae9 EbmlElementSize: quiet uint64->int32 conv warning
    da04eba SetProjectionPrivate: quiet uint64->size_t conv warning
    6db32d5 mkvparser,Projection::Parse: fix int->bool conv
    3bb0dfa cosmetics: fix a couple lint warnings
    0e179d6 update .clang-format
    fc5f88d Fix temp files being left on system.
    c04a134 Add support for overriding PixelWidth and PixelHeight.
    c0160e0 Add support to explicitly set segment duration.
    02bc809 Add support to estimate file duration.
    c97e3e7 Add support to output sub-sample encryption information.
    26f4344 MakeUID: quiet unused param warning in Android builds
    d6af52a Change check to fix compile error.
    1720020 webm_parser: Add Mesh value for ProjectionType
    78f2c5a webm_parser: Use ./ prefix for includes
    da62f65 webm_parser: Remove webm/ prefix from public includes
    e15e8f2 webm_parser: Update README build instructions
    5023f2b mkvmuxer: Fix Colour::Valid()
    cf16204 mkvmuxer_tests: Actually test cue points in the cue point test.
    93e9fb3 Validate Colour element values.
    8036925 mkvparser_tests: Add Projection element test.
    f52d38c mkvparser_tests: Add Colour element test.
    826436a mkvparser: minor SeekHead::Entry clean up.
    24fb44a mkvmuxer_tests: Add Projection element test.
    1e0a8ea mkvmuxer_tests: Add Colour element test.
    0278616 mkvmuxer: Colour accessors/mutators.
    2346f8f Add mkvparser wrapper functions.
    54d6b6b webm_info: Add Projection element support.
    65fee06 mkvmuxer_sample: Add support for Projection element.
    9a3f2b5 mkvparser_sample: Add support for Projection element.
    41e814a mkvparser: Add Projection element support.
    483a0ff mkvmuxer: Add Projection element support.
    676a713 Add support for the Projection element
    725f362 mkvmuxer: Fix memory leak when Colour is set multiple [1;31mtime[ms.
    fa182de mkvparser_sample: Add output of audio track codec private size.
    8f521f2 mkvparser_tests: Add invalid BlockGroup test.
    39137d7 Remove docs saying binary elements default to 0
    80685d3 Do not skip over unknown elements at the root level
    c147504 Fix legacy Makefile.
    58711e8 mkvparser_sample: Fix version info string.
    837746f mkvparser_tests: Add invalid block test.
    207cd80 Disambiguate sample sources and targets.
    a112d71 mkvparser_tests: Refactor invalid file loading code.
    5dea33e Disambiguate test source and target names.
    125049e parser_tests: Add another truncated chapter string test.
    1de8d4c parser_tests: Add truncated chapter string test.
    ff8c2b6 parser_tests: Move cue validation to test_util.
    4b0690f parser_tests: Add invalid lacing test.
    9828e39 mkvmuxer: Set default doc type version to 4.
    5495a59 webm_parser: Reference more files in CMakeLists.txt.
    0c0ecd0 vpxpes_parser: Add start code emulation prevention support.
    639a4bc webm2pes: Remove debug printfs().
    9a51102 webm2pes: fflush() in the correct conversion function.
    dc7f155 webm2pes: Track total bytes written.
    d518128 webm_parser: Enable usage of werror.
    e1fe762 webm2pes: Add test for mux/demux of large input.
    1b24a79 vpxpes_parser: Read and store PTS when present.
    6cf0a0f vpxpes_parser: Store frame payloads.
    25d2602 webm_parser: Convert style to match the rest of libwebm
    24be76d webm2pes: Replace VpxFrame with VideoFrame.
    b451c3b Add a basic video frame storage class.
    05c90eb libwebm_util: Clarify error text in superframe parser.
    e6415af webm2pes: Make WritePesPacket() a public method.
    8f840dd webm2pes: Move frame read out of PES packet write method.
    448af97 webm2pes: Restore frame fragmentation support.
    f8bb714 cmake: Integrate new parsing API and tests.
    cb8ce0b Add a new incremental parsing API
    900d322 vpxpes_parser/webm2pes: BCMV and PTS fixes.
    4b73545 webm2pes: Add start code emulation prevention.
    82903f3 Add column tiles and frame parallel to webm_info
    5d91edf style_clean_up: Remove unnecessary parentheses
    a95aa4b vp9_level_stats: correct total_uncompressed_bits_ calculation
    f46566f mkvreader: Fix shorten-64-to-32 warning in 32 bit builds.
    76630ca mkvwriter: Fix shorten-64-to-32 warning in 32 bit builds.
    a8ffbd4 webm2pes: Fix format specifier warnings.
    faf89d4 Add MaxLumaSampleRate grace percent to stats.
    d31e6c9 Fix profile 2 in vp9_header_parser.
    bd3ab3a Add flag to estimate last frame's duration to stats.
    c182ed9 Fix lint issue in hdr_util.h
    cc62ecd Add test for Cluster memory leak
    196708a Change MaxLumaSampleRate to be based on frame resolution.
    cbd676b mkvmuxer: Fix leak when a Cluster isn't finalized
    9a235e0 mkvmuxer: Set doctype to matroska when muxing non-WebM codecs.
    47f2843 Add parsing support for new features in CodecPrivate.
    e3c9576 Add VP9 level output to webm_info.
    5cf549f cmake: Log compiler flag at check [1;31mtime[m.
    bbaaf2d Add class to gather VP9 level stats.
    8bb68c2 Add file to parse data from VP9 frames.
    296429a Add support to parse VP9 profile.
    df3412f Add support for setting VP9 profile and level to sample_muxer.
    87832d4 mkvmuxer: Fix Segment::Finalize in kLive mode
    6df3e56 mkvmuxerutil.hpp: Add using directives for overloaded size utils.
    ec47928 mkvmuxerutil: Revert to using mkvmuxertypes.
    a1dc4f2 Fix parsing of VP9 level.
    4e3d037 Add support to output Colour elements to webm_info.
    d3656fd muxer_tests: ignore iwyu re gtest-message.h
    e76dd5e Fix file name in mkvmuxertypes shim.
    1be5889 Add temporary include shims at old file locations.
    039df94 Add TEST_TMPDIR environment variable
    
    Change-Id: I84bc1401b0aad71ad6727b687f1bede9953a7a08

[33mcommit 808a560be6a71dd0d27f29c26f9fefb5e809d373[m
Author: Frank Galligan <fgalligan@google.com>
Date:   Mon Oct 17 12:41:39 2016 -0700

    third_party: Roll libwebm snapshot.
    
    fc5f88d Fix temp files being left on system.
    c04a134 Add support for overriding PixelWidth and PixelHeight.
    c0160e0 Add support to explicitly set segment duration.
    02bc809 Add support to estimate file duration.
    c97e3e7 Add support to output sub-sample encryption information.
    26f4344 MakeUID: quiet unused param warning in Android builds
    d6af52a Change check to fix compile error.
    1720020 webm_parser: Add Mesh value for ProjectionType
    78f2c5a webm_parser: Use ./ prefix for includes
    da62f65 webm_parser: Remove webm/ prefix from public includes
    e15e8f2 webm_parser: Update README build instructions
    5023f2b mkvmuxer: Fix Colour::Valid()
    cf16204 mkvmuxer_tests: Actually test cue points in the cue point test.
    93e9fb3 Validate Colour element values.
    8036925 mkvparser_tests: Add Projection element test.
    f52d38c mkvparser_tests: Add Colour element test.
    826436a mkvparser: minor SeekHead::Entry clean up.
    24fb44a mkvmuxer_tests: Add Projection element test.
    1e0a8ea mkvmuxer_tests: Add Colour element test.
    0278616 mkvmuxer: Colour accessors/mutators.
    2346f8f Add mkvparser wrapper functions.
    54d6b6b webm_info: Add Projection element support.
    65fee06 mkvmuxer_sample: Add support for Projection element.
    9a3f2b5 mkvparser_sample: Add support for Projection element.
    41e814a mkvparser: Add Projection element support.
    483a0ff mkvmuxer: Add Projection element support.
    676a713 Add support for the Projection element
    725f362 mkvmuxer: Fix memory leak when Colour is set multiple [1;31mtime[ms.
    fa182de mkvparser_sample: Add output of audio track codec private size.
    8f521f2 mkvparser_tests: Add invalid BlockGroup test.
    39137d7 Remove docs saying binary elements default to 0
    c147504 Fix legacy Makefile.
    80685d3 Do not skip over unknown elements at the root level
    58711e8 mkvparser_sample: Fix version info string.
    837746f mkvparser_tests: Add invalid block test.
    207cd80 Disambiguate sample sources and targets.
    a112d71 mkvparser_tests: Refactor invalid file loading code.
    5dea33e Disambiguate test source and target names.
    125049e parser_tests: Add another truncated chapter string test.
    1de8d4c parser_tests: Add truncated chapter string test.
    ff8c2b6 parser_tests: Move cue validation to test_util.
    4b0690f parser_tests: Add invalid lacing test.
    9828e39 mkvmuxer: Set default doc type version to 4.
    5495a59 webm_parser: Reference more files in CMakeLists.txt.
    0c0ecd0 vpxpes_parser: Add start code emulation prevention support.
    639a4bc webm2pes: Remove debug printfs().
    9a51102 webm2pes: fflush() in the correct conversion function.
    dc7f155 webm2pes: Track total bytes written.
    d518128 webm_parser: Enable usage of werror.
    e1fe762 webm2pes: Add test for mux/demux of large input.
    1b24a79 vpxpes_parser: Read and store PTS when present.
    6cf0a0f vpxpes_parser: Store frame payloads.
    25d2602 webm_parser: Convert style to match the rest of libwebm
    24be76d webm2pes: Replace VpxFrame with VideoFrame.
    b451c3b Add a basic video frame storage class.
    05c90eb libwebm_util: Clarify error text in superframe parser.
    e6415af webm2pes: Make WritePesPacket() a public method.
    8f840dd webm2pes: Move frame read out of PES packet write method.
    448af97 webm2pes: Restore frame fragmentation support.
    f8bb714 cmake: Integrate new parsing API and tests.
    cb8ce0b Add a new incremental parsing API
    900d322 vpxpes_parser/webm2pes: BCMV and PTS fixes.
    4b73545 webm2pes: Add start code emulation prevention.
    82903f3 Add column tiles and frame parallel to webm_info
    5d91edf style_clean_up: Remove unnecessary parentheses
    a95aa4b vp9_level_stats: correct total_uncompressed_bits_ calculation
    f46566f mkvreader: Fix shorten-64-to-32 warning in 32 bit builds.
    76630ca mkvwriter: Fix shorten-64-to-32 warning in 32 bit builds.
    a8ffbd4 webm2pes: Fix format specifier warnings.
    faf89d4 Add MaxLumaSampleRate grace percent to stats.
    d31e6c9 Fix profile 2 in vp9_header_parser.
    bd3ab3a Add flag to estimate last frame's duration to stats.
    c182ed9 Fix lint issue in hdr_util.h
    cc62ecd Add test for Cluster memory leak
    196708a Change MaxLumaSampleRate to be based on frame resolution.
    cbd676b mkvmuxer: Fix leak when a Cluster isn't finalized
    47f2843 Add parsing support for new features in CodecPrivate.
    9a235e0 mkvmuxer: Set doctype to matroska when muxing non-WebM codecs.
    e3c9576 Add VP9 level output to webm_info.
    bbaaf2d Add class to gather VP9 level stats.
    5cf549f cmake: Log compiler flag at check [1;31mtime[m.
    8bb68c2 Add file to parse data from VP9 frames.
    df3412f Add support for setting VP9 profile and level to sample_muxer.
    296429a Add support to parse VP9 profile.
    87832d4 mkvmuxer: Fix Segment::Finalize in kLive mode
    6df3e56 mkvmuxerutil.hpp: Add using directives for overloaded size utils.
    ec47928 mkvmuxerutil: Revert to using mkvmuxertypes.
    4e3d037 Add support to output Colour elements to webm_info.
    a1dc4f2 Fix parsing of VP9 level.
    039df94 Add TEST_TMPDIR environment variable
    d3656fd muxer_tests: ignore iwyu re gtest-message.h
    e76dd5e Fix file name in mkvmuxertypes shim.
    1be5889 Add temporary include shims at old file locations.
    
    Change-Id: I6a1026814560be80d604a5ecb9b66406a1186dd9

[33mcommit 9e8efa5b189a5abf78b1bcbc8076893728129d1e[m
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Fri Oct 7 10:24:50 2016 -0700

    vp9_bitstream: Encode tiles in parallel
    
    Re-use the tile worker threads to pack the bitstream in parallel
    on a per-tile basis.  Restricting this to real-[1;31mtime[m only for now
    (further testing is needed to ensure this does not make 2-pass
    worse in any case).
    
    BUG=webm:1309
    
    Change-Id: Ia2c982da56697756e12f02643f589189b3271d98

[33mcommit 4c3d539baa456a37ebd03f11865ea597f4724355[m
Merge: 6c309c1f5 acd21e053
Author: Jerome Jiang <jianj@google.com>
Date:   Sat Oct 15 06:01:40 2016 +0000

    Merge "VP8: Add real[1;31mtime[m speed to datarate_test.cc"

[33mcommit acd21e053a17cee5b2ed2a590c8c40523e2c1741[m
Author: Jerome Jiang <jianj@jianj0.mtv.corp.google.com>
Date:   Thu Oct 13 15:27:47 2016 -0700

    VP8: Add real[1;31mtime[m speed to datarate_test.cc
    
    Change-Id: Ia56f0e8dfba20143be3e69666d9184dd3ca5b563

[33mcommit 57c6bf291e41d4e857df621bd3a9d00341a23a02[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 2 17:37:32 2016 -0700

    1 pass vbr: Allow for lookahead alt-ref in real-[1;31mtime[m mode.
    
    For 1 pass vbr real-[1;31mtime[m mode:
    Allow for the usage of alt-ref frame when non-zero lag-in-frames is used.
    Use non-filtered alt-ref, and select usage based on fast scene/content
    analysis/detection within the lag of frames.
    
    Positive gains on ytlive set: overall avgPSNR ~3-4%.
    Several clips are up between 5-14%, a few clips are neutral/small change.
    
    Current speed decrease is about ~5-10%.
    
    Use the flag USE_ALTREF_FOR_ONE_PASS to enable this feature
    (off by default for now).
    
    Change-Id: I802d2bf3d44f9cf01f6d15c76be9c90192314769

[33mcommit cdbd89197ec878c9c9fed8876c5c3f436ae8994d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 10 11:42:47 2016 -0700

    vp9: 1 pass vbr: some adjustments to gf interval.
    
    Put limit on gf interval based on lag, and allow
    for the adjustment on next gf group also on key frame.
    
    Small/neutral change on ytlive metrics.
    
    Change only affects 1 pass vbr real-[1;31mtime[m mode.
    
    Change-Id: I339c8f4398848698b6e10fe9482c52ca661b94a5

[33mcommit 5e908aff341e9c400f898b3d9c117e0eb63ef6fe[m
Merge: b6277a47c d017548be
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 30 21:42:04 2016 +0000

    Merge "vp9 real-[1;31mtime[m mode: Change loopfilter speed feature at speed 8."

[33mcommit e765435293a4aa88fe28fa67b17c581f385475a6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Sep 29 11:15:26 2016 -0700

    vp9: On change_config() only call update_frame_size if needed.
    
    change_config() may be called often in real-[1;31mtime[m application,
    to update bitrate/framerate or qp-max/min.
    No need to do update_frame_size() unless frame size has changed.
    
    Change-Id: I23a51deade1e03adc91c468f9ffde3235298770c

[33mcommit d017548be614dfdb79335fc33b729a36dd254f5c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Sep 26 16:52:26 2016 -0700

    vp9 real-[1;31mtime[m mode: Change loopfilter speed feature at speed 8.
    
    For real-[1;31mtime[m mode at speed 8: turn off MINIMAL_LF at speed 8,
    for non-screen content mode.
    
    Visually better, avgPSNR/SSIM on rtc set go up by ~4-5%.
    Speed decrease of about ~3%.
    
    Change-Id: I8eb69330f02e0ceece1507d43cfc8a049a1d8291

[33mcommit 421f376568b2b07a43a93fb055f7e2c48d111a0a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 9 09:03:22 2016 -0700

    vp8: Set the skin model to mode 1.
    
    This change was reverted before due to a hangouts encode-[1;31mtime[m
    regression investigation. But since then this change has been
    cleared of causing any noticeable regression.
    
    This mode reduces some false detection, and uses the
    same model as in vp9.
    
    Change-Id: I9c82a748c5f601d0aca9f61ee218abfbd58c62bd

[33mcommit 1139f0dbc22d228bc1e295dc76819da6333daa99[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Aug 31 22:38:27 2016 -0700

    Define VP8_TEMPORAL_ALT_REF to !CONFIG_REALTIME_ONLY
    
    Previously VP8_TEMPORAL_ALT_REF was only defined for non-real[1;31mtime[m-only
    builds. However, its value was checked with #if, not #ifdef.
    
    Fixes -Wundef warnings.
    
    BUG=webm:1069
    
    Change-Id: If78d8731298f3f0d3662ffa25f973e7adaf67152

[33mcommit 292d221fed21a84b3a9902bcaecda00cc08e6029[m
Author: Yury Gitman <yuryg@google.com>
Date:   Mon Jul 18 15:44:40 2016 -0700

    Create interface for the ALT_REF_AQ class
    
    Current commit is just an API template  for the rest of the code, and
    I will add inner logic later.
    
    Altref  frames  generate a  lot  of  bitrate  and  at the  same  [1;31mtime[m
    other  frames  refer to  them  a  lot, so  it  makes  sense to  apply
    special  compensation-based adaptive  quantization scheme  for altref
    frames. E.g.,  for blocks  that are  good predictors  for the  future
    apply rate-control  chosen quantizer  while for bad  predictors apply
    worse one.
    
    Change-Id: Iba3f8ec349470673b7249f6a125f6859336a47c8

[33mcommit 28c6207bcdf63a35355d302a6e850bacaf204d75[m
Author: Urvang Joshi <urvang@google.com>
Date:   Tue Jul 26 12:02:37 2016 -0700

    vpx_realloc correction.
    
    vpx_realloc was allocating 1 byte more than needed every [1;31mtime[m.
    Fixed this, and took this opportunity to do a small refactoring.
    
    Change-Id: I38fcb62b698894acbbab43466c1decd12f906789
    (cherry picked from aom: 2a876b4 aom_realloc correction.)

[33mcommit 0f42d1fa8569532b5bed322bd1662e3d06161544[m
Author: James Zern <jzern@google.com>
Date:   Tue Aug 23 15:51:32 2016 -0700

    vp8: fix decoder crash with invalid leading keyframes
    
    decoding the same invalid keyframe twice would result in a crash as the
    second [1;31mtime[m through the decoder would be assumed to have been
    initialized as there was no resolution change. in this case the
    resolution was itself invalid (0x6), but vp8_peek_si() was only failing
    in the case of 0x0.
    invalid-vp80-00-comprehensive-018.ivf.2kf_0x6.ivf tests this case by
    duplicating the first keyframe and additionally adds a valid one to
    ensure decoding can resume without error.
    
    BUG=b/30593765
    
    Change-Id: If0859035908b7870d67a7f3f646b5a080252eb6d

[33mcommit 5d881770e59498075218e81244b9a07b774bab5a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 10 14:00:52 2016 +0100

    Change default recode rule for good speed 0 and best.
    
    Changes the default recode rule for Speed 0 and best quality
    from ALLOW_RECODE to ALLOW_RECODE_KFARFGF.
    
    Tested on the NF, hdres, midres and lowres test sets, this setting
    when combined with patch I40cb559... now performs "as well" in
    metrics terms (in fact it came out a tiny amount better overall)
    but encode [1;31mtime[m is 9.6%  faster (measured as the average
    from 27 mid rate local encodes on clips in the derf/lowres set.
    
    Change-Id: I8c781c0cdfa3a9929cd9406d15582fce47d6ae3b

[33mcommit 343b6b09a121f5106281ac3fe9052b2f2c670491[m
Author: Aleksey Vasenev <margtu-fivt@ya.ru>
Date:   Fri Jul 29 11:28:50 2016 +0300

    Align thread entry point stack
    
    _beginthreadex does not align the stack on 16-byte boundary as expected
    by gcc.
    
    On x86 targets, the force_align_arg_pointer attribute may be applied to
    individual function definitions, generating an alternate prologue and
    epilogue that realigns the run-[1;31mtime[m stack if necessary. This supports
    mixing legacy codes that run with a 4-byte aligned stack with modern
    codes that keep a 16-byte stack for SSE compatibility.
    https://gcc.gnu.org/onlinedocs/gcc/x86-Function-Attributes.html
    
    Change-Id: Ie4e4ab32948c238fa87054d5664189972ca6708e
    Signed-off-by: Aleksey Vasenev <margtu-fivt@ya.ru>

[33mcommit e90d4f0a03e7e167d10e0f2c3eaf9d63bf85e6cc[m
Merge: 451211cb0 05fe0f20a
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jul 19 17:17:16 2016 +0000

    Merge "vp9: Allow usage of lookahead for real-[1;31mtime[m, 1 pass vbr."

[33mcommit 05fe0f20a653c579f93545403815f12bbda5254f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 17 12:03:57 2016 -0800

    vp9: Allow usage of lookahead for real-[1;31mtime[m, 1 pass vbr.
    
    Allow usage of lookahead for VBR in real-[1;31mtime[m mode, for 1 pass vbr.
    
    Current usage is for fast checking of future scene cuts/changes,
    and adjusting rate control (gf interval and active_worst/target size).
    
    Added unittests (datarate) for 1 pass vbr mode, with non-zero lag.
    
    Added an experimental option to limit QP based on lookahead.
    
    Overall positive gain in metrics on ytlive set:
    avgPNSR/SSIM up on average ~1-3%; several clips up by 5, 7%.
    
    Change-Id: I960d57dfc89de121c4824b9a9bf88d2814e74b56

[33mcommit 110a2ddc9b6c0c53ceb037a42bf24b4a4ff4597d[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jul 11 17:06:10 2016 -0700

    vp9 svc: Reuse scaled_temp in two stage downscaling.
    
    This change eliminates redundant computation in the two stage
    downscaling, which saves ~1% encoding [1;31mtime[m in 3-layer svc encoding.
    
    Change-Id: Ib4b218811b68499a740af1f9b7b5a5445e28d671

[33mcommit dc008cc17d78165f5fa053de391238373c4bb989[m
Merge: a75965fa9 884c2ddc4
Author: Yaowu Xu <yaowu@google.com>
Date:   Thu Jul 7 22:32:48 2016 +0000

    Merge "Enable HBD support in real [1;31mtime[m encoding path"

[33mcommit 884c2ddc48677dc9384f51dcebfaa298266aac9e[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Wed Jul 6 13:58:34 2016 -0700

    Enable HBD support in real [1;31mtime[m encoding path
    
    BUG=webm:1223
    
    Change-Id: If83a613784e3b2a33c9c93f9ad0ba39dd4d23056

[33mcommit 2678aefc4820162aecf17348a6cfde4b3650383f[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jul 6 10:57:15 2016 -0700

    vp9: Choose the scheme for modeling rd for 32x32 based on skin color.
    
    For real [1;31mtime[m CBR mode, use model_rd_for_sb_y for 32x32 if the sb is
    a skin sb to avoid visual regression on the slowly moving face.
    
    Refer to the cl: https://chromium-review.googlesource.com/#/c/356020/
    
    Change-Id: I42c36666b2b474ce5ee274239d52ae8ab400fd46

[33mcommit 5fc2d6cb9fb1262880e237bfd6873f7c3c4dd8c9[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jun 29 16:22:12 2016 -0700

    vp9: Change the scheme for modeling rd for 32x32 on newmv_last mode.
    
    For real [1;31mtime[m CBR mode, use model_rd_for_sb_y for 32x32 if the mode is
    newmv last, which is less aggressive in skipping transform and
    quantization, to avoid quality regression in some conditions.
    
    Change-Id: Ifa30be587f2a8a4a7f182a172de6ce277c0f8556

[33mcommit 8cbd4f87011efff05efab2fd99c18abd5baaaa2a[m
Author: Jacky Chen <jackychen@google.com>
Date:   Thu Jun 23 09:40:49 2016 -0700

    vp9: Increase thr_var for 32x32 blocks in var-based partitioning.
    
    For real-[1;31mtime[m mode, increase variance threshold for 32x32 blocks in
    var-based partitioning for resolution >= 720p, so that it is more
    likely to stay at 32x32 for high resolution which accelerates the
    encoding speed with little/no PSNR drop.
    
    PSNR effect on different speed settings:
    speed 8 rtc: 0.02 overall PSNR drop, 0.285% SSIM drop
    speed 7 rtc: 0.196% overall PSNR increase, 0.066% SSIM increase
    speed 5 rtc_derf: no effect.
    
    Speed up:
    gips_motion_WHD, 1mbps: 2.5% faster on speed 7, 2.6% faster on speed8
    gips_stat_WHD, 1mbps: 4.6% faster on speed 7, 5.6% faster on speed8
    
    Change-Id: Ie7c33c4d2dd7d09294917e031357fc5476c3a4bb

[33mcommit 7991241a50f9cf271dcb1063b9fbee0f025eb263[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Jun 24 09:39:27 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-[1;31mtime[m CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding [1;31mtime[m with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality regression.
    
    PSNR effect on different speed settings:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on speed 7, 2.56% faster on speed8
    gips_stat_WHD, 1mbps: 2.17% faster on speed 7, 1.62% faster on speed8
    
    BUG=webm:1250
    
    Change-Id: I818babce5b8549b4b1a7c3978df8591bffde7173

[33mcommit 5e9c5dfdf04adef6b42abeff2ff2a902600dfbaf[m
Merge: 6e4b73125 6c6eb16bb
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Jun 23 17:55:34 2016 +0000

    Merge changes Ifddff89d,I827dfe59,Idca7ef45
    
    * changes:
      vp8 machine setup: mark unused variable
      vp8 real[1;31mtime[m encoder: mark unused variable
      vp8 error concealment: remove unused variables

[33mcommit 3b2c3cb366e893130a5553524292ee94b9f42847[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Jun 22 17:37:44 2016 -0700

    vp8 real[1;31mtime[m encoder: mark unused variable
    
    'duration' is not used in real[1;31mtime[m-only mode:
    
    Cleans up -Wextra warning:
    unused parameter 'duration' [-Wunused-parameter]
    
    Change-Id: I827dfe59ebcdc72c5a93fdf7e5aca063433914b1

[33mcommit 5c29ee726e622baf6f950dfe980df0d4c116c1a8[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 20 17:24:26 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-[1;31mtime[m CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding [1;31mtime[m with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality regression.
    
    PSNR effect on different speed setting:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on speed 7, 2.56% faster on speed8
    gips_stat_WHD, 1mbps: 2.17% faster on speed 7, 1.62% faster on speed8
    
    Change-Id: I902f62def225ea01c145d7e5a93497398b8f5edf

[33mcommit 4d9e876b44b1169a195f3da1e502d829dec1d279[m
Author: James Zern <jzern@google.com>
Date:   Sat Jun 18 11:03:26 2016 -0700

    real[1;31mtime[m_test: remove decoded frame count check
    
    decoding is done if the decoder is available, with errors handled
    accordingly. the encoded frame count should be sufficient for this test.
    
    + remove HandleDecodeResult() as it's redundant given the base
      implementation
    
    BUG=webm:1233
    
    Change-Id: I513c1c3475c58a746f4df627491bdc392fe21416

[33mcommit 0146fa95efb9a0020da53ddcb26755796561673b[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Jun 10 14:59:26 2016 -0700

    Parse codec options in order of occurrence.
    
    Each [1;31mtime[m a codec is enabled or disabled with the umbrella
    --enable-vpN flag, set the encoder and decoder configurations as well.
    This was done as a post-processing step but doing that lost the order of
    the arguments.
    
    BUG=webm:1205
    
    Change-Id: Ic629bfdd06acc04bc5a7227309f36bba54dad8b1

[33mcommit 8e070558b062e1978b6b8a3430b3a155d58a6444[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 15 14:20:32 2016 -0700

    vp9: Adjustments to nonrd-pickmode for vbr
    
    For VBR: (1) allow newmv mode for golden ref to
    select interpolation filter (as in last ref case), and
    (2) don't use the more aggressive tx-skip testing logic for large blocks.
    
    Only affects 1 pass real-[1;31mtime[m vbr mode (speed >= 5).
    
    PSNR/SSIM metrics on ytlive set are all positive, ~0.5-2% gain.
    
    Change-Id: I0ffbb0a9755563a5acd6230c58236e4f19a47266

[33mcommit 7abc05c9af7468ea9ad9df31505181eafaec9341[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jun 15 10:14:14 2016 -0700

    vp9: Add bias to last frame in choose_partitioning.
    
    This change is only for real-[1;31mtime[m mode if short_circuit_low_temp_var
    is on. Add bias to last frame in choosing ref frame for partitioning,
    when y_sad and y_sad_g are close. It speeds up real-[1;31mtime[m encoding by
    0.5% on some clips with less than 0.1% overall PSNR drop on rtc test set.
    
    Change-Id: I2a2110fe36455f3d8f0fc404aef2228f512e8df8

[33mcommit bacc67f4a808e488d24fda2e93cfd5fbe0b806a4[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri May 20 13:45:46 2016 -0700

    vp9: Skip some modes when variance is low for big blocks, for 1 pass real-[1;31mtime[m.
    
    Skip intra-mode and some inter-modes (newmv, nearmv, nearestmv) for
    golden frame if the variance got from choose_partitioning is very low.
    Only for 1 pass real-[1;31mtime[m CBR mode and bsize >= 32x32, it has ~2.5%
    speed up with less than 0.1% PSNR drop for rtc test set. Don't see
    visual regression.
    
    Change-Id: I70efbc95a1007231ae36f02c5b2fbf6cd35077ad

[33mcommit b26232eb1b2e7253687770b9b5b76a2d465e70bb[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue May 31 10:38:01 2016 -0700

    Update filter_selectively_vert_row2()
    
    Reduce operations and jumps. perf shows CPU [1;31mtime[m reduced from 1.9% to
    1.6% when decoding fdJc1_IBKJA.248.webm on Xeon E5.
    Will apply the changes to vp10 after code review.
    
    Change-Id: I9351509922855d8896ddef1ed093b3ca12619a61

[33mcommit af7fb17c09158e9039bfe6d72c591347b7c0ceb9[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue May 17 12:42:55 2016 -0700

    Upgrade fwht4x4_mmx() to fwht4x4_sse2() for vp9 and vp10.
    
    Function level timing test shows about 27% [1;31mtime[m saving on
    a Xeon E5-2680 v2 desktop.
    
    Rename vp9_dct_sse2.c to vp9_dct_intrin_sse2.c for vp9 and
    rename dct_sse2.c to dct_intrin_sse2.c for vp10 to avoid
    duplicate basenames.
    
    Actually vp9_fwht4x4_mmx/sse2() and vp10_fwht4x4_mmx/sse2()
    are identical. TODO: They should be unified later if there is
    no intention to keep a duplicate.
    
    Change-Id: I3e537b7bbd9ba417c606cd7c68c4dbbfa583f77d

[33mcommit 98726d538bd046b19b21233d2d51f8eaf7a5efef[m
Merge: 656f9c412 9a56a5ea1
Author: James Zern <jzern@google.com>
Date:   Fri May 13 17:56:41 2016 +0000

    Merge "convolve_test: Fix high bit depth IOC run[1;31mtime[m errors."

[33mcommit 9a56a5ea1804f8abc9859ef8ff9d7e50326dcb8d[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Fri May 13 09:42:58 2016 -0700

    convolve_test: Fix high bit depth IOC run[1;31mtime[m errors.
    
    Add a cast.
    
    BUG=webm:1225
    
    Change-Id: I34ea18ee816569485c1f1046a81fd2a0ce527ac8

[33mcommit d4fccb8f4197485d72ddb1784bc3d8eb8968508d[m
Merge: 0741629c8 6042d6885
Author: Tom Finegan <tomfinegan@google.com>
Date:   Mon May 9 21:24:11 2016 +0000

    Merge "convolve_test: Fix IOC run[1;31mtime[m errors."

[33mcommit 6042d68851dde2a2924cdc7dc09bd6e312f977b5[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Fri May 6 09:43:37 2016 -0700

    convolve_test: Fix IOC run[1;31mtime[m errors.
    
    Add a cast.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1216
    
    Change-Id: I40627de387bc9cfba37860e7a0a4f2d4524f3431

[33mcommit 24db57f0e14e5e6cc9022a33f4e23b84e027a1a5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 13 11:18:16 2016 -0700

    vp9: Adjustment to scene-cut detection.
    
    Change recursive weight for average_source_sad and
    put some constraint on spacing between detected scene-cuts.
    
    Change only affects 1 pass real-[1;31mtime[m mode.
    
    Change-Id: I1917e748d845e244812d11aec2a9d755372ec182

[33mcommit 4317ba58a9f2f4753e49dd210c72cfe04b246896[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Mar 24 13:12:51 2016 -0700

    third_party: Roll libwebm snapshot.
    
    32d5ac4 mkvmuxerutil: Fix MSVC build.
    6397597 vpxpes_parser: Fix MSVC build.
    784b6fe mkvmuxer: Revert changes to IMkvWriter types.
    030518e webm_info: Fix implicit conversion warnings.
    46d5dee sample_muxer: Fix implicit conversion warnings.
    22b0845 webmts: Fix implicit conversion warnings.
    ef464c2 mkvparser: Fix implicit conversion warnings.
    0e9767e Merge "rename mingw64_toolchain.cmake to mingw-w64_toolchain"
    f47cbd5 cmake: Move cxx flag testing/setup into its own file.
    87443a6 rename mingw64_toolchain.cmake to mingw-w64_toolchain
    2aee04f msvc_run[1;31mtime[m.cmake: Check for MSVC, not WIN32.
    eb50da8 Option to write [1;31mtime[mcode using fixed # of bytes
    c1991fe mkvmuxer: Add missing Segment member initializer.
    10aed96 Android.mk: Make libwebm easier to build downstream.
    5c50e31 Add support for parsing VPx track codec private data.
    4cbdbf1 Fix Android build.
    bb48a3f mkvmuxerutil: remove stray 'int32'
    a1cba34 Support cross compile for windows via mingw64.
    596f5e0 Add webm_info.
    ccf75f6 msvc/muxer_tests: Silence integer conversion warnings.
    2ff2954 msvc/webm2pes: Silence integer and floating point conversion warnings.
    1f24323 msvc/hdr_util: Silence double to float conversion warnings.
    0744563 msvc/vpxpes_parser: Silence integer conversion warning.
    59614b8 msvc/libwebm_util: Fix floating point to int conversion warning.
    6481c24 webvtt: Fix include in vttreader.
    e6ed0f4 msvc/vpxpes2ts: Fix MSVC integer conversion warning.
    da64396 cmake/msvc: Disable C4996 project wide.
    6ef8264 Merge "mkvparser::BlockEntry: inline EOS()"
    3fa6aec mkvparser::BlockEntry: inline EOS()
    26306f9 mkvmuxer: Remove unused Cluster ctor overload.
    0d76597 mkvmuxer: Fix build with GCC 5.3.
    0ba80bc mkvparser/sample: Minor clean up.
    2e0e906 iosbuild.sh: Fix build.
    918440a Makefile.unix: allow CXXFLAGS to be easily overridden
    4ff5785 cmake: Add C++11 move ctor and member initializer tests.
    402ef4d cmake: remove argc and argv from C++11 test main fns.
    cbe5c40 Restore original namespaces for mkvmuxer and mkvparser.
    504e0f2 Mass file extension update.
    79cb980 Android.mk: Update source file locations.
    01db4c2 webmids: Move to common/ sub dir.
    235ce59 mkvparser: Explicitly reference internal sources in includes.
    f578419 mkvmuxer: Move sources to mkvmuxer/ sub dir.
    5f1065e webvtt: Organize and clean up webvtt support.
    7abe8ac cmake: Add missing dumpvtt target.
    f2f87e2 Makefile.unix: Tidy things up.
    12f6dc3 Use <stdint.h> types instead of custom typedefs.
    0407360 mkvmuxer: Write last block in each Cluster with Duration
    008aa63 mkvparser: move to mkvparser sub dir.
    e64bf75 Namespace reorg: Make everything a child of libwebm.
    5fdb386 cmake: move c++11 checks into build/cxx11_tests.cmake.
    3672488 Copy reference block values in Frame::CopyFrom()
    91ca780 reapply clang-format
    8d34215 Merge "Clean up AddAudioTrack in muxer_tests"
    90861d4 Clean up AddAudioTrack in muxer_tests
    a9dfb3d Un-ignore webm files in testdata
    c5b76d8 Extract PES parser from WebM2Pes tests.
    16524e8 cmake: Add include-what-you-use integration.
    7015af5 iwyu/vpxpes2ts: Update includes.
    c1d6a70 iwyu/webm2pes: Update includes.
    110e797 iwyu/libwebm_util: Update includes.
    44e31fb iwyu/webm2pes_tests: Update includes.
    d919f96 iwyu/mkvwriter: Update includes.
    75790e1 iwyu/mkvparser: Update includes.
    5f673ca iwyu/webm2pes_main: Update includes.
    747244a iwyu/vpxpes2ts_main: Update includes.
    94c985f iwyu/mkvmuxerutil: Update includes.
    c365630 iwyu/mkvmuxer: Update includes.
    b15b8ef iwyu/file_util: Update includes.
    3dfba95 iwyu/hdr_util: Update includes.
    baba8b1 iwyu/vttdemux: Update includes.
    3212ec1 iwyu/webvttparser: Update includes.
    b6d8d92 iwyu/sample_muxer_metadata: Update includes.
    a9a1a01 iwyu/sample_muxer: Update includes.
    e020ffd iwyu/sample: Update includes.
    18834bc iwyu/parser_tests: Update includes.
    9c00ae3 iwyu/muxer_tests: Update includes.
    41a17eb iwyu/test_util: Update includes
    b6174be muxer_tests: Fix windows brokenness.
    e092515 file_util: Remove tmpnam() usage in MSVC.
    b9dc4ac test_util: Don't pass NULL to std::string() in GetTestDataDir().
    1f74651 webmts: Move PES/TS sources to m2ts sub directory.
    1b895e9 Rename libwebm_utils to libwebm_util.
    2fabcd3 sample_muxer: Replace std::tmpnam() with libwebm::GetTempFileName().
    e6a0033 Add file_util.
    87f9bea Move hdr_util to common.
    1f64aaf cmake: Expand C++11 tests.
    6dc81c1 muxer_tests: Die immediately when unable to prep for file writing.
    521ce4d webm2pes: Fix type limit warning.
    64c4163 vpxpes2ts: Fix sign-compare and type-limits warnings.
    741ba68 muxer_tests: Replace std::tmpnam() with GetTempFileName().
    6159e83 Merge "test_util: add missing include for close()"
    ff81c74 parser_tests: Fix sign compare warnings.
    163f57d test_util: add missing include for close()
    7c89eb5 Merge "test_util: Remove tmpnam() usage on non-MSVC targets."
    c4b8686 Merge "webm2pes_tests: Fix sign compare warnings."
    9c9f546 Merge "muxer_tests: Fix sign compare warnings."
    0fbefef webm2pes: Silence sign compare warnings.
    599e4e8 cmake: Silence clang/gcc deprecation warnings.
    82f376f test_util: Remove tmpnam() usage on non-MSVC targets.
    4d31d6b webm2pes_tests: Fix sign compare warnings.
    07ed7e0 muxer_tests: Fix sign compare warnings.
    ae2fbfe parser_tests: Silence sign compare warning.
    f488528 libwebm_utils: Silence sign compare warning.
    777247b Add C++11 detection to cmake file.
    9b89187 Add missing include to libwebm_utils.h.
    421874a Merge "mkvmuxer: Fix GCC build."
    dd6ab35 Set the mastering metadata on the muxers colour
    8b61ef5 mkvmuxer: Fix GCC build.
    353b050 Add hdr_util.
    c92e080 mkvmuxer: Use kValueNotPresent in Colour/MasteringMetadata.
    2d09128 Colour element: TransferFunction renamed to TransferCharacteristics.
    f2fc28e Colour element: Matrix renamed to MatrixCoefficients.
    e0b1135 cmake: Minor CMakeLists.txt refactor.
    1e1872b Revert change from auto_ptr to unique_ptr in sample code.
    d7fc382 Track updates to the proposed Matroska Colour spec.
    99981ee sample(mkvparser): Output Colour element when present.
    375e416 mkvmuxer: Fix Colour element support.
    eaeca34 mkvmuxer: Fix bits per channel in the colour element.
    1dab7f3 mkvparser: Avoid crash when encountering a Colour element.
    a1517aa sample_muxer: copy the Colour element.
    ea9dd94 Merge "webm2pes: Fix tests."
    8635c5b Merge "mkvparser: Make omitted values detectable in the Colour element."
    ae4ae7e mkvparser: Make omitted values detectable in the Colour element.
    8c8cba6 webm2pes: Fix tests.
    a281a22 mkvmuxer: Add support for the Colour element and its children.
    41a9147 sample_muxer: clang-format include order fix.
    939a64d Signal E_BUFFER_NOT_FULL in EBMLHeader::Parse
    fb1406e mkvparser: Add support for the Colour element and its children.
    22bfdf7 Merge "parser_tests: Add validation of cues."
    b873000 parser_tests: Add validation of cues.
    799891e Update .gitignore to include some new binaries
    e051c60 Merge "Update muxer test gold files"
    b81d5f0 Update muxer test gold files
    48b1e9a mkvparser: clang format run
    93c4690 webm2pes: Add PES packet parsing tests.
    65ca38f Merge "test_util: Fix gcc build."
    520ca6c Merge "parser_tests: Fix gcc build."
    37a38ca test_util: Fix gcc build.
    ee0ebba parser_tests: Fix gcc build.
    c32f970 Replace auto_ptr usage with unique_ptr.
    e569ab0 webm2pes/ts: Fix gcc build.
    2e55d6c Merge "add bitcode embedding support for ios"
    0cfb2dc add bitcode embedding support for ios
    bb8cefd webm2ts: Converts WebM VPx video to a MPEG TS.
    453bf44 webm2pes: Begin addition of tests.
    9299bbb libwebm: Googletest integration.
    3bec1ba Merge changes I7bcb5b3e,I8ce733be,I98a928ff,I71910f24
    5c83bbe Fix ParseElementHeader to support 0 payload elements
    be35869 libwebm_utils: Add FileDeleter.
    d6db1e1 webm2pes: Add a WebM parser init method.
    aa3593e webm2pes: Rename Convert to ConvertToFile().
    e8fca12 webm2pes: Fix super frame splitting.
    3cb96b6 webm2pes: Move main() and helper functions into their own files.
    021432b webm2pes: Fix the linux build.
    82ac5fc Remove RELEASE.TXT.
    852e173 webm2pes: Split super frames and packetize large frames.
    faf85c2 webm2pes: Refactor header/optional header writing.
    7c19266 Add Webm2Pes.
    01fdee4 mkvmuxer: Disallow AddTrack() after Tracks element is output.
    1ad314e mkvparser: EBMLHeader::Parse: remove dead init
    
    Change-Id: I542bd5e34586f29d4d15771ec4bd728defe0769e

[33mcommit 31b975713cf69879bcfd66bc653791112a8c3644[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Mar 24 13:12:51 2016 -0700

    third_party: Roll libwebm snapshot.
    
    eb50da8 Option to write [1;31mtime[mcode using fixed # of bytes
    c1991fe mkvmuxer: Add missing Segment member initializer.
    10aed96 Android.mk: Make libwebm easier to build downstream.
    5c50e31 Add support for parsing VPx track codec private data.
    4cbdbf1 Fix Android build.
    bb48a3f mkvmuxerutil: remove stray 'int32'
    a1cba34 Support cross compile for windows via mingw64.
    596f5e0 Add webm_info.
    ccf75f6 msvc/muxer_tests: Silence integer conversion warnings.
    2ff2954 msvc/webm2pes: Silence integer and floating point conversion warnings.
    1f24323 msvc/hdr_util: Silence double to float conversion warnings.
    0744563 msvc/vpxpes_parser: Silence integer conversion warning.
    59614b8 msvc/libwebm_util: Fix floating point to int conversion warning.
    6481c24 webvtt: Fix include in vttreader.
    e6ed0f4 msvc/vpxpes2ts: Fix MSVC integer conversion warning.
    da64396 cmake/msvc: Disable C4996 project wide.
    6ef8264 Merge "mkvparser::BlockEntry: inline EOS()"
    3fa6aec mkvparser::BlockEntry: inline EOS()
    26306f9 mkvmuxer: Remove unused Cluster ctor overload.
    0d76597 mkvmuxer: Fix build with GCC 5.3.
    0ba80bc mkvparser/sample: Minor clean up.
    2e0e906 iosbuild.sh: Fix build.
    918440a Makefile.unix: allow CXXFLAGS to be easily overridden
    4ff5785 cmake: Add C++11 move ctor and member initializer tests.
    402ef4d cmake: remove argc and argv from C++11 test main fns.
    cbe5c40 Restore original namespaces for mkvmuxer and mkvparser.
    504e0f2 Mass file extension update.
    79cb980 Android.mk: Update source file locations.
    01db4c2 webmids: Move to common/ sub dir.
    235ce59 mkvparser: Explicitly reference internal sources in includes.
    f578419 mkvmuxer: Move sources to mkvmuxer/ sub dir.
    5f1065e webvtt: Organize and clean up webvtt support.
    7abe8ac cmake: Add missing dumpvtt target.
    f2f87e2 Makefile.unix: Tidy things up.
    12f6dc3 Use <stdint.h> types instead of custom typedefs.
    0407360 mkvmuxer: Write last block in each Cluster with Duration
    008aa63 mkvparser: move to mkvparser sub dir.
    e64bf75 Namespace reorg: Make everything a child of libwebm.
    5fdb386 cmake: move c++11 checks into build/cxx11_tests.cmake.
    3672488 Copy reference block values in Frame::CopyFrom()
    91ca780 reapply clang-format
    8d34215 Merge "Clean up AddAudioTrack in muxer_tests"
    90861d4 Clean up AddAudioTrack in muxer_tests
    a9dfb3d Un-ignore webm files in testdata
    c5b76d8 Extract PES parser from WebM2Pes tests.
    16524e8 cmake: Add include-what-you-use integration.
    7015af5 iwyu/vpxpes2ts: Update includes.
    c1d6a70 iwyu/webm2pes: Update includes.
    110e797 iwyu/libwebm_util: Update includes.
    44e31fb iwyu/webm2pes_tests: Update includes.
    d919f96 iwyu/mkvwriter: Update includes.
    75790e1 iwyu/mkvparser: Update includes.
    5f673ca iwyu/webm2pes_main: Update includes.
    747244a iwyu/vpxpes2ts_main: Update includes.
    94c985f iwyu/mkvmuxerutil: Update includes.
    c365630 iwyu/mkvmuxer: Update includes.
    b15b8ef iwyu/file_util: Update includes.
    3dfba95 iwyu/hdr_util: Update includes.
    baba8b1 iwyu/vttdemux: Update includes.
    3212ec1 iwyu/webvttparser: Update includes.
    b6d8d92 iwyu/sample_muxer_metadata: Update includes.
    a9a1a01 iwyu/sample_muxer: Update includes.
    e020ffd iwyu/sample: Update includes.
    18834bc iwyu/parser_tests: Update includes.
    9c00ae3 iwyu/muxer_tests: Update includes.
    41a17eb iwyu/test_util: Update includes
    b6174be muxer_tests: Fix windows brokenness.
    e092515 file_util: Remove tmpnam() usage in MSVC.
    b9dc4ac test_util: Don't pass NULL to std::string() in GetTestDataDir().
    1f74651 webmts: Move PES/TS sources to m2ts sub directory.
    1b895e9 Rename libwebm_utils to libwebm_util.
    2fabcd3 sample_muxer: Replace std::tmpnam() with libwebm::GetTempFileName().
    e6a0033 Add file_util.
    87f9bea Move hdr_util to common.
    1f64aaf cmake: Expand C++11 tests.
    6dc81c1 muxer_tests: Die immediately when unable to prep for file writing.
    521ce4d webm2pes: Fix type limit warning.
    64c4163 vpxpes2ts: Fix sign-compare and type-limits warnings.
    741ba68 muxer_tests: Replace std::tmpnam() with GetTempFileName().
    6159e83 Merge "test_util: add missing include for close()"
    ff81c74 parser_tests: Fix sign compare warnings.
    163f57d test_util: add missing include for close()
    7c89eb5 Merge "test_util: Remove tmpnam() usage on non-MSVC targets."
    c4b8686 Merge "webm2pes_tests: Fix sign compare warnings."
    9c9f546 Merge "muxer_tests: Fix sign compare warnings."
    0fbefef webm2pes: Silence sign compare warnings.
    599e4e8 cmake: Silence clang/gcc deprecation warnings.
    82f376f test_util: Remove tmpnam() usage on non-MSVC targets.
    4d31d6b webm2pes_tests: Fix sign compare warnings.
    07ed7e0 muxer_tests: Fix sign compare warnings.
    ae2fbfe parser_tests: Silence sign compare warning.
    f488528 libwebm_utils: Silence sign compare warning.
    777247b Add C++11 detection to cmake file.
    9b89187 Add missing include to libwebm_utils.h.
    421874a Merge "mkvmuxer: Fix GCC build."
    dd6ab35 Set the mastering metadata on the muxers colour
    8b61ef5 mkvmuxer: Fix GCC build.
    353b050 Add hdr_util.
    c92e080 mkvmuxer: Use kValueNotPresent in Colour/MasteringMetadata.
    2d09128 Colour element: TransferFunction renamed to TransferCharacteristics.
    f2fc28e Colour element: Matrix renamed to MatrixCoefficients.
    e0b1135 cmake: Minor CMakeLists.txt refactor.
    1e1872b Revert change from auto_ptr to unique_ptr in sample code.
    d7fc382 Track updates to the proposed Matroska Colour spec.
    99981ee sample(mkvparser): Output Colour element when present.
    375e416 mkvmuxer: Fix Colour element support.
    eaeca34 mkvmuxer: Fix bits per channel in the colour element.
    1dab7f3 mkvparser: Avoid crash when encountering a Colour element.
    a1517aa sample_muxer: copy the Colour element.
    ea9dd94 Merge "webm2pes: Fix tests."
    8635c5b Merge "mkvparser: Make omitted values detectable in the Colour element."
    ae4ae7e mkvparser: Make omitted values detectable in the Colour element.
    8c8cba6 webm2pes: Fix tests.
    a281a22 mkvmuxer: Add support for the Colour element and its children.
    41a9147 sample_muxer: clang-format include order fix.
    939a64d Signal E_BUFFER_NOT_FULL in EBMLHeader::Parse
    fb1406e mkvparser: Add support for the Colour element and its children.
    22bfdf7 Merge "parser_tests: Add validation of cues."
    b873000 parser_tests: Add validation of cues.
    799891e Update .gitignore to include some new binaries
    e051c60 Merge "Update muxer test gold files"
    b81d5f0 Update muxer test gold files
    48b1e9a mkvparser: clang format run
    93c4690 webm2pes: Add PES packet parsing tests.
    65ca38f Merge "test_util: Fix gcc build."
    520ca6c Merge "parser_tests: Fix gcc build."
    37a38ca test_util: Fix gcc build.
    ee0ebba parser_tests: Fix gcc build.
    c32f970 Replace auto_ptr usage with unique_ptr.
    e569ab0 webm2pes/ts: Fix gcc build.
    2e55d6c Merge "add bitcode embedding support for ios"
    0cfb2dc add bitcode embedding support for ios
    bb8cefd webm2ts: Converts WebM VPx video to a MPEG TS.
    453bf44 webm2pes: Begin addition of tests.
    9299bbb libwebm: Googletest integration.
    3bec1ba Merge changes I7bcb5b3e,I8ce733be,I98a928ff,I71910f24
    5c83bbe Fix ParseElementHeader to support 0 payload elements
    be35869 libwebm_utils: Add FileDeleter.
    d6db1e1 webm2pes: Add a WebM parser init method.
    aa3593e webm2pes: Rename Convert to ConvertToFile().
    e8fca12 webm2pes: Fix super frame splitting.
    3cb96b6 webm2pes: Move main() and helper functions into their own files.
    021432b webm2pes: Fix the linux build.
    82ac5fc Remove RELEASE.TXT.
    852e173 webm2pes: Split super frames and packetize large frames.
    faf85c2 webm2pes: Refactor header/optional header writing.
    7c19266 Add Webm2Pes.
    01fdee4 mkvmuxer: Disallow AddTrack() after Tracks element is output.
    1ad314e mkvparser: EBMLHeader::Parse: remove dead init
    
    Change-Id: I13637ceacab953786064b7f8f6ecf1495b7475d0

[33mcommit 6877acb67e74a837ee5f2539737e3f63002b0ea9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Apr 4 13:00:15 2016 -0700

    vp8-denoiser: Avoid doing the mcomp if we don't denoise.
    
    Avoid doing the mcomp in denoiser if we don't denoise the
    block (because of motion/SSE/skin threshold, etc).
    This can reduce encoding [1;31mtime[m (with denoiser enabled) by ~1.5-2%.
    
    Change-Id: Ia699b68dfd37b89cdf3a82b8aa40e8c8f98a3d4f

[33mcommit f94124cf3127795544cd8e1772ebf3d31a80dda0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Mar 25 11:34:56 2016 -0700

    vp9: 1 pass vbr mode at speed 5: switch to use mv.search to NSTEP.
    
    Change only affects 1 pass, vbr, speed = 5 (real-[1;31mtime[m mode).
    
    Some improvement for high motion content.
    AvgPSNR/SSIM metrics for ytlive set all up, on average ~2%,
    some clips (high motion ones) up 4/5%.
    
    Encoder speed down: on mynintendo_x1.1280_720.y4m: 47fps -> 44fps.
    
    Change-Id: I9e3eaa6392dcb6b5b44ee6f43004f97ba859bc11

[33mcommit 76108b4269451406ef6e45dbd28eed9f7142bb5d[m
Author: Johnny Klonaris <google@jawknee.com>
Date:   Sat Mar 12 21:06:31 2016 -0800

    Allows sub-second frame rates in vp9
    
    This is the identical change submitted for vp8 here:
    https://chromium-review.googlesource.com/#/c/274107/
    
    Tested this change on Mac OSX (10.10) and Linux
    (Linux Mint 17 / Ubuntu 14.04) and in both cases:
    
    - downloaded and compiled latest source for libvpx and ffmpeg
    - confirmed ffmpeg would build sub-second frame rate webm files
      via the previous patch
    - confirmed ffmpeg would *not* build fps < 1 for vp9
    - made this change, recompiled libvpn and ffmpeg
    - confirmed ffmpeg would now create the same webm with
      fps < 1
    - confirmed the resulting file would play and was vp9 (e.g.
      would not play in Firefox (Linux version complained it was
      VP9 but mostly could play it) or older vlc, etc., but does
      play just fine in Google Chrome and a newer version of vlc.
    
    Sorry I didn't catch this last [1;31mtime[m - but this seems a solid
    change and it's handy to be able to create frame rates
    less than one second.
    
    -jk
    
    Change-Id: I38fa32148de8c4c359f228cf08b9a4b83b5a52fb

[33mcommit caa8de547f5860bfbb83626811d631dbf6d2b5d1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 24 16:16:44 2016 -0800

    vp9 non-rd pickmode. Some adjustments for vbr mode.
    
    Some adjustments to inter-mode selection for vbr mode.
    Condition some of the bias to low/zero motion on cbr mode, and
    don't use int_pro_motion_estimation for golden ref
    (treat it same as last ref).
    
    Change only affect 1 pass vbr mode, speed >=5 (non-rd pickmode).
    
    Encoding [1;31mtime[m increase within ~5%.
    Avg PSNR/SSIM on RTC set increase by ~2%, all clips up,
    ranging from 0.5 to 4%.
    
    Change-Id: I0048d0104a8816773d91a2b1484d601169d9bad7

[33mcommit b9cb955cf07e834a126613a31c3b90f6e07dc39a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Mar 7 16:58:06 2016 -0800

    vp9-resize tests: Update to real-[1;31mtime[m resize unittests.
    
    Add check for mismatch in unittests.
    
    Change-Id: Ia5d5b5f6af4b7eb653302b81fdd9a53df4aba033

[33mcommit ee5d3d37606430a152f2cd254f7d657b98390954[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Mon Feb 29 15:16:42 2016 -0800

    Don't copy tx_size to all 8x8 MIs in the prediction block.
    
    The double pointer in xd->mi handles this for us.
    
    Cuts encode_suberblock()'s self [1;31mtime[m in half at rt speed 8.
    
    Change-Id: I820dae24efdbf9a140bbeae82e4e2a5850317766

[33mcommit 729c99764236d737c5f723ed47e3a1e6bede1235[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 29 11:12:02 2016 -0800

    vp8: multi-res-encoder: Fix [1;31mtime[mr around encoder in sample encoder.
    
    Change-Id: I0131ab4767e2eb72838ab6e58dd77a85fbf508e0

[33mcommit 958f372509a7678d787cffeed40e7886a116e27a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 18 12:16:01 2016 -0800

    vp9: 1 pass vbr real-[1;31mtime[m mode: Adjust gf refresh for scene change.
    
    Use the existing scene/content change detection to better
    update/adjust golden frame refresh.
    
    Change only affects 1 pass real-[1;31mtime[m vbr mode, speed >=5.
    
    Change-Id: I2963a5bb7ca4a19f8cf8511b0a925e502f60e014

[33mcommit 89cc68252846478fa7f2d570d96ff93776cefac6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Feb 16 08:40:23 2016 -0800

    vp9-real-[1;31mtime[m mode: Fix condition for allowing reference masking.
    
    Add frame-level condition for reference masking: under external or
    internal dynamic resize, allow for reference masking if none of
    the references have been scaled.
    Peviously, reference masking was turned off for the stream if dynamic
    resize feature was enabled or an external resize event occurred.
    
    reference_masking gives speed up with little/no loss in compression.
    For speed 7 on rtc set: encoding [1;31mtime[m decreases by about 5-7%,
    avgPSNR/SSIM goes down ~0.2%.
    
    Change-Id: Ie4444577451ef954414d8fb4b2c99d65cadf1746

[33mcommit d642294b1c57a5adacb1038ff45766c38bae8a6d[m
Author: Jingning Han <jingning@google.com>
Date:   Thu Feb 11 12:36:49 2016 -0800

    Fix tsan error in VP9 sub8x8 intra mode search
    
    This commit fixes issue 1141. The issue was triggered in multi-tile
    encoding. The change properly saves and restores the block context
    information in the real-[1;31mtime[m mode selection process. It removes
    several redundant memcpy operations in sub8x8 intra block mode search.
    
    Change-Id: I35c9ad197f4bd500ec39b5fc833f052f19eee010

[33mcommit acc592b35abdb0e2ad60ba11bbdbcd0f08e8b4e8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 10 15:18:26 2016 -0800

    vp9 resize_test: Enable resize_allowed in real-[1;31mtime[m ExternalResize test.
    
    For dynamic resizing (whether the new codec size is determined internally
    or externally set by user), we should for now keep rc.resize_allowed enabled.
    This prevent the use of referene_masking for real-[1;31mtime[m mode
    (in set_rt_speed_feature()).
    
    Change-Id: Ibb7c3ff35be88afdf1a3c6db6693521766f177a3

[33mcommit ae98a61e2295be1f5ceb95554edcd9ab29fda6d8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Feb 5 15:43:42 2016 -0800

    vp9-dynamic resize: On a resize trigger frame refresh alt_ref.
    
    For 1 pass real-[1;31mtime[m mode. No change in behavior as only last
    and golden are used as references in 1 pass real-[1;31mtime[m mode.
    
    Change-Id: Ie4655014eee1a8b271542f29d74b2c6f7fed54c9

[33mcommit b39a599cefed4cc2459ef20ba5c198955bb66516[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 22 11:45:31 2016 -0800

    vp9 non-rd mode: Modification for detected skin areas.
    
    If a superblock contains alot of "skin" then force split
    of 64x64 partition, and make some adjustments in mode selection.
    
    This helps to reduce artifacts on moving face/skin areas at low bitrates.
    
    Little/no change in metrics: avgPSNR/SSIM down by ~0.12%.
    Small encoding [1;31mtime[m increase < 1%.
    
    Change-Id: Ic57f52148c3716f391419fab0530d916e4c1d186

[33mcommit 27c13712c9c5d665ee84d8753255a23257c43600[m
Merge: be916257b 7da6324ca
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Sat Jan 23 02:04:37 2016 +0000

    Merge "Short circuit flat blocks when coding screen content at real[1;31mtime[m speed."

[33mcommit 7da6324cab32d8080f497c912107f94b661a866e[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Jan 20 14:28:09 2016 -0800

    Short circuit flat blocks when coding screen content at real[1;31mtime[m speed.
    
    In inter mode search skip all modes except NEARESTMV and DC_PRED.
    
    10% less encode latency for large frames using the chromium remoting_perftests.
    
    +0.313% BDRATE on the screencast set at speed -6.
    
    Change-Id: Ib97a39dd8bcdeab545509e0e02d78ce7033f8c63

[33mcommit 3277d481ebe1cfa8f14006245554cf5745f9a257[m
Merge: 5ac25c910 9134e9f8b
Author: James Zern <jzern@google.com>
Date:   Wed Jan 20 02:27:29 2016 +0000

    Merge "Use input framerate as [1;31mtime[mbase if none was explicitly specified."

[33mcommit 9134e9f8bbb4e27684c2e48936c91b67797c79f9[m
Author: Ronald S. Bultje <rsbultje@gmail.com>
Date:   Mon Jan 18 14:03:45 2016 -0500

    Use input framerate as [1;31mtime[mbase if none was explicitly specified.
    
    After patch:
    $ vpxenc tennis_sif.y4m --end-usage=q -q 20 -o x.ivf --ivf --codec=vp9 --limit=30
    $ ffmpeg -i x.ivf -i tennis_sif.y4m -lavfi psnr -f null -
    [..]
    [Parsed_psnr_0 @ 0x7f8913c21e40] PSNR y:43.270594 u:46.300362 v:47.011172 average:44.097994 min:43.460704 max:52.509271
    
    Before patch:
    $ vpxenc tennis_sif.y4m --end-usage=q -q 20 -o x.ivf --ivf --codec=vp9 --limit=30
    $ ffmpeg -i x.ivf -i tennis_sif.y4m -lavfi psnr -f null -
    [..]
    [Parsed_psnr_0 @ 0x7fbdaac22780] PSNR y:27.427366 u:41.505376 v:36.853477 average:28.990890 min:22.219454 max:52.509271
    $ ffmpeg -i x.ivf -f rawvideo x.yuv
    $ ffmpeg -f rawvideo -vcodec rawvideo -video_size 352x240 -framerate 29.97 -i x.yuv -i tennis_sif.y4m -lavfi psnr -f null -
    [..]
    [Parsed_psnr_0 @ 0x7fadf9e013a0] PSNR y:43.270594 u:46.300362 v:47.011172 average:44.097994 min:43.460704 max:52.509271
    
    Change-Id: Ifac2d6c2ff8379b2d318fe5cfe4be0bf1bc9f27f

[33mcommit ff0107f60dbddec82d7d7feacd1c9a3ff9ab4a51[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Jan 6 18:27:37 2016 -0800

    Amend and improve VP8 multithreading implementation
    
    There are flaws in current implementation of VP8 multithreading encoder
    and decoder as reported in the following issue:
    https://code.google.com/p/chromium/issues/detail?id=158922
    
    Although the data race warnings are harmless, and wouldn't cause real
    problems while encoding and decoding videos, it is better to fix the
    warnings so that VP8 code could pass the TSan test.
    
    To synchronize the thread-shared data access and maintain the speed
    (i.e. decoding speed), use multiple mutexes based on mb_rows to reduce
    the number of synchronizations needed, make the reads and writes of
    the shared data protected, and reduce the number of mb_col writes by
    nsync [1;31mtime[ms.
    
    The decoder speed tests showed < 3% speed loss while using 2 ~ 4
    threads.
    
    Change-Id: Ie296defffcd86a693188b668270d811964227882

[33mcommit b12e353424cdb71b0b5807931508ca167bbdc71b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Dec 3 13:08:37 2015 -0800

    vp9-noise estimate: Move level setting to a function.
    
    This is so we may update level at any [1;31mtime[m (e.g., to be used
    for setting thresholds in variance-based partition).
    
    Change-Id: I32caad2271b8e03017a531f9ea456a6dbb9d49c7

[33mcommit 8ba98516fd8df6ee9275c4e68ec0663ad5b6848c[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Nov 17 16:20:20 2015 +0000

    Changes to best quality settings.
    
    Small changes to the best quality default speed trade off.
    Some speedup settings are worth while even for best quality as they
    have only a very small impact on quality but a significant impact on
    encode [1;31mtime[m.
    
    These changes give as much as a further 50-60% increase in encode
    speed for my test animations clip with minimal impact on quality.
    
    For this sequence these changes improve the best quality encode  speed
    to about the same level as good quality speed 0 in Q3 2015 whilst
    retaining the large quality gain of over 1 db
    
    For many natural videos though the quality difference from good 0
    to best is much smaller.
    
    Change-Id: I28b3840009d77e129817a78a7c41e29cb03e1132

[33mcommit 988fd77c1fc9e9b47e1da00c3aeae932c3d06899[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Nov 13 08:09:17 2015 -0800

    Reduce sampling [1;31mtime[m for noise estimate.
    
    Change-Id: I46abd85e2187b8f4c2846416a23fab26d9b9f67d

[33mcommit bd6bf2596957b722ee5d7d789e0fedb9bf86435e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 9 13:36:56 2015 -0800

    Add bias to zero/small motion for noisy source.
    
    Change is only for real-[1;31mtime[m mode, speed >= 5, and non-screen content mode.
    Add bias to zero/low motion for big blocks, if noise estimation
    is enabled and noise level is above threshold.
    
    Change-Id: I3a0a4608ede6aa535bda6eca528d20f8aba738e7

[33mcommit 394d6c122a5f1d66da21c97edd97bf5092a20d72[m
Merge: f93711440 55c884379
Author: Jacky Chen <jackychen@google.com>
Date:   Tue Nov 10 03:05:30 2015 +0000

    Merge "VP9: add unit test for real[1;31mtime[m external resize."

[33mcommit 55c88437916b716ab885369246cac6427dbdc18c[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Nov 9 14:58:14 2015 -0800

    VP9: add unit test for real[1;31mtime[m external resize.
    
    Change-Id: I9bfa80de73847d9be88b6ce9865d7bb5fafaaa57

[33mcommit cdec99b2437e9e369d3ca6597d9abfb1ac608a1f[m
Merge: 498fd551f 3c9a424e6
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 9 21:11:51 2015 +0000

    Merge "VP9 dynamic resize: increase waiting [1;31mtime[m after key frame."

[33mcommit 3c9a424e6e9c70afc2f7586093d440ec3fba7dfe[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Nov 9 11:47:26 2015 -0800

    VP9 dynamic resize: increase waiting [1;31mtime[m after key frame.
    
    For 1 pass CBR mode: increase waiting [1;31mtime[m after key frame
    before we start sampling rate control behavior for determining
    resize. This change need to disable one internal resize(DownUp)
    temporally since it requires a longer clip to do so.
    
    Change-Id: If21beda1be23f169ee541ab4dd642f718347887a

[33mcommit 718654848aa0fee41c37b50e4ff611302a7e4e06[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 9 10:03:27 2015 -0800

    Use same bias (against non-zero mv for big blocks) for speed 5.
    
    Use same setting for speed 5 (as it is for speed > 5).
    Change is only for real-[1;31mtime[m (non-rd) mode.
    
    Change-Id: I830250eac654328373cb318baa89d4f0e63942e1

[33mcommit 30466f26b48d7d0d7eb29a290053a2ccd4dc71ea[m
Author: James Zern <jzern@google.com>
Date:   Fri Nov 6 13:03:13 2015 -0800

    Revert "Add AVX vectorized vp9_diamond_search_sad"
    
    This reverts commit f1342a7b070ef61b9fbdf03e899ac2107cfcb6bd.
    
    This breaks 32-bit builds:
     run[1;31mtime[m error: load of misaligned address 0xf72fdd48 for type 'const
    __m128i' (vector of 2 'long long' values), which requires 16 byte
    alignment
    
    + _mm_set1_epi64x is incompatible with some versions of visual studio
    
    Change-Id: I6f6fc3c11403344cef78d1c432cdc9147e5c1673

[33mcommit 04a99cb36bb6a3d24de0d99ac621e0313ea759a6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 30 11:51:06 2015 -0700

    Bias against non-zero mv for large blocks.
    
    Change is only for real-[1;31mtime[m mode, speed > 5, and non-screen content mode.
    Bias is based on block size and motion vector level (motion above some threshold).
    
    Helps to improves stability in background from lightning changes.
    PSNR/SSIM metrics on RTC set almost no change/neutral (within +/- 0.1).
    
    Change-Id: I7eac13c1ae10be4ab1f40acc7f9f1df5653ece9d
For keyword perf:
[33mcommit f1909d26f8bfcbf2726a4977151715c4c628b83b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 6 15:28:21 2017 -0800

    vp9: 1 pass cbr mode: increase threshold for gf_cbr_boost_pct usage.
    
    Increase the boost threshold below which GOLDEN update will use same
    rate correction factor as INTER_NORMAL.
    
    Improves [1;31mperf[mormance when gf_cbr_boost_pct is set (between 0 and 100)
    in CBR mode.
    
    Change-Id: I9f54cc18664786a100b13a416b7137ae03bd0cab

[33mcommit e6b9609fc0c66cd1f1b4db2f70bb58ee800a0bf7[m
Merge: 3c47a0dc6 fce163cd5
Author: Gabriel Marin <gmx@chromium.org>
Date:   Thu Dec 29 06:03:43 2016 +0000

    Merge "Remove su[1;31mperf[mluous conditional on 'shortcut'"

[33mcommit fce163cd54ce95651ae568d63d5bd4fc6605f202[m
Author: Gabriel Marin <gmx@chromium.org>
Date:   Wed Dec 14 11:07:50 2016 -0800

    Remove su[1;31mperf[mluous conditional on 'shortcut'
    
    Remove su[1;31mperf[mluous test. Produces a small improvement in instruction scheduling.
    Measured a 1% to 1.5% reduction in execution time for routine vp9_optimize_b
    with different compilers.
    
    No change in behavior.
    
    TEST=Verified that encoded files match bit for bit, with and without this
    change.
    BUG=b/33678225
    
    Change-Id: I2bf248d4c25fc0256147d7a8766ff9108ae9cba3

[33mcommit 318a1ff5ecddd6d60fcf87147f1ff741d39b3dc4[m
Author: Jim Bankoski <jimbankoski@google.com>
Date:   Fri Dec 16 08:50:55 2016 -0800

    vp8 : use threading mutex's for tsan only.
    
    To avoid decode [1;31mperf[mormance hit of 2% when running on hyperthreaded
    cores.
    
    This patch only uses the mutex's when we are running tsan.
    
    This is safe because 32 bit operations like read and store are atomic
    on all the platforms we care about. Tsan warns about race situations,
    but in this case either situation ( read occurs before write or write
    before read) the worst case is that we go around one extra time in the
    loop.  So the ordering doesn't really matter.
    
    That said a few other things have been tried :
    
    for instance as per here:
    webrtc/base/atomicops.h#52
    
    In this patch they use:
    __atomic_load_n(i, __ATOMIC_ACQUIRE);
    __atomic_store_n(i, value, __ATOMIC_RELEASE);
    
    This code works on gcc, clang ( replacing protected write and read), and
    avoids tsan errors. Incurring no penalty in [1;31mperf[mormance.  In C11 its
    replaced by straight atomic operands.
    
    However there is no equivalent in the visual studio's we support as
    int32 on all windows platforms is already atomic.  To avoid tsan like
    warnings on windows we'd need to use interlocked exchange and the
    end result doesn't gain us any thing.
    
    Change-Id: I2066e3c7f42641ebb23d53feb1f16f23f85bcf59

[33mcommit 394020383d3da02e602050f9d5e8e671a6e3cb8b[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Dec 7 10:00:36 2016 -0800

    Remove an unused first pass statistic
    
    One of the first pass stats "new_mv_count" is no longer used in VP9,
    and is removed. This also makes it easy to implement a multi-threaded
    first pass. This change doesn't affect the coding [1;31mperf[mormance, which
    has been verified by borg tests.
    
    Change-Id: I4c7c7bf9465fda838eb230814ef0c631c068c903

[33mcommit 44f8ee7258c5e9bac9a4e25d265aa34eb47e08fb[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Nov 11 16:10:01 2016 -0800

    Enable asymptotic closed-loop encoding decision
    
    This commit enables asymptotic closed-loop encoding decision for
    the key frame and alternate reference frame. It follows the regular
    rate control scheme, but leaves out additional iteration on the
    updated frame level probability model. It is enabled for speed 0.
    
    The compression [1;31mperf[mormance is improved:
    
    lowres 0.2%
    midres 0.35%
    hdres  0.4%
    
    Change-Id: I905ffa057c9a1ef2e90ef87c9723a6cf7dbe67cb

[33mcommit 68833c7f85781e8c667e37bc012ea322d88b2dc1[m
Author: James Zern <jzern@google.com>
Date:   Tue Oct 18 18:11:36 2016 -0700

    third_party: roll libwebm snapshot
    
    git log --no-merges 32d5ac4..9732ae9
    9732ae9 EbmlElementSize: quiet uint64->int32 conv warning
    da04eba SetProjectionPrivate: quiet uint64->size_t conv warning
    6db32d5 mkvparser,Projection::Parse: fix int->bool conv
    3bb0dfa cosmetics: fix a couple lint warnings
    0e179d6 update .clang-format
    fc5f88d Fix temp files being left on system.
    c04a134 Add support for overriding PixelWidth and PixelHeight.
    c0160e0 Add support to explicitly set segment duration.
    02bc809 Add support to estimate file duration.
    c97e3e7 Add support to output sub-sample encryption information.
    26f4344 MakeUID: quiet unused param warning in Android builds
    d6af52a Change check to fix compile error.
    1720020 webm_parser: Add Mesh value for ProjectionType
    78f2c5a webm_parser: Use ./ prefix for includes
    da62f65 webm_parser: Remove webm/ prefix from public includes
    e15e8f2 webm_parser: Update README build instructions
    5023f2b mkvmuxer: Fix Colour::Valid()
    cf16204 mkvmuxer_tests: Actually test cue points in the cue point test.
    93e9fb3 Validate Colour element values.
    8036925 mkvparser_tests: Add Projection element test.
    f52d38c mkvparser_tests: Add Colour element test.
    826436a mkvparser: minor SeekHead::Entry clean up.
    24fb44a mkvmuxer_tests: Add Projection element test.
    1e0a8ea mkvmuxer_tests: Add Colour element test.
    0278616 mkvmuxer: Colour accessors/mutators.
    2346f8f Add mkvparser wrapper functions.
    54d6b6b webm_info: Add Projection element support.
    65fee06 mkvmuxer_sample: Add support for Projection element.
    9a3f2b5 mkvparser_sample: Add support for Projection element.
    41e814a mkvparser: Add Projection element support.
    483a0ff mkvmuxer: Add Projection element support.
    676a713 Add support for the Projection element
    725f362 mkvmuxer: Fix memory leak when Colour is set multiple times.
    fa182de mkvparser_sample: Add output of audio track codec private size.
    8f521f2 mkvparser_tests: Add invalid BlockGroup test.
    39137d7 Remove docs saying binary elements default to 0
    80685d3 Do not skip over unknown elements at the root level
    c147504 Fix legacy Makefile.
    58711e8 mkvparser_sample: Fix version info string.
    837746f mkvparser_tests: Add invalid block test.
    207cd80 Disambiguate sample sources and targets.
    a112d71 mkvparser_tests: Refactor invalid file loading code.
    5dea33e Disambiguate test source and target names.
    125049e parser_tests: Add another truncated chapter string test.
    1de8d4c parser_tests: Add truncated chapter string test.
    ff8c2b6 parser_tests: Move cue validation to test_util.
    4b0690f parser_tests: Add invalid lacing test.
    9828e39 mkvmuxer: Set default doc type version to 4.
    5495a59 webm_parser: Reference more files in CMakeLists.txt.
    0c0ecd0 vpxpes_parser: Add start code emulation prevention support.
    639a4bc webm2pes: Remove debug printfs().
    9a51102 webm2pes: fflush() in the correct conversion function.
    dc7f155 webm2pes: Track total bytes written.
    d518128 webm_parser: Enable usage of werror.
    e1fe762 webm2pes: Add test for mux/demux of large input.
    1b24a79 vpxpes_parser: Read and store PTS when present.
    6cf0a0f vpxpes_parser: Store frame payloads.
    25d2602 webm_parser: Convert style to match the rest of libwebm
    24be76d webm2pes: Replace VpxFrame with VideoFrame.
    b451c3b Add a basic video frame storage class.
    05c90eb libwebm_util: Clarify error text in su[1;31mperf[mrame parser.
    e6415af webm2pes: Make WritePesPacket() a public method.
    8f840dd webm2pes: Move frame read out of PES packet write method.
    448af97 webm2pes: Restore frame fragmentation support.
    f8bb714 cmake: Integrate new parsing API and tests.
    cb8ce0b Add a new incremental parsing API
    900d322 vpxpes_parser/webm2pes: BCMV and PTS fixes.
    4b73545 webm2pes: Add start code emulation prevention.
    82903f3 Add column tiles and frame parallel to webm_info
    5d91edf style_clean_up: Remove unnecessary parentheses
    a95aa4b vp9_level_stats: correct total_uncompressed_bits_ calculation
    f46566f mkvreader: Fix shorten-64-to-32 warning in 32 bit builds.
    76630ca mkvwriter: Fix shorten-64-to-32 warning in 32 bit builds.
    a8ffbd4 webm2pes: Fix format specifier warnings.
    faf89d4 Add MaxLumaSampleRate grace percent to stats.
    d31e6c9 Fix profile 2 in vp9_header_parser.
    bd3ab3a Add flag to estimate last frame's duration to stats.
    c182ed9 Fix lint issue in hdr_util.h
    cc62ecd Add test for Cluster memory leak
    196708a Change MaxLumaSampleRate to be based on frame resolution.
    cbd676b mkvmuxer: Fix leak when a Cluster isn't finalized
    9a235e0 mkvmuxer: Set doctype to matroska when muxing non-WebM codecs.
    47f2843 Add parsing support for new features in CodecPrivate.
    e3c9576 Add VP9 level output to webm_info.
    5cf549f cmake: Log compiler flag at check time.
    bbaaf2d Add class to gather VP9 level stats.
    8bb68c2 Add file to parse data from VP9 frames.
    296429a Add support to parse VP9 profile.
    df3412f Add support for setting VP9 profile and level to sample_muxer.
    87832d4 mkvmuxer: Fix Segment::Finalize in kLive mode
    6df3e56 mkvmuxerutil.hpp: Add using directives for overloaded size utils.
    ec47928 mkvmuxerutil: Revert to using mkvmuxertypes.
    a1dc4f2 Fix parsing of VP9 level.
    4e3d037 Add support to output Colour elements to webm_info.
    d3656fd muxer_tests: ignore iwyu re gtest-message.h
    e76dd5e Fix file name in mkvmuxertypes shim.
    1be5889 Add temporary include shims at old file locations.
    039df94 Add TEST_TMPDIR environment variable
    
    Change-Id: I84bc1401b0aad71ad6727b687f1bede9953a7a08

[33mcommit 808a560be6a71dd0d27f29c26f9fefb5e809d373[m
Author: Frank Galligan <fgalligan@google.com>
Date:   Mon Oct 17 12:41:39 2016 -0700

    third_party: Roll libwebm snapshot.
    
    fc5f88d Fix temp files being left on system.
    c04a134 Add support for overriding PixelWidth and PixelHeight.
    c0160e0 Add support to explicitly set segment duration.
    02bc809 Add support to estimate file duration.
    c97e3e7 Add support to output sub-sample encryption information.
    26f4344 MakeUID: quiet unused param warning in Android builds
    d6af52a Change check to fix compile error.
    1720020 webm_parser: Add Mesh value for ProjectionType
    78f2c5a webm_parser: Use ./ prefix for includes
    da62f65 webm_parser: Remove webm/ prefix from public includes
    e15e8f2 webm_parser: Update README build instructions
    5023f2b mkvmuxer: Fix Colour::Valid()
    cf16204 mkvmuxer_tests: Actually test cue points in the cue point test.
    93e9fb3 Validate Colour element values.
    8036925 mkvparser_tests: Add Projection element test.
    f52d38c mkvparser_tests: Add Colour element test.
    826436a mkvparser: minor SeekHead::Entry clean up.
    24fb44a mkvmuxer_tests: Add Projection element test.
    1e0a8ea mkvmuxer_tests: Add Colour element test.
    0278616 mkvmuxer: Colour accessors/mutators.
    2346f8f Add mkvparser wrapper functions.
    54d6b6b webm_info: Add Projection element support.
    65fee06 mkvmuxer_sample: Add support for Projection element.
    9a3f2b5 mkvparser_sample: Add support for Projection element.
    41e814a mkvparser: Add Projection element support.
    483a0ff mkvmuxer: Add Projection element support.
    676a713 Add support for the Projection element
    725f362 mkvmuxer: Fix memory leak when Colour is set multiple times.
    fa182de mkvparser_sample: Add output of audio track codec private size.
    8f521f2 mkvparser_tests: Add invalid BlockGroup test.
    39137d7 Remove docs saying binary elements default to 0
    c147504 Fix legacy Makefile.
    80685d3 Do not skip over unknown elements at the root level
    58711e8 mkvparser_sample: Fix version info string.
    837746f mkvparser_tests: Add invalid block test.
    207cd80 Disambiguate sample sources and targets.
    a112d71 mkvparser_tests: Refactor invalid file loading code.
    5dea33e Disambiguate test source and target names.
    125049e parser_tests: Add another truncated chapter string test.
    1de8d4c parser_tests: Add truncated chapter string test.
    ff8c2b6 parser_tests: Move cue validation to test_util.
    4b0690f parser_tests: Add invalid lacing test.
    9828e39 mkvmuxer: Set default doc type version to 4.
    5495a59 webm_parser: Reference more files in CMakeLists.txt.
    0c0ecd0 vpxpes_parser: Add start code emulation prevention support.
    639a4bc webm2pes: Remove debug printfs().
    9a51102 webm2pes: fflush() in the correct conversion function.
    dc7f155 webm2pes: Track total bytes written.
    d518128 webm_parser: Enable usage of werror.
    e1fe762 webm2pes: Add test for mux/demux of large input.
    1b24a79 vpxpes_parser: Read and store PTS when present.
    6cf0a0f vpxpes_parser: Store frame payloads.
    25d2602 webm_parser: Convert style to match the rest of libwebm
    24be76d webm2pes: Replace VpxFrame with VideoFrame.
    b451c3b Add a basic video frame storage class.
    05c90eb libwebm_util: Clarify error text in su[1;31mperf[mrame parser.
    e6415af webm2pes: Make WritePesPacket() a public method.
    8f840dd webm2pes: Move frame read out of PES packet write method.
    448af97 webm2pes: Restore frame fragmentation support.
    f8bb714 cmake: Integrate new parsing API and tests.
    cb8ce0b Add a new incremental parsing API
    900d322 vpxpes_parser/webm2pes: BCMV and PTS fixes.
    4b73545 webm2pes: Add start code emulation prevention.
    82903f3 Add column tiles and frame parallel to webm_info
    5d91edf style_clean_up: Remove unnecessary parentheses
    a95aa4b vp9_level_stats: correct total_uncompressed_bits_ calculation
    f46566f mkvreader: Fix shorten-64-to-32 warning in 32 bit builds.
    76630ca mkvwriter: Fix shorten-64-to-32 warning in 32 bit builds.
    a8ffbd4 webm2pes: Fix format specifier warnings.
    faf89d4 Add MaxLumaSampleRate grace percent to stats.
    d31e6c9 Fix profile 2 in vp9_header_parser.
    bd3ab3a Add flag to estimate last frame's duration to stats.
    c182ed9 Fix lint issue in hdr_util.h
    cc62ecd Add test for Cluster memory leak
    196708a Change MaxLumaSampleRate to be based on frame resolution.
    cbd676b mkvmuxer: Fix leak when a Cluster isn't finalized
    47f2843 Add parsing support for new features in CodecPrivate.
    9a235e0 mkvmuxer: Set doctype to matroska when muxing non-WebM codecs.
    e3c9576 Add VP9 level output to webm_info.
    bbaaf2d Add class to gather VP9 level stats.
    5cf549f cmake: Log compiler flag at check time.
    8bb68c2 Add file to parse data from VP9 frames.
    df3412f Add support for setting VP9 profile and level to sample_muxer.
    296429a Add support to parse VP9 profile.
    87832d4 mkvmuxer: Fix Segment::Finalize in kLive mode
    6df3e56 mkvmuxerutil.hpp: Add using directives for overloaded size utils.
    ec47928 mkvmuxerutil: Revert to using mkvmuxertypes.
    4e3d037 Add support to output Colour elements to webm_info.
    a1dc4f2 Fix parsing of VP9 level.
    039df94 Add TEST_TMPDIR environment variable
    d3656fd muxer_tests: ignore iwyu re gtest-message.h
    e76dd5e Fix file name in mkvmuxertypes shim.
    1be5889 Add temporary include shims at old file locations.
    
    Change-Id: I6a1026814560be80d604a5ecb9b66406a1186dd9

[33mcommit 43743b1d3efd99642e8669e864b882628eaca176[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 15:21:35 2016 -0700

    Restore vp8_bilinear_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    [1;31mperf[mormance-wise that uses _u8 and over-reads just a touch.
    
    It is still ~5x faster than C in the unaligned case and doing both
    filters.
    
    BUG=webm:892
    BUG=webm:1273
    
    Change-Id: Icf7167189391b46202f47233bb585c24c42bcc36

[33mcommit d9dce2f48eed1368a44c368fa87a506bd89ffec5[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 11:29:20 2016 -0700

    Restore vp8_sixtap_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    [1;31mperf[mormance-wise that uses _u8 and over-reads just a touch.
    
    The store, when unaligned, has a version that is ~25% slower but safe
    when xoffset = 0 (second pass filter only). When the first pass filter
    (or both) are in play, the new version is almost identical in speed.
    
    Worst case [1;31mperf[mormance (both filters, unaligned stores) is roughly 3-4x
    faster than C.
    
    BUG=webm:817
    BUG=webm:1273
    
    Change-Id: I1e490e94453e0872151fe0dafb05557463f6247d

[33mcommit d7c20079a67c5d44f35db5e991982a4705f1800f[m
Author: Yury Gitman <yuryg@google.com>
Date:   Mon Jul 18 12:17:58 2016 -0700

    Add --alt-ref-aq=<int> option
    
    In the future this option will activate adaptive quantization special
    for altref frames. Encoder will  create the adaptive quantization map
    on the basis of lookahead buffers similarity which is the estimate of
    the future motion compensation [1;31mperf[mormance.
    
    Change-Id: Ia0088b3babb0f9a4899c79d8d819947ba5a03df2

[33mcommit 5d881770e59498075218e81244b9a07b774bab5a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 10 14:00:52 2016 +0100

    Change default recode rule for good speed 0 and best.
    
    Changes the default recode rule for Speed 0 and best quality
    from ALLOW_RECODE to ALLOW_RECODE_KFARFGF.
    
    Tested on the NF, hdres, midres and lowres test sets, this setting
    when combined with patch I40cb559... now [1;31mperf[morms "as well" in
    metrics terms (in fact it came out a tiny amount better overall)
    but encode time is 9.6%  faster (measured as the average
    from 27 mid rate local encodes on clips in the derf/lowres set.
    
    Change-Id: I8c781c0cdfa3a9929cd9406d15582fce47d6ae3b

[33mcommit cfd92dab18639c7f1198393ce04613e6d2b126eb[m
Merge: 6a8d4631a 2c17d5468
Author: James Zern <jzern@google.com>
Date:   Mon Aug 8 20:12:42 2016 +0000

    Merge changes from topic 'clang-tidy'
    
    * changes:
      *_[1;31mperf[m_test.cc: correct DoDecode signature
      test: apply clang-tidy google-readability-braces-around-statements

[33mcommit 2c17d54681bf6f529fac713d37075e8060e0c72a[m
Author: James Zern <jzern@google.com>
Date:   Fri Aug 5 20:21:02 2016 -0700

    *_[1;31mperf[m_test.cc: correct DoDecode signature
    
    + delete unused kMaxPsnr from decode_[1;31mperf[m_test.cc
    
    Change-Id: Id93347631e7870491069a8b7c5bb1f6b2828425f

[33mcommit 87c6c5224d4fb261fad4f3c56336ef57b27acd47[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Thu Jul 14 14:50:52 2016 -0700

    Revert "Amend and improve VP8 multithreading implementation"
    
    Reverted the patch because of possible [1;31mperf[mormance issue.
    
    Change-Id: I49944f827ccd38ed194c9f8d9cb9036fa9bf79e1

[33mcommit 2f28f9072e30f04cd16395733c8e6adc19b1a358[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 13:56:02 2016 -0700

    Enable coeff optimization for intra modes
    
    This further improves the coding [1;31mperf[mormance by
    lowres 0.3%
    midres 0.5%
    hdres  0.6%
    
    Change-Id: I6a03b6da210b9cbc261474bad4a103e0ba021c68

[33mcommit 44354ee7bfa01caf97e6c0a92c4a39c474fa5a7e[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 12:46:48 2016 -0700

    Use precise context to estimate coeff rate cost
    
    Use the precise context to estimate the zero token cost in trellis
    optimization process. This improves the speed 0 coding [1;31mperf[mormance
    by 0.15% for lowres and 0.1% for midres. It improves the speed 1
    coding [1;31mperf[mormance by 0.2% for midres and hdres.
    
    Change-Id: I59c7c08702fc79dc4f8534b64ca594da909e2c91

[33mcommit 62aa642d71bbbdc72dc01da4fb0416be550cd2e2[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 10:05:51 2016 -0700

    Enable uniform quantization with trellis optimization in speed 0
    
    This commit allows the inter prediction residual to use uniform
    quantization followed by trellis coefficient optimization in
    speed 0. It improves the coding [1;31mperf[mormance by
    
    lowres 0.79%
    midres 1.07%
    hdres  1.44%
    
    Change-Id: I46ef8cfe042a4ccc7a0055515012cd6cbf5c9619

[33mcommit e357b9efe08eca4c878e2a43dcde4bd4f7fb39a7[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jul 1 16:02:41 2016 -0700

    Support measure distortion in the pixel domain
    
    Use pixel domain distortion metric in speed 0. This improves the
    compression [1;31mperf[mormance by 0.3% for both low and high resolution
    test sets.
    
    Change-Id: I5b5b7115960de73f0b5e5d0c69db305e490e6f1d

[33mcommit 6929ab0ba632b4c3d6225d990c50ea49c415a8f5[m
Merge: 85786a8dd 9e185ed17
Author: Jingning Han <jingning@google.com>
Date:   Mon Jun 20 16:48:22 2016 +0000

    Merge "Refactor optimize_b for speed [1;31mperf[mormance"

[33mcommit 9e185ed177b80be288737bd303b35ab6b9ca08bb[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 17:36:39 2016 -0700

    Refactor optimize_b for speed [1;31mperf[mormance
    
    This commit refactors the trellis coefficient optimization process.
    It saves multiplications used to generate the final dequantized
    coefficients. It removes two memset operations on quantized
    and dequantized coefficient sets. This improves the unit speed
    by 10%.
    
    Change-Id: I23f47c6e14582520a7f952f03ce8f72183e7f0e6

[33mcommit eb09bbe88bfdf6ac59477dbadf1a7376d46d95d3[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Tue Jun 7 17:21:01 2016 -0700

    Revert "remove vp9_diamond_search_sad_avx.c"
    
    This reverts commit be12fefa4b7d224e9f39275a6bb4fab01b8bae3b
    and commit 057c1c4034ba5b9bf360c5c1f600ebc6d0718c3a.
    
    Also, the mismatch between the avx version and the
    c version has been fixed.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1168
    
    For a rt encode using 1080p@60fps material, up to 11% [1;31mperf[mormance
    improvement overall was seen.
    
    Change-Id: Icd1f216209ebc6fc0b8da885f32f356fa4355ed0

[33mcommit b26232eb1b2e7253687770b9b5b76a2d465e70bb[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue May 31 10:38:01 2016 -0700

    Update filter_selectively_vert_row2()
    
    Reduce operations and jumps. [1;31mperf[m shows CPU time reduced from 1.9% to
    1.6% when decoding fdJc1_IBKJA.248.webm on Xeon E5.
    Will apply the changes to vp10 after code review.
    
    Change-Id: I9351509922855d8896ddef1ed093b3ca12619a61

[33mcommit dc5f7712f234af8b7e1123610f2569bf54c65684[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Tue Mar 22 10:54:43 2016 -0700

    Prevent encoder crash caused by row tile dependencies
    
    In multi-thread case, the encoder may crash if using encoder option
    tile-rows > 0. To prevent that, force tile-rows=0 in this situation.
    This is a workaround for WebM issue 1095:
    https://bugs.chromium.org/p/webm/issues/detail?id=1095
    
    The further fix can be done by adding synchronizations after a tile
    row is encoded. But this will hurt multi-threaded encoder [1;31mperf[mormance.
    So, it is recommended to use tile-rows=0 while encoding with threads
    > 1.
    
    Change-Id: I656cbcc200f8d0410d09530e7981ad8f32fe7bc9

[33mcommit 0271bafb4a037ec4b70567c8ed83a312fd8c0f01[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 16 15:10:42 2016 -0700

    Reuse computation in build_nmv_component_cost_table.
    
    Saves 1% CPU on remoting_[1;31mperf[mtest with speed 8.
    
    Change-Id: I28dc2f602bd3bf5639a40c9f21f5a9833f01d4be

[33mcommit bd924fbd210137f3a1f8a785dfc805696872882b[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 16 15:56:35 2016 -0700

    choose_partitioning: Avoid computing segment_id twice.
    
    1% faster remoting_[1;31mperf[mtest at speed -8.
    
    Change-Id: I78d591e14b8f890c1e69cacb6d490dfeb9c37900

[33mcommit 38e401b5daa0ffb771255a3b6cafccef3146d709[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 2 14:45:41 2016 -0800

    vp9-svc: Fix issues with svc with periodic key frames.
    
    Use the su[1;31mperf[mrame counter to set the key frame, and force
    it to the key frame on base spatial layer only.
    Also, update svc frame counters under frame dropping.
    
    Update unittest: add specific tests with short key frame period.
    
    https://bugs.chromium.org/p/webm/issues/detail?id=1150
    
    Change-Id: I5b1c9a09253e6e5fbfce51b4cf603ae22d422b01

[33mcommit 9c0a2a7935c37c6925600770fa2d9ca73375cd73[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 29 16:52:44 2016 -0800

    Port alt reference frame filter improvement to VP9
    
    Use sharp filter to generate motion compensated reference for
    temporal filtering. It improves the average coding [1;31mperf[mormance of
    VP9 speed 0:
    derf    0.34%
    hevcmr  0.38%
    stdhd   0.58%
    
    Change-Id: I1772a051be545de8c343055274e5ca0929d19cda

[33mcommit 8d006a16c53e10d481d1df148140ee7c2561460e[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 29 15:20:12 2016 -0800

    Back port partition rate cost estimate fix to VP9
    
    This commit back ports the fix from
    https://chromium-review.googlesource.com/#/c/326940
    
    It corrects the block partition context fetching in rate-distortion
    optimization. It improves the average coding [1;31mperf[mormance of speed 0:
    derf    0.098%
    hevcmr  0.102%
    stdhd   0.282%
    
    Change-Id: I8bcc6fe40ba5c6b50a6136daac116dcc738937ec

[33mcommit 74a679de6f66b6a30d7399ae427ce2b85a967824[m
Author: Julia Robson <juliamrobson@gmail.com>
Date:   Fri Feb 26 14:42:25 2016 -0800

    Port "cost_coeff speed improvements" to vp9.
    
    About a 5% faster overall encode ([1;31mperf[m cycles) at speed zero!
    
    Change-Id: Iaf013ba75884415cd824e98349f654ffb1c3ef33

[33mcommit f28ea3e830a2447bc9a3813c302f36594d1376d3[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Mon Feb 8 15:59:17 2016 -0800

    Explicitly set tx_type for sub8x8 blocks
    
    Fixes an issue where the tx_type was not set correctly for
    sub8x8 inter and intra blocks. In the current syntax, for
    sub8x8 blocks, there is still a single tx_type that is
    transmitted. Ideally, this should be searched for the best
    rd [1;31mperf[mormance, albeit at the expense of encode speed.
    For now, we just set it to DCT_DCT. Previously it was left
    incorrectly as what was used for the previous non sub8x8
    block.
    
    derflr: BDRATE -0.277%
    
    Change-Id: If76ba903bfbfd4d374cf1ac7d1daee50e92f0edd

[33mcommit 203bdd20fbe29fcd3318582f27a2fe59e453cfbb[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 8 09:56:34 2016 -0800

    Account for sub8x8 block skip mode cost in RD decision
    
    Make this consistent with regular block size rate-distortion
    optimization. It improves the compression [1;31mperf[mormance:
    derf    0.055%
    hevcmr  0.129%
    
    Change-Id: I112fe734f592c21bc7aa6efb7e3f269c4214ee7b

[33mcommit bcce658d3159be8435a557f26985e4d3f7b54b40[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Feb 3 11:07:43 2016 -0800

    Use precise rate cost estimate for skip block mode
    
    It improves the compression [1;31mperf[mormance of VP9 by 0.1% across all
    test sets. No speed change is observed.
    
    Change-Id: I59338c5c9e67bae22188f35fc3afbfe2a6bba6b0

[33mcommit 7da6324cab32d8080f497c912107f94b661a866e[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Jan 20 14:28:09 2016 -0800

    Short circuit flat blocks when coding screen content at realtime speed.
    
    In inter mode search skip all modes except NEARESTMV and DC_PRED.
    
    10% less encode latency for large frames using the chromium remoting_[1;31mperf[mtests.
    
    +0.313% BDRATE on the screencast set at speed -6.
    
    Change-Id: Ib97a39dd8bcdeab545509e0e02d78ce7033f8c63

[33mcommit 26a6ce4c6d25ec6254af67551698679340ce581c[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Tue Dec 22 16:51:57 2015 -0800

    Code clean of highbd_tm_predictor_32x32
    
    Remove the ARCH_X86_64 constraint. No [1;31mperf[mormance hit on both
    big core and small core.
    
    Change-Id: I39860b62b7a0ae4acaafdca7d68f3e5820133a81

[33mcommit c91dd55eda7717d7a5f9726977138fb430cbbcfb[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Fri Dec 18 15:25:27 2015 -0800

    Code clean of highbd_v_predictor_4x4
    
    MMX replaced with SSE2, same [1;31mperf[mormance.
    
    Change-Id: I2ab8f30a71e5fadbbc172fb385093dec1e11a696

[33mcommit 8366b414dd73a298d22910574c9e988865ac0e12[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Fri Dec 18 12:45:23 2015 -0800

    Code clean of highbd_dc_predictor_4x4
    
    MMX replaced with SSE2, same [1;31mperf[mormance.
    
    Change-Id: Ic57855254e26757191933c948fac6aa047fadafc

[33mcommit 93c0b879d48dcb3219883743580c22c2278b7779[m
Merge: 9232f69b2 c760c33b9
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Dec 15 16:25:20 2015 +0000

    Merge "SVC 1 pass mode: Constrain inter mode search within su[1;31mperf[mrame."

[33mcommit c760c33b993c26376631474a54f2f04a58aaf8a2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Dec 7 12:23:56 2015 -0800

    SVC 1 pass mode: Constrain inter mode search within su[1;31mperf[mrame.
    
    Keep track of frame indexes for the references, and
    constrain inter mode search for reference with same
    temporal alignment.
    
    Improves speed by about ~15%, no noticeable loss in
    compression [1;31mperf[mormance.
    
    Change-Id: I5c407a8acca921234060c4fcef4afd7d734201c8

[33mcommit ece4fd5d2247c9512b31a93dd593de567beaf928[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Dec 9 10:10:17 2015 -0800

    Backport temporal filter approach to VP9
    
    This commit enables the new temporal filter system for VP9. For
    speed 1, it improves the compression [1;31mperf[mormance:
    derf  0.54%
    stdhd 1.62%
    
    Change-Id: I041760044def943e464345223790d4efad70b91e

[33mcommit 4e692bbee29d1566e43ed4499249651d4c01f9c4[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 8 15:48:24 2015 +0000

    Changes to exhaustive motion search.
    
    This change has been imported from VP9 and
    alters the nature and use of exhaustive motion search.
    
    Firstly any exhaustive search is preceded by a normal step search.
    The exhaustive search is only carried out if the distortion resulting
    from the step search is above a threshold value.
    
    Secondly the simple +/- 64 exhaustive search is replaced by a
    multi stage mesh based search where each stage has a range
    and step/interval size. Subsequent stages use the best position from
    the previous stage as the center of the search but use a reduced range
    and interval size.
    
    For example:
      stage 1: Range +/- 64 interval 4
      stage 2: Range +/- 32 interval 2
      stage 3: Range +/- 15 interval 1
    
    This process, especially when it follows on from a normal step
    search, has shown itself to be almost as effective as a full range
    exhaustive search with step 1 but greatly lowers the computational
    complexity such that it can be used in some cases for speeds 0-2.
    
    This patch also removes a double exhaustive search for sub 8x8 blocks
    which also contained  a bug (the two searches used different distortion
    metrics).
    
    For best quality in my test animation sequence this patch has almost
    no impact on quality but improves encode speed by more than 5X.
    
    Restricted use in good quality speeds 0-2 yields significant quality gains
    on the animation test of 0.2 - 0.5 db with only a small impact on encode
    speed. On most natural video clips, however, where the step search
    is [1;31mperf[morming well, the quality gain and speed impact are small.
    
    Change-Id: Iac24152ae239f42a246f39ee5f00fe62d193cb98

[33mcommit 70eb870cfed0e16b9f32e426ef05f0b3faba3bc5[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Mon Nov 2 16:28:10 2015 -0800

    Expand unconstrained nodes in pack_mb_tokens and loop on zeros.
    
    Reduces Linux [1;31mperf[m estimated cycle count for pack_mb_tokens on a
    lossless encode on my desktop from 61858501855 to 48154040219 or from
    26% of the overall profile to 21%.
    
    Change-Id: I9ca3426d7e3272bc7f7030abda4f0d0cec87fb4a
For keyword optim:
[33mcommit fce163cd54ce95651ae568d63d5bd4fc6605f202[m
Author: Gabriel Marin <gmx@chromium.org>
Date:   Wed Dec 14 11:07:50 2016 -0800

    Remove superfluous conditional on 'shortcut'
    
    Remove superfluous test. Produces a small improvement in instruction scheduling.
    Measured a 1% to 1.5% reduction in execution time for routine vp9_[1;31moptim[mize_b
    with different compilers.
    
    No change in behavior.
    
    TEST=Verified that encoded files match bit for bit, with and without this
    change.
    BUG=b/33678225
    
    Change-Id: I2bf248d4c25fc0256147d7a8766ff9108ae9cba3

[33mcommit 85aead1790c067d47eed0f85bc8fa5e4f6852596[m
Merge: 80474bf65 0549f5aae
Author: Gabriel Marin <gmx@chromium.org>
Date:   Mon Dec 19 23:25:38 2016 +0000

    Merge "Simplify address arithmetic in vp9_[1;31moptim[mize_b"

[33mcommit 0549f5aae91b7d2f1265cea7e2edf34fda8f0433[m
Author: Gabriel Marin <gmx@chromium.org>
Date:   Tue Dec 13 16:22:48 2016 -0800

    Simplify address arithmetic in vp9_[1;31moptim[mize_b
    
    Simplify address arithmetic on token_costs to reduce the number of generated
    instructions that are used for address arithmetic inside routine
    vp9_[1;31moptim[mize_b. It also helps improve instruction scheduling depending on
    compiler and [1;31moptim[mization level.
    
    Measured a 9.3% reduction in retired instructions and 5.3% reduction in
    execution time for this routine with GCC v4.8.4 and [1;31moptim[mization flags -O3,
    and a reduction of up to 11.6% in execution time with other compilers.
    
    No change in behavior.
    
    TEST=Verified that encoded files match bit for bit, with and without this
    change.
    BUG=b/33678225
    
    Change-Id: I6098650fb5cd2aa04e014fe6e68ca20761f3a21f

[33mcommit 174528de1e56538d2f930251b23272fdc012be1c[m
Merge: f16a0a1aa 018a2adcb
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Dec 7 21:03:21 2016 +0000

    Merge "Update idct NEON [1;31moptim[mization to not use narrowing saturating shift"

[33mcommit 018a2adcb1b14a8f12fae6342c627c41e8b28ef1[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Nov 22 14:21:36 2016 -0800

    Update idct NEON [1;31moptim[mization to not use narrowing saturating shift
    
    Change-Id: Iae517017217dbacd638d40fcfeeb0f4bba7b8b8b

[33mcommit cbeae53e765fa47d2e5d21d0682812663fd0f963[m
Merge: 7adeccb33 1338c71df
Author: James Zern <jzern@google.com>
Date:   Sat Nov 19 01:29:37 2016 +0000

    Merge "Clean horizontal intra prediction NEON [1;31moptim[mization"

[33mcommit 011fdec1e69c462767844877f6e3651b338215ad[m
Merge: 4ddae8f52 85c1ee434
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Nov 15 23:30:48 2016 +0000

    Merge "Add high bitdepth intra prediction NEON [1;31moptim[mization (mode tm)"

[33mcommit 85c1ee434d51994844125a18bf6b98fd0510b827[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Oct 28 15:04:45 2016 -0700

    Add high bitdepth intra prediction NEON [1;31moptim[mization (mode tm)
    
    BUG=webm:1316
    
    Change-Id: Ib014de06836ac12726f4a2c9f0833ec4eb4d233b

[33mcommit a3128ad33af5a348269c01c3fd3c30a1d8d53f39[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Oct 28 09:42:11 2016 -0700

    Add high bitdepth intra prediction NEON [1;31moptim[mization (h and v)
    
    BUG=webm:1316
    
    Change-Id: I47eeac698a98a31d1af5f72441052302e9fa4f46

[33mcommit 40ab0424d4884190a3450b1e7edf8155c60f011d[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Oct 27 16:06:07 2016 -0700

    Add high bitdepth intra prediction NEON [1;31moptim[mization (mode d45 and d135)
    
    BUG=webm:1316
    
    Change-Id: I6a330874348df04df24a6d9efdc06f567e04bf8e

[33mcommit f5141ea45fee014b529a264c1fa3bdedd42d038c[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Thu Sep 29 17:57:51 2016 -0700

    Refine vp8_refining_search_sadx4 targeting
    
    This uses the same sdx4df pointers as vp8_diamond_search_sadx4 and
    should therefore target the same [1;31moptim[mizations.
    
    See e4ddf9db6a37eee59c079f5ae427643ae3424fcf
    
    Change-Id: Ic298e9b25c34bbe6b7a0799509355b0addb56675

[33mcommit 64a5a8fd6f3b8098b00dcdf3b074352c2661acd7[m
Merge: 3fdfbcb73 3b74066b1
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Nov 8 16:53:41 2016 +0000

    Merge "Add high bitdepth intra prediction NEON [1;31moptim[mization (mode dc)"

[33mcommit 1338c71dfb6fa8e7c5d8aa52cd1d4958bcbe1721[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Nov 2 11:28:33 2016 -0700

    Clean horizontal intra prediction NEON [1;31moptim[mization
    
    Change-Id: I1ef0a5b2655cbc7e1cc2a4a1a72e0eed9aa41f05

[33mcommit 3b74066b10e5af032918fadc0add83370bec1449[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Oct 25 14:48:32 2016 -0700

    Add high bitdepth intra prediction NEON [1;31moptim[mization (mode dc)
    
    BUG=webm:1316
    
    Change-Id: I984d6004ea2445e86f213fb6fa4d794a9955af8f

[33mcommit 05ee241493536d534fda46ca336f5f1c442e474f[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Oct 25 14:24:16 2016 -0700

    Add high bitdepth intra prediction [1;31moptim[mization speed test
    
    BUG=webm:1316
    
    Change-Id: I99feec867d5b8ea06b43cdd3fcd7c90238f5efdb

[33mcommit 0c880145928f4ddae719eed02288ba349718bfff[m
Merge: 84dcfced5 cc5f49767
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Nov 1 19:38:06 2016 +0000

    Merge "Refine 8-bit intra prediction NEON [1;31moptim[mization (mode tm)"

[33mcommit cc5f49767a514686c90a29781a50b0ce5a7da6fe[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Oct 21 12:38:49 2016 -0700

    Refine 8-bit intra prediction NEON [1;31moptim[mization (mode tm)
    
    Change-Id: I98b9577ec51367df5e5d564bedf7c3ea0606de4c

[33mcommit cde5d5db136775b4b64213250ffe278e2d4397f5[m
Merge: 702b3e1ee a347118f3
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Oct 31 19:57:22 2016 +0000

    Merge "Refine 8-bit intra prediction NEON [1;31moptim[mization (mode h and v)"

[33mcommit a347118f3c1710ba3238c4894d7ffb19bf1388fa[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Oct 21 11:44:49 2016 -0700

    Refine 8-bit intra prediction NEON [1;31moptim[mization (mode h and v)
    
    Change-Id: I45e1454c3a85e081bfa14386e0248f57e2a91854

[33mcommit 4d305dab34acbc7eac699b0c6b15a23128461edd[m
Merge: 4f7a59c80 4ae9f5c09
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Oct 28 15:57:55 2016 +0000

    Merge "Refine 8-bit intra prediction NEON [1;31moptim[mization (mode d45 and d135)"

[33mcommit 4ae9f5c092ae31d4f3b7e66d9e2bed7778af0f17[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Oct 21 10:44:22 2016 -0700

    Refine 8-bit intra prediction NEON [1;31moptim[mization (mode d45 and d135)
    
    dst += stride behaving better with gcc/clang.
    Unroll loops.
    
    Change-Id: I83f85df2bc9f17c6159542f57680b509395db2b1

[33mcommit 9c0680bd4363bdd50dc11e843c91b0e0093e4572[m
Merge: 9720b58aa ce88b8f5c
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 26 16:51:44 2016 +0000

    Merge "Refine 8-bit intra prediction NEON [1;31moptim[mization (mode dc)"

[33mcommit ce88b8f5c50085c829d115ea95509e8cd1d60b7f[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 19 13:37:26 2016 -0700

    Refine 8-bit intra prediction NEON [1;31moptim[mization (mode dc)
    
    dst += stride behaving better with gcc/clang
    Expanding inline function dc_SIZExSIZE() save intructions for
    vpx_dc_predictor_SIZExSIZE_neon().
    
    Change-Id: Id0ccbd58b6a31df539141fd33bdf28633339150d

[33mcommit b0cc8d5cc688fd1a63e3eb89b7c47046e5258c24[m
Merge: 808a560be 9c8981c66
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Oct 17 23:57:13 2016 +0000

    Merge "add vpx high bitdepth convolve8 NEON intrinsics [1;31moptim[mization"

[33mcommit 9c8981c666b82c11a4ca725c3a01c576bf24f5ca[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Wed Oct 12 17:20:53 2016 -0700

    add vpx high bitdepth convolve8 NEON intrinsics [1;31moptim[mization
    
    BUG=webm:1299
    
    Change-Id: I236bfa0441e357b6ff05add8269a2cfb543924d1

[33mcommit c435b7fbdd28bb0d017576ea92b151e5770d0736[m
Merge: bde905cba b3cb065ee
Author: Linfeng Zhang <linfengz@google.com>
Date:   Fri Sep 30 15:56:30 2016 +0000

    Merge "Refine vpx convolve8 NEON intrinsics [1;31moptim[mization"

[33mcommit b3cb065ee4ba8320f54dae0c69e9b27042e7f75a[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Sep 29 12:48:59 2016 -0700

    Refine vpx convolve8 NEON intrinsics [1;31moptim[mization
    
    BUG=webm:1290
    
    Change-Id: I5d7fce62270f9d76ef9ce98b3d188ad11fb21873

[33mcommit b46243d7ff0f0d02d66010fb7830bb767046508b[m
Merge: 60624aa53 761e5ec2f
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Sep 26 16:11:11 2016 +0000

    Merge "Refactor lpf (size 4 and 8) NEON intrinsics [1;31moptim[mization"

[33mcommit 761e5ec2f6cdbbe50f0827024d4351165a0dff13[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Sep 19 11:37:16 2016 -0700

    Refactor lpf (size 4 and 8) NEON intrinsics [1;31moptim[mization
    
    Also check in 8x8 8-bit transpose NEON intrinsics [1;31moptim[mization
    transpose_u8_8x8()
    
    Change-Id: I32d321cf97ea21eab158ac4896990fc9a51681c4

[33mcommit 5d73639d8f15141664abfab641a369b5ecfff907[m
Merge: 112eb54c1 810736800
Author: Linfeng Zhang <linfengz@google.com>
Date:   Sat Sep 17 00:33:30 2016 +0000

    Merge "Refactor lpf (size 16) NEON intrinsics [1;31moptim[mization"

[33mcommit 810736800018f4deadcb1df510d356034ecfd21b[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Thu Sep 15 16:49:47 2016 -0700

    Refactor lpf (size 16) NEON intrinsics [1;31moptim[mization
    
    Extract shared code so later lpf size 4 and 8 functions can reuse.
    
    Change-Id: Ibb43ef1fd8651bd2e32fcc4c56cf6fa7ca237401

[33mcommit 129814fcb487696264199ef4fe18049dd09a8b66[m
Merge: 3a3169be5 635ae8bdc
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Aug 30 16:54:39 2016 +0000

    Merge "Adjust  coefficient [1;31moptim[mization  and tx_domain rd speed features."

[33mcommit 635ae8bdc1f5f1fe9e94c2f14144ad4c8750b627[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Aug 18 14:15:25 2016 +0100

    Adjust  coefficient [1;31moptim[mization  and tx_domain rd speed features.
    
    Previously Tx domain rd was used in all cases above speed 0.
    Coefficient [1;31moptim[mization was only enabled for best and speed 0.
    
    This patch selectively sets these features at other speed settings
    based on block complexity.
    
    For the Netflix and HD sets in particular the quality gains are
    large compared to the speed hit. At speed 1 the average psnr
    gain in the NF set  is > 2.5% with one clip coming in at 18%
    and some points almost 30%.  Average gains for the lower
    resolution test sets are around 1%.
    
    The gains are biggest at low Q so some further [1;31moptim[mization
    may be possible.
    
    Change-Id: I340376c7b2a78e5389a34b7ebdc41072808d0576

[33mcommit d393885af195a58e37e6966352708b3b04892c90[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Aug 23 16:58:07 2016 -0700

    Remove halfpix specialization
    
    This function only exists as a shortcut to subpixel variance with
    predefined offsets. xoffset = 4 for horizontal, yoffset = 4 for vertical
    and both for "hv"
    
    Removing this allows the existing [1;31moptim[mizations for the variance
    functions to be called. Instead of having only sse2 [1;31moptim[mizations, this
    gives sse2, ssse3, msa and neon.
    
    BUG=webm:1273
    
    Change-Id: Ieb407b423b91b87d33c4263c6a1ad5e673b0efd6

[33mcommit 2c3807b89f18cde63aa42f8aeecc31e5bfe12554[m
Merge: d4ab23486 e446ffda4
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Mon Aug 1 16:30:05 2016 +0000

    Merge "Cache [1;31moptim[mizations in [1;31moptim[mize_b()."

[33mcommit e446ffda45b61f0900a8063a004c7ceef0b4ffa2[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Fri Jul 29 12:06:49 2016 -0700

    Cache [1;31moptim[mizations in [1;31moptim[mize_b().
    
    Move best index into the token state. Shrink it down to one byte. This
    is more cache friendly (access are group together) and uses less total
    memory.
    
    Results in 4% fewer cycles in [1;31moptim[mize_b().
    
    Change-Id: I75db484fb3dc82f59928d54b659d79c80ee40452

[33mcommit fed14a3e949d27f0484c5f4901994f846d7b7474[m
Merge: e93f2fdb8 efccbc9fb
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 13 16:01:01 2016 +0000

    Merge "Disable trellis [1;31moptim[mization when lossless is on"

[33mcommit efccbc9fb5df834316bc4c620b76e85a19fe7c52[m
Author: Jingning Han <jingning@google.com>
Date:   Tue Jul 12 08:58:39 2016 -0700

    Disable trellis [1;31moptim[mization when lossless is on
    
    Disable trellis coefficient [1;31moptim[mization when the lossless mode
    is turned on.
    
    Change-Id: I9001bf626e86dc3c8c32331ede04fd39036e5f7c

[33mcommit 2f28f9072e30f04cd16395733c8e6adc19b1a358[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 13:56:02 2016 -0700

    Enable coeff [1;31moptim[mization for intra modes
    
    This further improves the coding performance by
    lowres 0.3%
    midres 0.5%
    hdres  0.6%
    
    Change-Id: I6a03b6da210b9cbc261474bad4a103e0ba021c68

[33mcommit 44354ee7bfa01caf97e6c0a92c4a39c474fa5a7e[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 12:46:48 2016 -0700

    Use precise context to estimate coeff rate cost
    
    Use the precise context to estimate the zero token cost in trellis
    [1;31moptim[mization process. This improves the speed 0 coding performance
    by 0.15% for lowres and 0.1% for midres. It improves the speed 1
    coding performance by 0.2% for midres and hdres.
    
    Change-Id: I59c7c08702fc79dc4f8534b64ca594da909e2c91

[33mcommit 62aa642d71bbbdc72dc01da4fb0416be550cd2e2[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 10:05:51 2016 -0700

    Enable uniform quantization with trellis [1;31moptim[mization in speed 0
    
    This commit allows the inter prediction residual to use uniform
    quantization followed by trellis coefficient [1;31moptim[mization in
    speed 0. It improves the coding performance by
    
    lowres 0.79%
    midres 1.07%
    hdres  1.44%
    
    Change-Id: I46ef8cfe042a4ccc7a0055515012cd6cbf5c9619

[33mcommit 541eb7899409914dd0c530bebb2307102f7694a8[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 09:58:22 2016 -0700

    Refactor coeff_cost() function
    
    Move the operations that update the context buffers outside this
    function. The coeff_cost() takes all input as const value and returns
    the coefficient cost.
    
    This makes preparation for the next coefficient [1;31moptim[mization CLs.
    
    Change-Id: I850eec6e5470b91ea84646ff26b9231b09f70a0c

[33mcommit 6929ab0ba632b4c3d6225d990c50ea49c415a8f5[m
Merge: 85786a8dd 9e185ed17
Author: Jingning Han <jingning@google.com>
Date:   Mon Jun 20 16:48:22 2016 +0000

    Merge "Refactor [1;31moptim[mize_b for speed performance"

[33mcommit 85786a8ddb9cccaeaa0ff586cfa3332f6c08c56c[m
Merge: 188420f4f dba1d1a63
Author: Jingning Han <jingning@google.com>
Date:   Mon Jun 20 16:48:01 2016 +0000

    Merge "Port [1;31moptim[mize_b speed-up from vp10"

[33mcommit 9e185ed177b80be288737bd303b35ab6b9ca08bb[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 17:36:39 2016 -0700

    Refactor [1;31moptim[mize_b for speed performance
    
    This commit refactors the trellis coefficient [1;31moptim[mization process.
    It saves multiplications used to generate the final dequantized
    coefficients. It removes two memset operations on quantized
    and dequantized coefficient sets. This improves the unit speed
    by 10%.
    
    Change-Id: I23f47c6e14582520a7f952f03ce8f72183e7f0e6

[33mcommit dba1d1a63dd170fc7d5a2af27abaa95484c4c75f[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 17:11:01 2016 -0700

    Port [1;31moptim[mize_b speed-up from vp10
    
    This commit back ports the speed-up from vp10. It improves the
    unit speed by 15%.
    
    Change-Id: Ibe8c0e0974b03266d6abd16a41e89c3b91d8db2a

[33mcommit 1417ed28f362a21790ba59a55189d3486a81bff1[m
Merge: 4f367f5cd f99f78c7a
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 23:05:33 2016 +0000

    Merge "Use 64-bit integer to store distortion in [1;31moptim[mize_b"

[33mcommit f99f78c7aff674580960420d172e77708a0fd5c3[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 14:52:05 2016 -0700

    Use 64-bit integer to store distortion in [1;31moptim[mize_b
    
    This fixes the overflow issue.
    
    Bug=webm:1241
    
    Change-Id: Ia168b7fae1ad214a6837aaa785a08bf8506987dd

[33mcommit 28a93d6588ab1ea246bb3aee046ea8e46939de07[m
Merge: dd217d3df a554bd8da
Author: Hui Su <huisu@google.com>
Date:   Wed Jun 8 00:33:48 2016 +0000

    Merge "Avoid a potential assertion fail in [1;31moptim[mize_b()"

[33mcommit a554bd8dace6ab374c415f1f43ff5740ef1b3f4e[m
Author: Hui Su <huisu@google.com>
Date:   Tue Jun 7 15:45:04 2016 -0700

    Avoid a potential assertion fail in [1;31moptim[mize_b()
    
    The eob of a block is not perperly set when skip_recode is true,
    thus triggering assert(eob <= default_eob) to fail.
    
    Change-Id: Ifecbe33dce2dc4903e0a80bd384dc09bf0dd8a44

[33mcommit ce11055d57687930c5ee5f6796d2d76787de5f5c[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri May 6 17:20:15 2016 -0700

    Remove sixtap/bilinear 4x4 neon implementations
    
    These implementations rely on casting the pointers to load the data.
    Clang implemented [1;31moptim[mizations which automatically add alignment hints
    to such loads. The 4x4 filters do not guarantee the necessary alignment
    so the resulting assembly is broken.
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    BUG=webm:817
    BUG=webm:892
    
    Change-Id: I608885299f1f86ff83653b65e0e40d0ae87fb3fe

[33mcommit 81eb71f00ce7c08375ec9acc14f0f4c58767b8aa[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Wed May 4 12:12:02 2016 -0700

    Change to use proper type in vp{9,10}_token_state
    
    "qc" in vp{9,10}_token_state is used to save quantized coefficients, this
    commit changes the type from short to tran_low_t to properly reflect
    the value range for highbitdepth build.
    
    This fixes an out-of-range bug when [1;31moptim[mize_b is used in highbitdepth
    build.
    
    Change-Id: Ibf330879e6ac6ae8f099e085caa9d3d9a889fde8

[33mcommit 6c4007be1c7b663db1717a0768b8299517b6708d[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Thu Nov 19 15:43:24 2015 -0800

    Be explicit about overflow in vpx_variance16x16_sse2.
    
    The product always fits in uint32_t, but the operands don't.
    
    An [1;31moptim[mizing compiler should generate the wraparound code.
    (Verified with clang).
    
    Change-Id: I25eb64df99152992bc898b8ccbb01d55c8d16e3c

[33mcommit 03b6f5f8e31464e031eef734406d3ff7499c49ed[m
Merge: f16cf9fbc c3a9247e0
Author: Hui Su <huisu@google.com>
Date:   Tue Apr 26 19:12:09 2016 +0000

    Merge "VP9: adjust trellis quant [1;31moptim[mization RD parameters"

[33mcommit f16cf9fbccdb86d352dd80c21dd4b01891c5822a[m
Merge: fbefe470b c8f56d230
Author: Hui Su <huisu@google.com>
Date:   Tue Apr 26 19:11:49 2016 +0000

    Merge "VP9: enable trellis quantization [1;31moptim[mization for intra blocks"

[33mcommit c3a9247e09bd74f65c36d12333f5061535158a93[m
Author: Hui Su <huisu@google.com>
Date:   Mon Apr 25 14:23:06 2016 -0700

    VP9: adjust trellis quant [1;31moptim[mization RD parameters
    
    Coding gain:
    lowres  0.64%
    midres  0.38%
    hdres   0.58%
    
    Change-Id: I233fa2a4b24bd1e15091a5f5ef6aff661f3f50ec

[33mcommit c8f56d23039865b0bd03ea8c518b5691f2be02c7[m
Author: Hui Su <huisu@google.com>
Date:   Mon Apr 25 12:40:56 2016 -0700

    VP9: enable trellis quantization [1;31moptim[mization for intra blocks
    
    Coding gain:
    lowres  0.18%
    midres  0.23%
    hdres   0.36%
    
    Change-Id: I044c8afbc481fc55b23d440352941071355b0afb

[33mcommit c83bcb34741c55535727da8e4b66ec24ecd573a9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 25 08:38:08 2016 -0800

    vp9-svc: Allow for 2 stage downscaling for spatial layers.
    
    For 1 pass cbr mode: allow for two-stage 1:2 scaling
    (which will use the 1:2 [1;31moptim[mized scaler) if the spatial
    layer is 1/4x1/4 of souce.
    
    Without this change, the base layer for 3 spatial layers would
    be using the non-normative scaler which is un-[1;31moptim[mized/C code.
    
    Change-Id: I9d73f92a4a96927d0f1d6bf75315c1e60513226a

[33mcommit 8d006a16c53e10d481d1df148140ee7c2561460e[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 29 15:20:12 2016 -0800

    Back port partition rate cost estimate fix to VP9
    
    This commit back ports the fix from
    https://chromium-review.googlesource.com/#/c/326940
    
    It corrects the block partition context fetching in rate-distortion
    [1;31moptim[mization. It improves the average coding performance of speed 0:
    derf    0.098%
    hevcmr  0.102%
    stdhd   0.282%
    
    Change-Id: I8bcc6fe40ba5c6b50a6136daac116dcc738937ec

[33mcommit f51f0998e1ca99cd7497ded3642bb27445b1b215[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 25 08:38:08 2016 -0800

    vp9-svc: Fix speed issue with source downscaling for spatial layers.
    
    For 1 pass cbr mode: allow for two-stage 1:2 scaling
    (which will use the 1:2 [1;31moptim[mized scaler) if the spatial
    layer is 1/4x1/4 of souce.
    
    Without this change, the base layer for 3 spatial layers would
    be using the non-normative scaler which is un-[1;31moptim[mized/C code.
    
    Change-Id: Ifcf526ec2aaf3e5fa7924588d9dd8660bf02fb46

[33mcommit 203bdd20fbe29fcd3318582f27a2fe59e453cfbb[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 8 09:56:34 2016 -0800

    Account for sub8x8 block skip mode cost in RD decision
    
    Make this consistent with regular block size rate-distortion
    [1;31moptim[mization. It improves the compression performance:
    derf    0.055%
    hevcmr  0.129%
    
    Change-Id: I112fe734f592c21bc7aa6efb7e3f269c4214ee7b

[33mcommit b229710811f618247f712e4567b8949ec696ce0b[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Thu Jan 28 16:29:29 2016 -0800

    SSSE3 idct8x8 functions for highbitdpeth build
    
    This commit changes SSSE3 [1;31moptim[mized idct8x8 functions to work with
    highbitdepth build.
    
    With this commit and the previous one that enabled SSSE3 idct32x32
    functions, tests showed virtually no difference on decoding speed for
    file fdJc1_IBKJA.248.webm for the build with -enable-vp9-highbitdpeth
    option and the build without the option.
    
    Change-Id: Ibe0634149ec70e8b921e6b30171664b8690a9c45

[33mcommit aac1ef7f80151bff1be06a32361d9cf6c31ef455[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Wed Jan 27 15:25:42 2016 -0800

    Enable hbd_build to use SSSE3[1;31moptim[mized functions
    
    This commit changes the SSSE3 assembly functions for idct32x32 to
    support highbitdepth build.
    
    On test clip fdJc1_IBKJA.248.webm, this cuts the speed difference
    between hbd and lbd build from between 3-4% to 1-2%.
    
    Change-Id: Ic3390e0113bc1ca5bba8ec80d1795ad31b484fca

[33mcommit 7361ef732b432e153496c30da66081d7e530c7f6[m
Author: Peter de Rivaz <peter.derivaz@gmail.com>
Date:   Mon Dec 14 16:35:29 2015 +0000

    Fix for issue 1114 compile error
    
    In 32-bit build with --enable-shared, there is a lot of
    register pressure and register src_strideq is reused.
    The code needs to use the stack based version of src_stride,
    but this doesn't compile when used in an lea instruction.
    
    This patch also fixes a related segmentation fault caused by the
    implementation using src_strideq even though it has been
    reused.
    
    This patch also fixes the HBD subpel variance tests that fail
    when compiled without disable-[1;31moptim[mizations.
    These failures were caused by local variables in the assembler
    routines colliding with the caller's stack frame.
    
    Change-Id: Ice9d4dafdcbdc6038ad5ee7c1c09a8f06deca362

[33mcommit 99309004bf349f4d66beb2a90e934fb25855b1e9[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 15 15:23:47 2015 +0000

    Fixed interval, fixed Q 1 pass test patch.
    
    For testing implemented a fixed pattern and delta, 1 pass,
    fixed Q, low delay mode.
    
    This has not in any way been tuned or [1;31moptim[mized.
    
    Change-Id: Icf9b57c3bb16cc5c0726d5229009212af36eb6d9

[33mcommit fc50d95b2e576ca7a5420a749d93a5755d479ce0[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Dec 14 12:34:25 2015 +0000

    Fixed interval, fixed Q 1 pass test patch.
    
    For testing implemented a fixed pattern and delta, 1 pass,
    fixed Q, low delay mode.
    
    This has not in any way been tuned or [1;31moptim[mized.
    
    Change-Id: Idf5ee179b277fa15d07a97f14f2ce5bbaae80a04

[33mcommit 27bbfd652d13a516b012db5b553801be4d5887c0[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Dec 11 10:06:43 2015 -0800

    Fix sub8x8 motion search on scaled reference frame
    
    This commit makes the sub8x8 block rate-distortion [1;31moptim[mization
    scheme use precise motion compensated prediction to compute the rd
    cost. It fixes a potential buffer overflow issue related to sub8x8
    motion search on scaled reference frame.
    
    Change-Id: I4274992ef4f54eaacfde60db045e269c13aaa2de

[33mcommit f78b7daec44643b87861e48ea8b0f9a981b7a735[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 30 15:34:57 2015 -0800

    Condition use of minmax in variance partition on speed setting.
    
    For non-rd variance partition: only allow minmax computation
    (which currently has no arm-neon [1;31moptim[mization) for speeds < 8.
    
    Performance loss is small: On RTC set with speed 8, few clips lose ~2/3%,
    average loss is < 1%.
    
    Change-Id: Ia9414f4d0b77dc83c3e73ca8de5d903f64b425ce
For keyword regression:
[33mcommit 72746c079d0b8631dad90f7c172ae19193405571[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jan 4 11:22:51 2017 -0800

    vp9: Set short circuit to level 3 for VGA for speed 8.
    
    vp9: Set short circuit to level 3 for VGA for speed 8. Also change the
    threshold_32x32 to 5/8*thresholds[1] to improve quality [1;31mregression[m
    caused to VGA clips.
    
    Change-Id: Ia1590e91e7cb22be78d5b85013387bb1be4272e3

[33mcommit 421f376568b2b07a43a93fb055f7e2c48d111a0a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 9 09:03:22 2016 -0700

    vp8: Set the skin model to mode 1.
    
    This change was reverted before due to a hangouts encode-time
    [1;31mregression[m investigation. But since then this change has been
    cleared of causing any noticeable [1;31mregression[m.
    
    This mode reduces some false detection, and uses the
    same model as in vp9.
    
    Change-Id: I9c82a748c5f601d0aca9f61ee218abfbd58c62bd

[33mcommit 039f9e08f04bc7919c7db4fe4be93a7ac3cc1f84[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Tue Aug 2 11:01:39 2016 -0700

    change HBD pixel value from uint8_t to uint16_t
    
    This fixes a [1;31mregression[m in 10/12 bit encoding results.
    
    Change-Id: I438877352a41aae0a864a8d9979afe4aa2061d81

[33mcommit 2678aefc4820162aecf17348a6cfde4b3650383f[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jul 6 10:57:15 2016 -0700

    vp9: Choose the scheme for modeling rd for 32x32 based on skin color.
    
    For real time CBR mode, use model_rd_for_sb_y for 32x32 if the sb is
    a skin sb to avoid visual [1;31mregression[m on the slowly moving face.
    
    Refer to the cl: https://chromium-review.googlesource.com/#/c/356020/
    
    Change-Id: I42c36666b2b474ce5ee274239d52ae8ab400fd46

[33mcommit 5fc2d6cb9fb1262880e237bfd6873f7c3c4dd8c9[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jun 29 16:22:12 2016 -0700

    vp9: Change the scheme for modeling rd for 32x32 on newmv_last mode.
    
    For real time CBR mode, use model_rd_for_sb_y for 32x32 if the mode is
    newmv last, which is less aggressive in skipping transform and
    quantization, to avoid quality [1;31mregression[m in some conditions.
    
    Change-Id: Ifa30be587f2a8a4a7f182a172de6ce277c0f8556

[33mcommit 7991241a50f9cf271dcb1063b9fbee0f025eb263[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Jun 24 09:39:27 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality [1;31mregression[m.
    
    PSNR effect on different speed settings:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on speed 7, 2.56% faster on speed8
    gips_stat_WHD, 1mbps: 2.17% faster on speed 7, 1.62% faster on speed8
    
    BUG=webm:1250
    
    Change-Id: I818babce5b8549b4b1a7c3978df8591bffde7173

[33mcommit 5c29ee726e622baf6f950dfe980df0d4c116c1a8[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 20 17:24:26 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality [1;31mregression[m.
    
    PSNR effect on different speed setting:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on speed 7, 2.56% faster on speed8
    gips_stat_WHD, 1mbps: 2.17% faster on speed 7, 1.62% faster on speed8
    
    Change-Id: I902f62def225ea01c145d7e5a93497398b8f5edf

[33mcommit f9c0587200b56285e6847ec88c8ea876b422acc1[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 6 16:30:14 2016 -0700

    vp9: Encoding cycle reduction for speed 8.
    
    1. Skip golden non-zeromv and newmv-last for bsize >= 16x16 if the
    temporal variance obtained from choose_partitioning is very low.
    2. Skip horz and vert INTRA mode for speed 8.
    
    This change works best on the clips with little noise and with some
    motion (e.g. gips_motion which has > 5% speed up). PSNR drop is 1.78%
    on rtc test set, no obvious visual quality [1;31mregression[m found.
    
    Change-Id: Ib43b5b20e67809d03c5a6890818ddff59e1fc94a

[33mcommit bacc67f4a808e488d24fda2e93cfd5fbe0b806a4[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri May 20 13:45:46 2016 -0700

    vp9: Skip some modes when variance is low for big blocks, for 1 pass real-time.
    
    Skip intra-mode and some inter-modes (newmv, nearmv, nearestmv) for
    golden frame if the variance got from choose_partitioning is very low.
    Only for 1 pass real-time CBR mode and bsize >= 32x32, it has ~2.5%
    speed up with less than 0.1% PSNR drop for rtc test set. Don't see
    visual [1;31mregression[m.
    
    Change-Id: I70efbc95a1007231ae36f02c5b2fbf6cd35077ad

[33mcommit 70bdf643d09242bd50f47e415664f2927715ee9d[m
Merge: 8700eed4c 0c60db7de
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 22:15:24 2016 +0000

    Merge "vp9: Fix to quality [1;31mregression[m issue for 1 pass."

[33mcommit 0c60db7def133eb93e9479480f7a019fc6386de0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 12:18:53 2016 -0700

    vp9: Fix to quality [1;31mregression[m issue for 1 pass.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1217
    
    Issue introduced in https://chromium-review.googlesource.com/#/c/339162/.
    The factor on avg_frame_qindex[INTER_FRAME] in that CL, used for q-basis to
    set active_best, can cause the QP to decrease too slowly or get stuck
    in some cases when max-q=63.
    
    Removing that factor fixes the [1;31mregression[m in issue#1217.
    
    Change-Id: I97fe28dca3c2bc2d852b1775f39c62164e032d4f

[33mcommit 15be44a58fb6148f24f60ccb51683301dd7ecd20[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Mar 11 12:15:27 2016 -0800

    vp9: Fix issue in scene/content change detection.
    
    The change https://chromium-review.googlesource.com/#/c/329181/
    also changed behavior for cbr mode, which causes some [1;31mregression[m
    in screenshare test in webrtc.
    
    Resetting the specific change to leave the cbr behavior
    unchanged for now.
    
    Change-Id: I52df158806422f86398e1d2f522e92067d8325eb
For keyword speed:
[33mcommit 4dca92345467fea3c4461152f1847352271ec883[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Wed Dec 21 14:19:25 2016 -0800

    postproc: vpx_mbpost_proc_across_ip_neon
    
    The [1;31mspeed[mup is pretty poor. I would be concerned except the SSE2 is
    worse:
    Existing SSE2 improvement: 22%
    New neon improvement: 35%
    
    BUG=webm:1320
    
    Change-Id: Ied598a261134aa6cbe69f96f58589d2bae17bf62

[33mcommit 316071d79c8f2404a8fe9b9b664510cf91cc40d3[m
Merge: b632626ec 267e73446
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Jan 6 22:38:39 2017 +0000

    Merge "vp9: Enable more aggresive short circuit for [1;31mspeed[m 8."

[33mcommit 267e73446c09a28aee5b361a3d03f55380a9480b[m
Author: Jerome Jiang <jianj@google.com>
Date:   Fri Jan 6 10:06:37 2017 -0800

    vp9: Enable more aggresive short circuit for [1;31mspeed[m 8.
    
    Set short_circuit_low_temp_var to 3 for [1;31mspeed[m 8 for all res.
    No strong visual difference on all clips.
    
    Change-Id: Ia6d9a314291ab1c14d5421bbdd769974083aeb2a

[33mcommit afc8c4836fa711501f81a6d54cf0ffa49a2fb99f[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jan 4 16:19:42 2017 -0800

    vp9: Compute source sad for every superblock when partition copy is on.
    
    The source sad could be used to copy the partition without going into
    choose_partitioning function to [1;31mspeed[m up vp9 encoding. Computing source
    sad takes little time. Speed test on Android and Linux shows little
    encoding time gain (less than 1.4%).
    
    Turned off for now since partition copy is turned off.
    
    Change-Id: I61c9d5b8f22329760cb29a4ee30a7f9c232ce8d3

[33mcommit 72746c079d0b8631dad90f7c172ae19193405571[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jan 4 11:22:51 2017 -0800

    vp9: Set short circuit to level 3 for VGA for [1;31mspeed[m 8.
    
    vp9: Set short circuit to level 3 for VGA for [1;31mspeed[m 8. Also change the
    threshold_32x32 to 5/8*thresholds[1] to improve quality regression
    caused to VGA clips.
    
    Change-Id: Ia1590e91e7cb22be78d5b85013387bb1be4272e3

[33mcommit e7c453b613ffc2baab4b04cc514fd4a0a15c8927[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Dec 15 16:10:30 2016 -0800

    vp9: 1 pass vbr: Skip find_predictors in pickmode when source is altref.
    
    When source frame is altref, we only do zero-mv mode, so we can skip
    the find_predictors(). No change in compression.
    Small [1;31mspeed[m gain, ~1%.
    
    Only affects 1 pass vbr with lookhead altref, for ytlive with
    the macro flag USE_ALTREF_FOR_ONE_PASS on.
    
    Change-Id: I9318c5da8521f017bf54919cd652438b3a6313d1

[33mcommit 3fcd595dfbed102d516080c41778a562dffef53d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Dec 19 14:07:49 2016 -0800

    vp9: Add datarate test for denoiser, for high noise case.
    
    Also breakout the denoiser tests, as the denoiser only
    runs for real-time [1;31mspeed[m >=5.
    
    Change-Id: I921b785860c35e9d1ebfad0833673a98490186c2

[33mcommit 1d5ca84df600ab610d14c0356b038ad4c395a6fd[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Dec 19 10:39:04 2016 -0800

    vp9: Add feature to copy partition from the last frame.
    
    Add feature to copy partition from the last frame.
    The copy is only done under certain conditions that SAD is below threshold.
    Feature is currently disabled, until threshold is tuned.
    Feature will be initially used for Speed 8 (ARM).
    
    Under extreme case of always copying partition for [1;31mspeed[m 8:
    Encode time is reduced by 5.4% on rtc_derf and 7.8% on rtc.
    Overall PSNR reduced by 2.1 on rtc_derf and 0.968 on rtc.
    
    Change-Id: I1bcab515af3088e4d60675758f72613c2d3dc7a5

[33mcommit 076d4bd91ad0ec042924d2772b2002c9e7d3d48b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Dec 7 09:50:27 2016 -0800

    vp9: Fix to crash in svc code.
    
    use_base_mv assumes 2x2 scaling, so fix is to shutoff
    this feature unless spatial scale factors are 2.
    
    Added svc unittest for 2 spatial layers with 5x5 scaling,
    which generates the issue without this fix.
    
    Also fix some settings in svc unittest:
    let the [1;31mspeed[m setting vary (from 5 to 8), and enable static threshold.
    
    BUG=webm:1344
    
    Change-Id: Idfd0a6c633c21b49a0479601506302cfe974e30e

[33mcommit d757d7e998d2e247a6fea424e8cb67e5f2b17951[m
Merge: f63eb66ec 6cc76ec73
Author: James Zern <jzern@google.com>
Date:   Thu Nov 24 03:31:25 2016 +0000

    Merge changes Icc4ead05,Ib019964b,I3b5fd3b3,Ieedadee2
    
    * changes:
      Update vpx_idct4x4_16_add_neon() to pass SingleExtremeCoeff test
      Refine 8-bit 4x4 idct NEON intrinsics
      Add idct [1;31mspeed[m test.
      Update partial_idct_test.cc to support high bitdepth

[33mcommit b6597745f9dcec807b225b67e8069d5a3287e46e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Nov 22 10:10:06 2016 -0800

    vp9: Use more aggressive skip when short_circuit_low_temp_var = 1.
    
    Use the same feature as https://chromium-review.googlesource.com/#/c/411327/,
    but allow it to be used for [1;31mspeed[m  = 6 and 7, where
    short_circuit_low_temp_var = 1.
    
    Speed up of ~2-3% for [1;31mspeed[m 7, with little/no loss in compression.
    
    Change-Id: I263a0f261ad9929034392d68f0153dc6376fdb5f

[33mcommit 45876b455065a6ddba9cd089eb8e680b687ed22e[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Mon Nov 7 17:23:38 2016 -0800

    Add idct [1;31mspeed[m test.
    
    Change-Id: I3b5fd3b36cac1fb3a93e27fd8fd0781c91d412ce

[33mcommit 719f39f44e4a87efc811dcc6a88a6311e36ddb2c[m
Author: Jim Bankoski <jimbankoski@google.com>
Date:   Tue Nov 22 07:31:04 2016 -0800

    vp9-tests : split VpxEncoderThreadTest into two tests.
    
    VpxEncoderThreadTest was taking a very long time for some runs and
    timing out a lot.   This is an attempt to split the test into runs
    that can be run nightly ( [1;31mspeed[ms 2 through 9) and runs that can
    be run weekly ( [1;31mspeed[ms 0-1 ).
    
    Change-Id: Iee6f61a561006d3a30381dd3b52b9a4dce07a70c

[33mcommit 360217a233bf67f78a3ab60a6a36e75b20cef816[m
Author: Jerome Jiang <jianj@google.com>
Date:   Tue Nov 15 10:37:12 2016 -0800

    vp9: Speed 8: More aggresive golden skip for low res.
    
    Add a new, more aggresive short circuit: short_circuit_low_temp_var = 3 to skip
    golden of any mode when variance is lower than threshold for low res.
    This change only affects [1;31mspeed[m = 8, low resolution.
    
    Metrics for avgPSNR/SSIM on rtc_derf (low resolution) show loss of
    0.27/0.31%.
    On Nexus 6, the encoding time is reduced by ~2.3% on average across all
    low-res clips.
    
    Visually little change on rtc_derf clips.
    
    Change-Id: Ia8f7366fc2d49181a96733a380b4dbd7390246ec

[33mcommit eff68a3a4df99b8f475a1e3e5eb842bcb928fe00[m
Author: Jerome Jiang <jianj@google.com>
Date:   Mon Nov 14 10:22:00 2016 -0800

    vp9: Speed 8: Turn off 4x4avg for low-res non-key frames.
    
    Changes only affects [1;31mspeed[m = 8 for low resolutions.
    
    Metrics for avgPSNR/SSIM on rtc_derf (low resolutions) show loss of
    0.5/0.6%.
    On Nexus 6, the encoding time is reduced by ~5.9% on average across all
    low-res clips.
    Visually little/no change on rtc_derf clips.
    
    Change-Id: I68dd50e558d72dcc1af8317d224bfae5e3bd872d

[33mcommit 44f8ee7258c5e9bac9a4e25d265aa34eb47e08fb[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Nov 11 16:10:01 2016 -0800

    Enable asymptotic closed-loop encoding decision
    
    This commit enables asymptotic closed-loop encoding decision for
    the key frame and alternate reference frame. It follows the regular
    rate control scheme, but leaves out additional iteration on the
    updated frame level probability model. It is enabled for [1;31mspeed[m 0.
    
    The compression performance is improved:
    
    lowres 0.2%
    midres 0.35%
    hdres  0.4%
    
    Change-Id: I905ffa057c9a1ef2e90ef87c9723a6cf7dbe67cb

[33mcommit 05ee241493536d534fda46ca336f5f1c442e474f[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Oct 25 14:24:16 2016 -0700

    Add high bitdepth intra prediction optimization [1;31mspeed[m test
    
    BUG=webm:1316
    
    Change-Id: I99feec867d5b8ea06b43cdd3fcd7c90238f5efdb

[33mcommit ee1b3f34c032f6ec8fe2bb0e899ae03234fd98c6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 21 11:11:34 2016 -0700

    vp9: Nonrd variance partition: increase threshold for using 4x4 avg.
    
    In variance partition low resolutions may use varianace based on
    4x4 average for better partitioning.
    Increase the threshold for doing this at [1;31mspeed[m = 8.
    
    Improves [1;31mspeed[m by ~5%, with little loss, < 1%, on RTC_derf set.
    
    Change-Id: Ib5ec420832ccff887a06cb5e1d2c73199b093941

[33mcommit a7d116aa67797b7dc14ad735bb75fe499b0b76ff[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 20 17:02:16 2016 -0700

    vp9: Speed=8 real-time: Keep the bias_golden feature on.
    
    Small/no change in metrics on RTC set, [1;31mspeed[m increase by 2-3%.
    
    Change-Id: Iee997bd7433e8e508216e9267b1c31c5a9aa5121

[33mcommit 4c3d539baa456a37ebd03f11865ea597f4724355[m
Merge: 6c309c1f5 acd21e053
Author: Jerome Jiang <jianj@google.com>
Date:   Sat Oct 15 06:01:40 2016 +0000

    Merge "VP8: Add realtime [1;31mspeed[m to datarate_test.cc"

[33mcommit acd21e053a17cee5b2ed2a590c8c40523e2c1741[m
Author: Jerome Jiang <jianj@jianj0.mtv.corp.google.com>
Date:   Thu Oct 13 15:27:47 2016 -0700

    VP8: Add realtime [1;31mspeed[m to datarate_test.cc
    
    Change-Id: Ia56f0e8dfba20143be3e69666d9184dd3ca5b563

[33mcommit 57c6bf291e41d4e857df621bd3a9d00341a23a02[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 2 17:37:32 2016 -0700

    1 pass vbr: Allow for lookahead alt-ref in real-time mode.
    
    For 1 pass vbr real-time mode:
    Allow for the usage of alt-ref frame when non-zero lag-in-frames is used.
    Use non-filtered alt-ref, and select usage based on fast scene/content
    analysis/detection within the lag of frames.
    
    Positive gains on ytlive set: overall avgPSNR ~3-4%.
    Several clips are up between 5-14%, a few clips are neutral/small change.
    
    Current [1;31mspeed[m decrease is about ~5-10%.
    
    Use the flag USE_ALTREF_FOR_ONE_PASS to enable this feature
    (off by default for now).
    
    Change-Id: I802d2bf3d44f9cf01f6d15c76be9c90192314769

[33mcommit 5e908aff341e9c400f898b3d9c117e0eb63ef6fe[m
Merge: b6277a47c d017548be
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Sep 30 21:42:04 2016 +0000

    Merge "vp9 real-time mode: Change loopfilter [1;31mspeed[m feature at [1;31mspeed[m 8."

[33mcommit d017548be614dfdb79335fc33b729a36dd254f5c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Sep 26 16:52:26 2016 -0700

    vp9 real-time mode: Change loopfilter [1;31mspeed[m feature at [1;31mspeed[m 8.
    
    For real-time mode at [1;31mspeed[m 8: turn off MINIMAL_LF at [1;31mspeed[m 8,
    for non-screen content mode.
    
    Visually better, avgPSNR/SSIM on rtc set go up by ~4-5%.
    Speed decrease of about ~3%.
    
    Change-Id: I8eb69330f02e0ceece1507d43cfc8a049a1d8291

[33mcommit e4ddf9db6a37eee59c079f5ae427643ae3424fcf[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Sep 26 16:20:32 2016 -0700

    Hook up vp8_diamond_search_sad_sse3
    
    The original commit never set any 'specialize' line:
    61311e61039c300ae872ccba22304e9e60dc0205
    
    It appears the sadx4 version of function uses sdx4df calls to [1;31mspeed[m up
    the search. There are no sse3 versions of the sdx4df functions, but
    there are sse2 and msa versions.
    
    There is a neon version of vpx_sad16x16x4d but not any of the smaller
    versions. Perhaps if they existed this function could be expanded to use
    them.
    
    Change-Id: I936d7d6b1a3ff6dcd5a4d2322272708c47cdec13

[33mcommit d9dce2f48eed1368a44c368fa87a506bd89ffec5[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 11:29:20 2016 -0700

    Restore vp8_sixtap_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    performance-wise that uses _u8 and over-reads just a touch.
    
    The store, when unaligned, has a version that is ~25% slower but safe
    when xoffset = 0 (second pass filter only). When the first pass filter
    (or both) are in play, the new version is almost identical in [1;31mspeed[m.
    
    Worst case performance (both filters, unaligned stores) is roughly 3-4x
    faster than C.
    
    BUG=webm:817
    BUG=webm:1273
    
    Change-Id: I1e490e94453e0872151fe0dafb05557463f6247d

[33mcommit bcbc4761fa72117be4ba32889ea79fca94c21956[m
Author: James Zern <jzern@google.com>
Date:   Wed Sep 7 10:51:33 2016 -0700

    vpx_mem.c: remove unnecessary inline
    
    these aren't overly [1;31mspeed[m critical, best to leave it to the compiler.
    
    Change-Id: I231c14abee5b845d7b8e8454832f2feb22c6ce45

[33mcommit 6fc07a217da53554e56321ead7437cc67f627492[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Aug 8 15:08:21 2016 +0100

    Modified resize loop constraints.
    
    Using a tighter resize constraint on undershoot seems to help
    results (especially SSIM) as significant undershoot on a frame
    seems to have more of a damaging impact than overshoot.
    
    This patch has been tuned so that in local testing using the
    derf set it is encode [1;31mspeed[m neutral for [1;31mspeed[m  setting 2.
    
    Average quality result for [1;31mspeed[m 2 (psnr,ssim) were  as follows:-
    
     lowres  0.039,  0.453
     midres  0.249, 0.853
     hdres  0.159, 0.659
     NetFlix -0.241, 0.360
    
    Change-Id: Ie8d3a0d7d6f7ea89d9965d1821be17f8bda85062

[33mcommit 129814fcb487696264199ef4fe18049dd09a8b66[m
Merge: 3a3169be5 635ae8bdc
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Aug 30 16:54:39 2016 +0000

    Merge "Adjust  coefficient optimization  and tx_domain rd [1;31mspeed[m features."

[33mcommit badd32d91417d780d4eee465c212b755a8f1307b[m
Merge: a91fe33c6 dc42f343a
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Aug 26 15:46:45 2016 +0000

    Merge "Add ALLOW_RECODE_FIRST [1;31mspeed[m mode."

[33mcommit dc42f343ae4365d68a096498ecdd8a960414905a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Aug 26 11:43:47 2016 +0100

    Add ALLOW_RECODE_FIRST [1;31mspeed[m mode.
    
    This patch is to address concerns that changes to allow
    recodes on the first frame in each ARF group do not give a
    good enough [1;31mspeed[m quality trade off for [1;31mspeed[m 2. Though the
    average impact  on encode [1;31mspeed[m is 1-2%, for some hard clips
    it is > 5% rise.  For [1;31mspeed[m 1 this is less an issue and for Speed 0
    the previous patch actually  improves [1;31mspeed[m.
    
    Change-Id: Ie1bcefdbfdf846d3f4428590173f621465dffe3a

[33mcommit 635ae8bdc1f5f1fe9e94c2f14144ad4c8750b627[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Aug 18 14:15:25 2016 +0100

    Adjust  coefficient optimization  and tx_domain rd [1;31mspeed[m features.
    
    Previously Tx domain rd was used in all cases above [1;31mspeed[m 0.
    Coefficient optimization was only enabled for best and [1;31mspeed[m 0.
    
    This patch selectively sets these features at other [1;31mspeed[m settings
    based on block complexity.
    
    For the Netflix and HD sets in particular the quality gains are
    large compared to the [1;31mspeed[m hit. At [1;31mspeed[m 1 the average psnr
    gain in the NF set  is > 2.5% with one clip coming in at 18%
    and some points almost 30%.  Average gains for the lower
    resolution test sets are around 1%.
    
    The gains are biggest at low Q so some further optimization
    may be possible.
    
    Change-Id: I340376c7b2a78e5389a34b7ebdc41072808d0576

[33mcommit ef98f49cb003a695361a08e4e392075a6d7ef3d5[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Mon Aug 22 19:46:44 2016 -0700

    Disable split mode in 4k video encoding
    
    Disabled the split mode while encoding 4k video to [1;31mspeed[m
    up the encoder.
    
    Borg test result on 4k set:
    Overall PSNR: +0.029%; SSIM: +0.009%.
    Average encoder [1;31mspeed[mup at [1;31mspeed[m 2 is 2.5%.
    
    Change-Id: I1519c658f07c3ac838affbe5aff0ed9b94f3f8f4

[33mcommit 37169c0bd41ff110d004a0bf27cb218cc68a6ea8[m
Merge: 149d08237 fe488ccef
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Fri Aug 19 23:11:05 2016 +0000

    Merge "Adjust [1;31mspeed[m features for 4k video encoding"

[33mcommit fe488ccefff1730e2b9d0cc16650fc512e5d61b6[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Fri Aug 19 09:30:32 2016 -0700

    Adjust [1;31mspeed[m features for 4k video encoding
    
    Adjusted [1;31mspeed[m 2 features to [1;31mspeed[m up 4k video encoding.
    BDBR results from borg test:
    PSNR: +0.313%; SSIM: +0.268%.
    Average [1;31mspeed[mup: 8.5%
    
    Change-Id: I1e2695a01fb3f3817c1df4480e184c2aed8f2eba

[33mcommit 52db2b1690952edabf15e1ece08dcc2e2ec23f7e[m
Merge: 33dedd062 8be7e572a
Author: Jacky Chen <jackychen@google.com>
Date:   Thu Aug 18 21:21:29 2016 +0000

    Merge "vp9 svc: SVC encoder [1;31mspeed[m up."

[33mcommit 8be7e572a70ebe98693762868e2a72673e74feb9[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Aug 5 11:10:29 2016 -0700

    vp9 svc: SVC encoder [1;31mspeed[m up.
    
    Bias towards base_mv and skip 1/4 pixel motion search when using base mv.
    2~3% [1;31mspeed[m up for 2 spatial layers, 3~5% [1;31mspeed[m up for 3 spatial layers.
    PSNR loss:
    (2 layers) 0.07dB for gips_stationary, 0.04dB for gips_motion;
    (3 layers) 0.07dB for gips_stationary, 0.06dB for gips_motion.
    
    Change-Id: I773acbda080c301cabe8cd259f842bcc5b8bc999

[33mcommit 7eb7d6b22742ed0436f52c7e9dae4ce7d90b0ccd[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Aug 15 10:22:40 2016 -0700

    vp9 non-rd pickmode: Add limit on newmv-last and golden bias.
    
    Add option, for newmv-last, to limit the rd-threshold update for early exit,
    under a source varianace condition.
    This can improve visual quality in low texture moving areas,
    like forehead/faces.
    
    Also add bias against golden to improve the [1;31mspeed[m/fps,
    will little/negligible loss in quality.
    
    Only affects CBR mode, non-svc, non-screen-content.
    
    Change-Id: I3a5229eee860c71499a6fd464c450b167b07534d

[33mcommit 5d881770e59498075218e81244b9a07b774bab5a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 10 14:00:52 2016 +0100

    Change default recode rule for good [1;31mspeed[m 0 and best.
    
    Changes the default recode rule for Speed 0 and best quality
    from ALLOW_RECODE to ALLOW_RECODE_KFARFGF.
    
    Tested on the NF, hdres, midres and lowres test sets, this setting
    when combined with patch I40cb559... now performs "as well" in
    metrics terms (in fact it came out a tiny amount better overall)
    but encode time is 9.6%  faster (measured as the average
    from 27 mid rate local encodes on clips in the derf/lowres set.
    
    Change-Id: I8c781c0cdfa3a9929cd9406d15582fce47d6ae3b

[33mcommit f7032713af6271f7aab16165c437b6d89e4e8f52[m
Author: Jacky Chen <jackychen@google.com>
Date:   Tue Aug 2 15:45:44 2016 -0700

    vp9 svc: Fix a valgrind error.
    
    This error was introduced by the patch:
    8ce67d7 vp9 svc: Enable different [1;31mspeed[m setting for each spatial layer.
    To use svc, svc_param should be cleared to 0 at the beginning.
    
    Change-Id: I222f03ddae8a50e84b4690b78263abb742fae91e

[33mcommit 6fbb4c3061e86f876c9856d0ed292c96f78841b2[m
Author: Jacky Chen <jackychen@google.com>
Date:   Thu Jul 28 13:27:08 2016 -0700

    vp8: Switch skin model to mode 0 to save some cycle.
    
    This change will [1;31mspeed[m up vp8 encoder by 1.5% ~ 2% on linux. No
    much [1;31mspeed[m change on Mac.
    
    Change-Id: Id957f19ddd89805baa2af84c5027d52d9a48553f

[33mcommit 462a7c9f0a62780602d3979c3cfa968e38e45306[m
Merge: 4508eb312 8ce67d714
Author: Jacky Chen <jackychen@google.com>
Date:   Thu Jul 28 20:21:30 2016 +0000

    Merge "vp9 svc: Enable different [1;31mspeed[m setting for each spatial layer."

[33mcommit 8ce67d714a6f1be586dcdd26524756d113b203f5[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jul 13 15:58:11 2016 -0700

    vp9 svc: Enable different [1;31mspeed[m setting for each spatial layer.
    
    This change only affects 1 pass cbr svc mode.
    
    Change-Id: If0da87bb200f7e7762755340c40c8157cc7a16ca

[33mcommit 3a986eac5734d15c24fb4e2421aaebf5f558a0f6[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Jul 11 11:45:52 2016 +0100

    Sample points to reduce encode overhead.
    
    Only noise filter sampled points in first pass to reduce
    any first pass [1;31mspeed[m overhead.
    
    Change-Id: Ic80d4400e59146d1c3332336c4350faf28ff8b17

[33mcommit 44354ee7bfa01caf97e6c0a92c4a39c474fa5a7e[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 12:46:48 2016 -0700

    Use precise context to estimate coeff rate cost
    
    Use the precise context to estimate the zero token cost in trellis
    optimization process. This improves the [1;31mspeed[m 0 coding performance
    by 0.15% for lowres and 0.1% for midres. It improves the [1;31mspeed[m 1
    coding performance by 0.2% for midres and hdres.
    
    Change-Id: I59c7c08702fc79dc4f8534b64ca594da909e2c91

[33mcommit 62aa642d71bbbdc72dc01da4fb0416be550cd2e2[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Jul 6 10:05:51 2016 -0700

    Enable uniform quantization with trellis optimization in [1;31mspeed[m 0
    
    This commit allows the inter prediction residual to use uniform
    quantization followed by trellis coefficient optimization in
    [1;31mspeed[m 0. It improves the coding performance by
    
    lowres 0.79%
    midres 1.07%
    hdres  1.44%
    
    Change-Id: I46ef8cfe042a4ccc7a0055515012cd6cbf5c9619

[33mcommit e357b9efe08eca4c878e2a43dcde4bd4f7fb39a7[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jul 1 16:02:41 2016 -0700

    Support measure distortion in the pixel domain
    
    Use pixel domain distortion metric in [1;31mspeed[m 0. This improves the
    compression performance by 0.3% for both low and high resolution
    test sets.
    
    Change-Id: I5b5b7115960de73f0b5e5d0c69db305e490e6f1d

[33mcommit 8cc525e82b639932870e4666c524420ff2c8536a[m
Author: James Zern <jzern@google.com>
Date:   Fri Jul 1 14:29:04 2016 -0700

    vpx_thread: use native windows cond var if available
    
    BUG=b/29583578
    
    original webp change:
    
    commit 110ad5835ecd66995d0e7f66dca1b90dea595f5a
    Author: James Zern <jzern@google.com>
    Date:   Mon Nov 23 19:49:58 2015 -0800
    
        thread: use native windows cond var if available
    
        Vista / Server 2008 and up. no [1;31mspeed[m difference observed.
    
        Change-Id: Ice19704777cb679b290dc107a751a0f36dd0c0a9
    
    100644 blob 4fc372b7bc6980a9ed3618c8cce5b67ed7b0f412 src/utils/thread.c
    100644 blob 840831185502d42a3246e4b7ff870121c8064791 src/utils/thread.h
    
    Change-Id: Iede7ae8a7184e4b17a4050b33956918fc84e15b5

[33mcommit 8cbd4f87011efff05efab2fd99c18abd5baaaa2a[m
Author: Jacky Chen <jackychen@google.com>
Date:   Thu Jun 23 09:40:49 2016 -0700

    vp9: Increase thr_var for 32x32 blocks in var-based partitioning.
    
    For real-time mode, increase variance threshold for 32x32 blocks in
    var-based partitioning for resolution >= 720p, so that it is more
    likely to stay at 32x32 for high resolution which accelerates the
    encoding [1;31mspeed[m with little/no PSNR drop.
    
    PSNR effect on different [1;31mspeed[m settings:
    [1;31mspeed[m 8 rtc: 0.02 overall PSNR drop, 0.285% SSIM drop
    [1;31mspeed[m 7 rtc: 0.196% overall PSNR increase, 0.066% SSIM increase
    [1;31mspeed[m 5 rtc_derf: no effect.
    
    Speed up:
    gips_motion_WHD, 1mbps: 2.5% faster on [1;31mspeed[m 7, 2.6% faster on [1;31mspeed[m8
    gips_stat_WHD, 1mbps: 4.6% faster on [1;31mspeed[m 7, 5.6% faster on [1;31mspeed[m8
    
    Change-Id: Ie7c33c4d2dd7d09294917e031357fc5476c3a4bb

[33mcommit 7991241a50f9cf271dcb1063b9fbee0f025eb263[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Jun 24 09:39:27 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which [1;31mspeed[ms
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality regression.
    
    PSNR effect on different [1;31mspeed[m settings:
    [1;31mspeed[m 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    [1;31mspeed[m 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    [1;31mspeed[m 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on [1;31mspeed[m 7, 2.56% faster on [1;31mspeed[m8
    gips_stat_WHD, 1mbps: 2.17% faster on [1;31mspeed[m 7, 1.62% faster on [1;31mspeed[m8
    
    BUG=webm:1250
    
    Change-Id: I818babce5b8549b4b1a7c3978df8591bffde7173

[33mcommit 5c29ee726e622baf6f950dfe980df0d4c116c1a8[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 20 17:24:26 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which [1;31mspeed[ms
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual quality regression.
    
    PSNR effect on different [1;31mspeed[m setting:
    [1;31mspeed[m 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    [1;31mspeed[m 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    [1;31mspeed[m 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on [1;31mspeed[m 7, 2.56% faster on [1;31mspeed[m8
    gips_stat_WHD, 1mbps: 2.17% faster on [1;31mspeed[m 7, 1.62% faster on [1;31mspeed[m8
    
    Change-Id: I902f62def225ea01c145d7e5a93497398b8f5edf

[33mcommit 6929ab0ba632b4c3d6225d990c50ea49c415a8f5[m
Merge: 85786a8dd 9e185ed17
Author: Jingning Han <jingning@google.com>
Date:   Mon Jun 20 16:48:22 2016 +0000

    Merge "Refactor optimize_b for [1;31mspeed[m performance"

[33mcommit 85786a8ddb9cccaeaa0ff586cfa3332f6c08c56c[m
Merge: 188420f4f dba1d1a63
Author: Jingning Han <jingning@google.com>
Date:   Mon Jun 20 16:48:01 2016 +0000

    Merge "Port optimize_b [1;31mspeed[m-up from vp10"

[33mcommit 9e185ed177b80be288737bd303b35ab6b9ca08bb[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 17:36:39 2016 -0700

    Refactor optimize_b for [1;31mspeed[m performance
    
    This commit refactors the trellis coefficient optimization process.
    It saves multiplications used to generate the final dequantized
    coefficients. It removes two memset operations on quantized
    and dequantized coefficient sets. This improves the unit [1;31mspeed[m
    by 10%.
    
    Change-Id: I23f47c6e14582520a7f952f03ce8f72183e7f0e6

[33mcommit dba1d1a63dd170fc7d5a2af27abaa95484c4c75f[m
Author: Jingning Han <jingning@google.com>
Date:   Fri Jun 17 17:11:01 2016 -0700

    Port optimize_b [1;31mspeed[m-up from vp10
    
    This commit back ports the [1;31mspeed[m-up from vp10. It improves the
    unit [1;31mspeed[m by 15%.
    
    Change-Id: Ibe8c0e0974b03266d6abd16a41e89c3b91d8db2a

[33mcommit 8e070558b062e1978b6b8a3430b3a155d58a6444[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 15 14:20:32 2016 -0700

    vp9: Adjustments to nonrd-pickmode for vbr
    
    For VBR: (1) allow newmv mode for golden ref to
    select interpolation filter (as in last ref case), and
    (2) don't use the more aggressive tx-skip testing logic for large blocks.
    
    Only affects 1 pass real-time vbr mode ([1;31mspeed[m >= 5).
    
    PSNR/SSIM metrics on ytlive set are all positive, ~0.5-2% gain.
    
    Change-Id: I0ffbb0a9755563a5acd6230c58236e4f19a47266

[33mcommit 7abc05c9af7468ea9ad9df31505181eafaec9341[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jun 15 10:14:14 2016 -0700

    vp9: Add bias to last frame in choose_partitioning.
    
    This change is only for real-time mode if short_circuit_low_temp_var
    is on. Add bias to last frame in choosing ref frame for partitioning,
    when y_sad and y_sad_g are close. It [1;31mspeed[ms up real-time encoding by
    0.5% on some clips with less than 0.1% overall PSNR drop on rtc test set.
    
    Change-Id: I2a2110fe36455f3d8f0fc404aef2228f512e8df8

[33mcommit d5be4a17effb6a02731cf01fb79788a20e818775[m
Merge: 19a4ce904 f9c058720
Author: Jacky Chen <jackychen@google.com>
Date:   Tue Jun 14 15:41:31 2016 +0000

    Merge "vp9: Encoding cycle reduction for [1;31mspeed[m 8."

[33mcommit f9c0587200b56285e6847ec88c8ea876b422acc1[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 6 16:30:14 2016 -0700

    vp9: Encoding cycle reduction for [1;31mspeed[m 8.
    
    1. Skip golden non-zeromv and newmv-last for bsize >= 16x16 if the
    temporal variance obtained from choose_partitioning is very low.
    2. Skip horz and vert INTRA mode for [1;31mspeed[m 8.
    
    This change works best on the clips with little noise and with some
    motion (e.g. gips_motion which has > 5% [1;31mspeed[m up). PSNR drop is 1.78%
    on rtc test set, no obvious visual quality regression found.
    
    Change-Id: Ib43b5b20e67809d03c5a6890818ddff59e1fc94a

[33mcommit 5aeadbb4f62cb10b50722c383b47556c89fc9a07[m
Merge: 77ffea92c 3fc01f95d
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jun 9 00:49:02 2016 +0000

    Merge "vp9: Use nonrd_pick_partition on scene-cut, for [1;31mspeed[m 5 vbr mode."

[33mcommit 3fc01f95da993c6353082af6cb82cd5cdb8824f5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 8 13:03:29 2016 -0700

    vp9: Use nonrd_pick_partition on scene-cut, for [1;31mspeed[m 5 vbr mode.
    
    On scene-cut detected frames (i.e., high_source_sad = 1), use
    nonrd_pick_partition (over choose_part + select_part), as
    the nonrd_pick partitioning is generally better.
    
    Small positive increase in metrics on ytlive set (~0.5 - 1%).
    Negligle overall [1;31mspeed[m decrease, as its only used on scene-cut frames.
    
    Only affects 1 pass vbr mode, [1;31mspeed[m = 5.
    
    Change-Id: I07c89cbdc75f5bb16eb8e0e2773ead0980d2de5c

[33mcommit bacc67f4a808e488d24fda2e93cfd5fbe0b806a4[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri May 20 13:45:46 2016 -0700

    vp9: Skip some modes when variance is low for big blocks, for 1 pass real-time.
    
    Skip intra-mode and some inter-modes (newmv, nearmv, nearestmv) for
    golden frame if the variance got from choose_partitioning is very low.
    Only for 1 pass real-time CBR mode and bsize >= 32x32, it has ~2.5%
    [1;31mspeed[m up with less than 0.1% PSNR drop for rtc test set. Don't see
    visual regression.
    
    Change-Id: I70efbc95a1007231ae36f02c5b2fbf6cd35077ad

[33mcommit bedf1c3af68c2ae9cbbacf5be05fe8b7d40ae6b4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue May 31 09:37:26 2016 -0700

    vp9: Skip computation of best_sad for newmv, unless needed.
    
    For non-rd pickmode:
    best_pred_sad, computed for NEWMV-last, is only used for
    skipping golden non-zero modes. Add condition to avoid this
    computation if not used (i.e, if golden nonzero modes are not used).
    
    And remove code for computing best_pred_sad for NEWMV-golden,
    since that sad is not used.
    
    No change in behavior; small [1;31mspeed[m gain (~1%) for svc encodes.
    
    Change-Id: Ic2cbdef6c4e9a233a57c0db0eeac8ad5fcead366

[33mcommit b29612fbbea5d55726003a3a133d7b66bbb7226b[m
Author: Jacky Chen <jackychen@google.com>
Date:   Sun May 1 16:15:29 2016 -0700

    vp9: Refactor vp9_denoiser_NxM_sse2.
    
    Denoiser is ~1.5% faster in [1;31mspeed[m 6~8.
    
    Change-Id: I7b350f3c50cce6773d9c4eded4c0c1b722d0a5fc

[33mcommit 136c29e3a3fbb0811a5d608b22bb983a8ea08ae1[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Apr 29 15:19:28 2016 -0700

    vp9: Refactor choose_partitioning.
    
    Move skin superblock force split out of this function as well
    as some minor code refactors. Checked bitexact for different [1;31mspeed[m
    settings and different resolutions.
    
    Change-Id: I6078cbe88dd9ce6c0b69470a8a0a8f8d2274161b

[33mcommit 48b81a1a3c0f58aac2962310f40e4efbad7739d1[m
Merge: f81b0000f ba5f7a514
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Tue Apr 12 22:20:12 2016 +0000

    Merge "Increase active map test coverage from RT [1;31mspeed[ms 0-5 to 0-8."

[33mcommit ba5f7a514a6480f593b73c6a59889a2419aba2ee[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Tue Apr 12 11:14:10 2016 -0700

    Increase active map test coverage from RT [1;31mspeed[ms 0-5 to 0-8.
    
    This test takes less than 100 ms for each of [1;31mspeed[ms 6-8.
    
    Change-Id: Ibbeb3004a2607d25dcbf77cb5314ade87809e059

[33mcommit a3a10a323b242dd4b4d99036b2cd3ca59a8b5310[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Mon Apr 11 14:02:34 2016 -0700

    pickmode: only cost the skip flag once per prediction block
    
    RTC [1;31mspeed[m 6:
    File    Match   Avg     BDRate  Low     Mid     High
    OVERALL ✔       -0.040  -0.045  -0.031  -0.084  0.004
    
    Screencast [1;31mspeed[m 6:
    File     Match   Avg     BDRate  Low     Mid     High
    OVERALL ✔       1.115   -0.162  0.203   2.470   0.541
    
    Change-Id: I46bbc11c89301015b5d3eac25294c709f23f0897

[33mcommit f6f544278e0d02f00e9e0e9299011e1703dcc392[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 7 11:57:49 2016 -0700

    vp9: Some adjustments to scene-cut detection.
    
    Change only affects 1 pass vbr mode, [1;31mspeed[m >=5.
    Increase min_thresh, decrease boost, and set a min/max
    value for gf_interval.
    
    Change-Id: I9c1e1a1ab0c5780064eb62714ee39a72ea4d2107

[33mcommit 057c1c4034ba5b9bf360c5c1f600ebc6d0718c3a[m
Author: James Zern <jzern@google.com>
Date:   Wed Mar 30 15:28:42 2016 -0700

    disable vp9_diamond_search_sad_avx
    
    this results in different output than C, observed with 1080p input at
    [1;31mspeed[m 2.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1168
    
    Change-Id: Ie58cf20057f4531d1b1d19c7b7eae9e642587ce5

[33mcommit f94124cf3127795544cd8e1772ebf3d31a80dda0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Mar 25 11:34:56 2016 -0700

    vp9: 1 pass vbr mode at [1;31mspeed[m 5: switch to use mv.search to NSTEP.
    
    Change only affects 1 pass, vbr, [1;31mspeed[m = 5 (real-time mode).
    
    Some improvement for high motion content.
    AvgPSNR/SSIM metrics for ytlive set all up, on average ~2%,
    some clips (high motion ones) up 4/5%.
    
    Encoder [1;31mspeed[m down: on mynintendo_x1.1280_720.y4m: 47fps -> 44fps.
    
    Change-Id: I9e3eaa6392dcb6b5b44ee6f43004f97ba859bc11

[33mcommit a84f1f846e3464a0aaa557c8cd428a6f15b48d32[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Mar 22 12:56:05 2016 -0700

    Increase min-max q range for normal inter frames.
    
    Allow the encode loop to select from a wider range of Q values
    when encoding normal (non arf or kf) frames.
    
    This change is targeted at improving psycho-visual quality in some
    easy sections that are currently not getting enough bits.
    This is likely to be a little worse from a metrics perspective  and may also
    have a small impact on encode [1;31mspeed[m in cases where extra recode
    iterations are triggered.
    
    Change-Id: I667eebf33c753bcbcf8b93596467369e5708b889

[33mcommit e6aebcdf0868246daf99d0fb1cad0bc80109dbb6[m
Merge: 54e5ff00a 55859e842
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Thu Mar 17 16:25:28 2016 +0000

    Merge "Use whole pixel only at [1;31mspeed[m 8 screen content."

[33mcommit ed5d2e71c0ec7d9c89e82eb8aeff4abbb8027ee4[m
Merge: 825e75428 e17f6347b
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Thu Mar 17 16:24:48 2016 +0000

    Merge "Fix using screen content tuning in all the cpu [1;31mspeed[m tests."

[33mcommit e17f6347b93397b17aab660c79d25d2071b69eb9[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 16 21:57:00 2016 -0700

    Fix using screen content tuning in all the cpu [1;31mspeed[m tests.
    
    Change-Id: Ie302283a52c563be0f1a84650f5f29be30d2bbe4

[33mcommit 0271bafb4a037ec4b70567c8ed83a312fd8c0f01[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 16 15:10:42 2016 -0700

    Reuse computation in build_nmv_component_cost_table.
    
    Saves 1% CPU on remoting_perftest with [1;31mspeed[m 8.
    
    Change-Id: I28dc2f602bd3bf5639a40c9f21f5a9833f01d4be

[33mcommit bd924fbd210137f3a1f8a785dfc805696872882b[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 16 15:56:35 2016 -0700

    choose_partitioning: Avoid computing segment_id twice.
    
    1% faster remoting_perftest at [1;31mspeed[m -8.
    
    Change-Id: I78d591e14b8f890c1e69cacb6d490dfeb9c37900

[33mcommit 55859e842806ef172ca4df7468624c224ee08d78[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Mon Mar 14 10:09:57 2016 -0700

    Use whole pixel only at [1;31mspeed[m 8 screen content.
    
    +5.857% BD-RATE on SCREEN_CONTENT
    
    Leaving this off for non-screen content because:
    +25.300% on TWITCH120
    +37.833% BD-RATE on RTC
    
    Change-Id: Ie0a312182d6cc859fb04298e4cd81d02b39e23fe

[33mcommit 26e5014567ffa08a6486da10b0283b88b378cc27[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Mar 11 12:44:36 2016 -0800

    vp9: Switch to model=1 for skin detection.
    
    Very small change in [1;31mspeed[m (within 0.5%),
    somewhat better detection over RTC clips.
    
    Change-Id: I5bf0a7438fa7ccb60b26887125099e3238e5f298

[33mcommit caa8de547f5860bfbb83626811d631dbf6d2b5d1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 24 16:16:44 2016 -0800

    vp9 non-rd pickmode. Some adjustments for vbr mode.
    
    Some adjustments to inter-mode selection for vbr mode.
    Condition some of the bias to low/zero motion on cbr mode, and
    don't use int_pro_motion_estimation for golden ref
    (treat it same as last ref).
    
    Change only affect 1 pass vbr mode, [1;31mspeed[m >=5 (non-rd pickmode).
    
    Encoding time increase within ~5%.
    Avg PSNR/SSIM on RTC set increase by ~2%, all clips up,
    ranging from 0.5 to 4%.
    
    Change-Id: I0048d0104a8816773d91a2b1484d601169d9bad7

[33mcommit 8b47c2662a740b8ecc9da8bc804a9e24631233e6[m
Merge: c83bcb347 74a679de6
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Mar 2 17:20:58 2016 +0000

    Merge "Port "cost_coeff [1;31mspeed[m improvements" to vp9."

[33mcommit 9c0a2a7935c37c6925600770fa2d9ca73375cd73[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 29 16:52:44 2016 -0800

    Port alt reference frame filter improvement to VP9
    
    Use sharp filter to generate motion compensated reference for
    temporal filtering. It improves the average coding performance of
    VP9 [1;31mspeed[m 0:
    derf    0.34%
    hevcmr  0.38%
    stdhd   0.58%
    
    Change-Id: I1772a051be545de8c343055274e5ca0929d19cda

[33mcommit 8d006a16c53e10d481d1df148140ee7c2561460e[m
Author: Jingning Han <jingning@google.com>
Date:   Mon Feb 29 15:20:12 2016 -0800

    Back port partition rate cost estimate fix to VP9
    
    This commit back ports the fix from
    https://chromium-review.googlesource.com/#/c/326940
    
    It corrects the block partition context fetching in rate-distortion
    optimization. It improves the average coding performance of [1;31mspeed[m 0:
    derf    0.098%
    hevcmr  0.102%
    stdhd   0.282%
    
    Change-Id: I8bcc6fe40ba5c6b50a6136daac116dcc738937ec

[33mcommit 41667f4ddb6f0d11b88b426b4e0dc691284a2a0d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 29 16:16:20 2016 -0800

    vp9-datarate unittests: Include coverage up to [1;31mspeed[m 8.
    
    Change-Id: I8529cd04ea4f95d21d83f87d56d6dd882d0a5636

[33mcommit ee5d3d37606430a152f2cd254f7d657b98390954[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Mon Feb 29 15:16:42 2016 -0800

    Don't copy tx_size to all 8x8 MIs in the prediction block.
    
    The double pointer in xd->mi handles this for us.
    
    Cuts encode_suberblock()'s self time in half at rt [1;31mspeed[m 8.
    
    Change-Id: I820dae24efdbf9a140bbeae82e4e2a5850317766

[33mcommit 8062e1016216b074a889b0aa997c8f16c0d23b4c[m
Author: James Zern <jzern@google.com>
Date:   Fri Feb 26 16:53:10 2016 -0800

    Revert "vp9-svc: Fix [1;31mspeed[m issue with source downscaling for spatial layers."
    
    This reverts commit f51f0998e1ca99cd7497ded3642bb27445b1b215.
    
    This causes datarate tests to fail. Some are due to the new default
    keyframe distance, another causes an assert even forcing 9999:
    
    [ RUN      ] VP9/DatarateOnePassCbrSvc.OnePassCbrSvc3SpatialLayers/0
    test_libvpx:
    vpx_dsp/x86/vpx_subpixel_8t_intrin_ssse3.c:853: scaledconvolve2d:
    Assertion `y_step_q4 <= 32' failed.
    
    Change-Id: I4ee4fea97f47e4f1a23b82a62e6afc6280961e38

[33mcommit 74a679de6f66b6a30d7399ae427ce2b85a967824[m
Author: Julia Robson <juliamrobson@gmail.com>
Date:   Fri Feb 26 14:42:25 2016 -0800

    Port "cost_coeff [1;31mspeed[m improvements" to vp9.
    
    About a 5% faster overall encode (perf cycles) at [1;31mspeed[m zero!
    
    Change-Id: Iaf013ba75884415cd824e98349f654ffb1c3ef33

[33mcommit f51f0998e1ca99cd7497ded3642bb27445b1b215[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 25 08:38:08 2016 -0800

    vp9-svc: Fix [1;31mspeed[m issue with source downscaling for spatial layers.
    
    For 1 pass cbr mode: allow for two-stage 1:2 scaling
    (which will use the 1:2 optimized scaler) if the spatial
    layer is 1/4x1/4 of souce.
    
    Without this change, the base layer for 3 spatial layers would
    be using the non-normative scaler which is un-optimized/C code.
    
    Change-Id: Ifcf526ec2aaf3e5fa7924588d9dd8660bf02fb46

[33mcommit 1cab19e9e4cac95c33120d1256ad6128ba4920b7[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Feb 23 17:49:34 2016 -0800

    vp9: Update to scene/content change detection.
    
    Update some parameters and put check on frame size change.
    For 1 pass VBR mode, [1;31mspeed[m >= 5.
    
    Change-Id: If24ed94a21e705ea57d40b9bf235ad079db786fc

[33mcommit 958f372509a7678d787cffeed40e7886a116e27a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 18 12:16:01 2016 -0800

    vp9: 1 pass vbr real-time mode: Adjust gf refresh for scene change.
    
    Use the existing scene/content change detection to better
    update/adjust golden frame refresh.
    
    Change only affects 1 pass real-time vbr mode, [1;31mspeed[m >=5.
    
    Change-Id: I2963a5bb7ca4a19f8cf8511b0a925e502f60e014

[33mcommit 09f9c5d7f90bd19dfc1994926a6e35680ba9545c[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Feb 17 13:39:44 2016 -0800

    Better workaround for Bug 1089.
    
    Don't initialize first pass costs for a number of symbols where first
    pass probabilities aren't initialized.
    
    This brings a 1.22x first pass [1;31mspeed[mup.
    
    https://bugs.chromium.org/p/webm/issues/detail?id=1089
    
    Change-Id: I97438c357bd88f52f5a15c697031cf0c3cc8f510

[33mcommit 89cc68252846478fa7f2d570d96ff93776cefac6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Feb 16 08:40:23 2016 -0800

    vp9-real-time mode: Fix condition for allowing reference masking.
    
    Add frame-level condition for reference masking: under external or
    internal dynamic resize, allow for reference masking if none of
    the references have been scaled.
    Peviously, reference masking was turned off for the stream if dynamic
    resize feature was enabled or an external resize event occurred.
    
    reference_masking gives [1;31mspeed[m up with little/no loss in compression.
    For [1;31mspeed[m 7 on rtc set: encoding time decreases by about 5-7%,
    avgPSNR/SSIM goes down ~0.2%.
    
    Change-Id: Ie4444577451ef954414d8fb4b2c99d65cadf1746

[33mcommit acc592b35abdb0e2ad60ba11bbdbcd0f08e8b4e8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 10 15:18:26 2016 -0800

    vp9 resize_test: Enable resize_allowed in real-time ExternalResize test.
    
    For dynamic resizing (whether the new codec size is determined internally
    or externally set by user), we should for now keep rc.resize_allowed enabled.
    This prevent the use of referene_masking for real-time mode
    (in set_rt_[1;31mspeed[m_feature()).
    
    Change-Id: Ibb7c3ff35be88afdf1a3c6db6693521766f177a3

[33mcommit f28ea3e830a2447bc9a3813c302f36594d1376d3[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Mon Feb 8 15:59:17 2016 -0800

    Explicitly set tx_type for sub8x8 blocks
    
    Fixes an issue where the tx_type was not set correctly for
    sub8x8 inter and intra blocks. In the current syntax, for
    sub8x8 blocks, there is still a single tx_type that is
    transmitted. Ideally, this should be searched for the best
    rd performance, albeit at the expense of encode [1;31mspeed[m.
    For now, we just set it to DCT_DCT. Previously it was left
    incorrectly as what was used for the previous non sub8x8
    block.
    
    derflr: BDRATE -0.277%
    
    Change-Id: If76ba903bfbfd4d374cf1ac7d1daee50e92f0edd

[33mcommit bcce658d3159be8435a557f26985e4d3f7b54b40[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Feb 3 11:07:43 2016 -0800

    Use precise rate cost estimate for skip block mode
    
    It improves the compression performance of VP9 by 0.1% across all
    test sets. No [1;31mspeed[m change is observed.
    
    Change-Id: I59338c5c9e67bae22188f35fc3afbfe2a6bba6b0

[33mcommit 734dc36173769bd0334b58b2173da4ece1ae1cf5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 1 11:52:49 2016 -0800

    vp9: Add flag to control usage of skin detection.
    
    Set off as default; on for 1 pass cbr mode, [1;31mspeed[m >=5, non-screen-content.
    
    Change-Id: I03f2497e4028b354fd83b8a7d0e072c2a6bec878

[33mcommit b229710811f618247f712e4567b8949ec696ce0b[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Thu Jan 28 16:29:29 2016 -0800

    SSSE3 idct8x8 functions for highbitdpeth build
    
    This commit changes SSSE3 optimized idct8x8 functions to work with
    highbitdepth build.
    
    With this commit and the previous one that enabled SSSE3 idct32x32
    functions, tests showed virtually no difference on decoding [1;31mspeed[m for
    file fdJc1_IBKJA.248.webm for the build with -enable-vp9-highbitdpeth
    option and the build without the option.
    
    Change-Id: Ibe0634149ec70e8b921e6b30171664b8690a9c45

[33mcommit aac1ef7f80151bff1be06a32361d9cf6c31ef455[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Wed Jan 27 15:25:42 2016 -0800

    Enable hbd_build to use SSSE3optimized functions
    
    This commit changes the SSSE3 assembly functions for idct32x32 to
    support highbitdepth build.
    
    On test clip fdJc1_IBKJA.248.webm, this cuts the [1;31mspeed[m difference
    between hbd and lbd build from between 3-4% to 1-2%.
    
    Change-Id: Ic3390e0113bc1ca5bba8ec80d1795ad31b484fca

[33mcommit 27c13712c9c5d665ee84d8753255a23257c43600[m
Merge: be916257b 7da6324ca
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Sat Jan 23 02:04:37 2016 +0000

    Merge "Short circuit flat blocks when coding screen content at realtime [1;31mspeed[m."

[33mcommit 7da6324cab32d8080f497c912107f94b661a866e[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Jan 20 14:28:09 2016 -0800

    Short circuit flat blocks when coding screen content at realtime [1;31mspeed[m.
    
    In inter mode search skip all modes except NEARESTMV and DC_PRED.
    
    10% less encode latency for large frames using the chromium remoting_perftests.
    
    +0.313% BDRATE on the screencast set at [1;31mspeed[m -6.
    
    Change-Id: Ib97a39dd8bcdeab545509e0e02d78ce7033f8c63

[33mcommit 269428e35c3312233ff0ff66bda5752f70a274f6[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Fri Jan 15 14:32:52 2016 -0800

    Tie the bit cost scale to a define.
    
    This is a pure-refactor in preparation to potentially raise the bit-cost
    resolution.
    
    Verified at good [1;31mspeed[m 0 and rt [1;31mspeed[m -6.
    
    Change-Id: I5347e6e8c28a9ad9dd0aae1d76a3d0f3c2335bb9

[33mcommit ff0107f60dbddec82d7d7feacd1c9a3ff9ab4a51[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Jan 6 18:27:37 2016 -0800

    Amend and improve VP8 multithreading implementation
    
    There are flaws in current implementation of VP8 multithreading encoder
    and decoder as reported in the following issue:
    https://code.google.com/p/chromium/issues/detail?id=158922
    
    Although the data race warnings are harmless, and wouldn't cause real
    problems while encoding and decoding videos, it is better to fix the
    warnings so that VP8 code could pass the TSan test.
    
    To synchronize the thread-shared data access and maintain the [1;31mspeed[m
    (i.e. decoding [1;31mspeed[m), use multiple mutexes based on mb_rows to reduce
    the number of synchronizations needed, make the reads and writes of
    the shared data protected, and reduce the number of mb_col writes by
    nsync times.
    
    The decoder [1;31mspeed[m tests showed < 3% [1;31mspeed[m loss while using 2 ~ 4
    threads.
    
    Change-Id: Ie296defffcd86a693188b668270d811964227882

[33mcommit f075fdc474898329eaa37ccc47433d6ad45792de[m
Merge: 8f8a3b6a7 c8a2c31ec
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Dec 18 17:45:49 2015 +0000

    Merge "Non-rd [1;31mspeed[m >=5: Include H/V intra for bsize=16x16."

[33mcommit c8a2c31ec14b1710cefe51840fce709841ad0945[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Dec 17 17:13:01 2015 -0800

    Non-rd [1;31mspeed[m >=5: Include H/V intra for bsize=16x16.
    
    H/V intra mode was only enabled for bsize < 16x16,
    enable it also for bsize=16x16.
    
    Metrics are neutral with this change:
    Overall very small gain (0.1%), small visual gain on some RTC clips.
    
    Change-Id: Ib2d7a44382433bfc11cf324aa3cc5c382ea9e088

[33mcommit c760c33b993c26376631474a54f2f04a58aaf8a2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Dec 7 12:23:56 2015 -0800

    SVC 1 pass mode: Constrain inter mode search within superframe.
    
    Keep track of frame indexes for the references, and
    constrain inter mode search for reference with same
    temporal alignment.
    
    Improves [1;31mspeed[m by about ~15%, no noticeable loss in
    compression performance.
    
    Change-Id: I5c407a8acca921234060c4fcef4afd7d734201c8

[33mcommit d4440614ae4534f68d94bb88c05f35c86624b38f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Dec 9 12:26:48 2015 -0800

    Non-rd variance partition: Adjustments to reduce dragging artifact.
    
    For non-rd variannce partition, [1;31mspeed[m >= 5:
    Adjustments to reduce dragging artifcat of background area near
    slow moving boundary.
    
    -Decrease base threshold under low source noise conditions.
    -Add condition to split 64x64/32x32 based on average variances
    of lower level blocks.
    
    PSNR/SSIM metrics go down ~0.7/0.9% on average on RTC set.
    Visually helps to reduce dragging artifact on some rtc clips.
    
    Change-Id: If1f0a1aef1ddacd67464520ca070e167abf82fac

[33mcommit c90a8a1a43929d160567d37eab8df4b63f501d50[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Wed Dec 9 18:12:52 2015 -0800

    SSE2 based h_predictor_32x32
    
    Relocate the function from SSSE3 to SSE2, Unroll loop from 16 to 8,
    and reduce mem access to left.
    Speed up by single digit in ./test_intra_pred_[1;31mspeed[m on big core
    machines.
    
    Change-Id: I2b7fc95ffc0c42145be2baca4dc77116dff1c960

[33mcommit ece4fd5d2247c9512b31a93dd593de567beaf928[m
Author: Jingning Han <jingning@google.com>
Date:   Wed Dec 9 10:10:17 2015 -0800

    Backport temporal filter approach to VP9
    
    This commit enables the new temporal filter system for VP9. For
    [1;31mspeed[m 1, it improves the compression performance:
    derf  0.54%
    stdhd 1.62%
    
    Change-Id: I041760044def943e464345223790d4efad70b91e

[33mcommit 3dc19feb29e2a8354a6103cb2b5e3a3a9c44eb18[m
Merge: 44fe73ec3 a046ba21d
Author: James Zern <jzern@google.com>
Date:   Wed Dec 9 01:39:45 2015 +0000

    Merge changes Id3c6cf5c,I7970575e,If3253a87
    
    * changes:
      test.mk: simplify vp8/9 checks
      test.mk: regroup white box tests
      test.mk: enable test_intra_pred_[1;31mspeed[m unconditionally

[33mcommit 4e692bbee29d1566e43ed4499249651d4c01f9c4[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 8 15:48:24 2015 +0000

    Changes to exhaustive motion search.
    
    This change has been imported from VP9 and
    alters the nature and use of exhaustive motion search.
    
    Firstly any exhaustive search is preceded by a normal step search.
    The exhaustive search is only carried out if the distortion resulting
    from the step search is above a threshold value.
    
    Secondly the simple +/- 64 exhaustive search is replaced by a
    multi stage mesh based search where each stage has a range
    and step/interval size. Subsequent stages use the best position from
    the previous stage as the center of the search but use a reduced range
    and interval size.
    
    For example:
      stage 1: Range +/- 64 interval 4
      stage 2: Range +/- 32 interval 2
      stage 3: Range +/- 15 interval 1
    
    This process, especially when it follows on from a normal step
    search, has shown itself to be almost as effective as a full range
    exhaustive search with step 1 but greatly lowers the computational
    complexity such that it can be used in some cases for [1;31mspeed[ms 0-2.
    
    This patch also removes a double exhaustive search for sub 8x8 blocks
    which also contained  a bug (the two searches used different distortion
    metrics).
    
    For best quality in my test animation sequence this patch has almost
    no impact on quality but improves encode [1;31mspeed[m by more than 5X.
    
    Restricted use in good quality [1;31mspeed[ms 0-2 yields significant quality gains
    on the animation test of 0.2 - 0.5 db with only a small impact on encode
    [1;31mspeed[m. On most natural video clips, however, where the step search
    is performing well, the quality gain and [1;31mspeed[m impact are small.
    
    Change-Id: Iac24152ae239f42a246f39ee5f00fe62d193cb98

[33mcommit e86c7c863e465a2f532cc281ea73392b72ba5c78[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Wed Nov 25 17:12:20 2015 -0800

    Speed up h_predictor_16x16
    
    Relocate the function from SSSE3 to SSE2, Unroll loop from 8 to 4,
    and reduce mem access to left.
    Speed up by >20% in ./test_intra_pred_[1;31mspeed[m.
    
    Change-Id: Ie48229c2e32404706b722442942c84983bda74cc

[33mcommit da3f08fac3f35a4d0a6f2d170ba5a27e9719eb73[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Wed Nov 25 12:28:39 2015 -0800

    Speed up h_predictor_8x8
    
    Relocate the function from SSSE3 to SSE2, Unroll loop from 4 to 2,
    and reduce mem access to left.
    Speed up by >20% in ./test_intra_pred_[1;31mspeed[m.
    
    Change-Id: Ib9f1846819783b6e05e2a310c930eb844b2b4d2e

[33mcommit 623e988addfa8add7a21c69aa893ba42f7d5236e[m
Merge: f70095076 9d29d7628
Author: Jian Zhou <zhoujian@google.com>
Date:   Wed Dec 2 18:49:00 2015 +0000

    Merge "SSE2 [1;31mspeed[m up of  h_predictor_4x4"

[33mcommit c7fae5d893dbced3f4c512ae9a91404c8d29f9d2[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Mon Nov 30 17:46:40 2015 -0800

    Speed up tm_predictor_16x16
    
    Reduce mem access to left. Speed up by 10% in ./test_intra_pred_[1;31mspeed[m
    with the same instruction size.
    
    Change-Id: Ia33689d62476972cc82ebb06b50415aeccc95d15

[33mcommit f78b7daec44643b87861e48ea8b0f9a981b7a735[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 30 15:34:57 2015 -0800

    Condition use of minmax in variance partition on [1;31mspeed[m setting.
    
    For non-rd variance partition: only allow minmax computation
    (which currently has no arm-neon optimization) for [1;31mspeed[ms < 8.
    
    Performance loss is small: On RTC set with [1;31mspeed[m 8, few clips lose ~2/3%,
    average loss is < 1%.
    
    Change-Id: Ia9414f4d0b77dc83c3e73ca8de5d903f64b425ce

[33mcommit 9d29d7628062d8db6795c73eccbbbf2c3df41e00[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Tue Nov 24 12:16:05 2015 -0800

    SSE2 [1;31mspeed[m up of  h_predictor_4x4
    
    Relocate h_predictor_4x4 from SSSE3 to SSE2 with XMM registers.
    Speed up by ~25% in ./test_intra_pred_[1;31mspeed[m.
    
    Change-Id: I64e14c13b482a471449be3559bfb0da45cf88d9d

[33mcommit 1138b986c96c7164f8ebe7c44393c8380c38253d[m
Author: James Zern <jzern@google.com>
Date:   Tue Nov 24 18:42:20 2015 -0800

    test.mk: enable test_intra_pred_[1;31mspeed[m unconditionally
    
    vpx_dsp is currently included in all configurations
    
    Change-Id: If3253a87d27f3e1abc94fbfe76f978c1172f3762

[33mcommit f4621c5c8d733cfd47d0396e7e50677857998770[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Thu Nov 19 18:57:36 2015 -0800

    Speed up tm_predictor_8x8
    
    Left neighbor read from memory only once.
    Speed up by ~20% in ./test_intra_pred_[1;31mspeed[m.
    
    Change-Id: Ia1388630df6fed0dce9a6eeded6cb855bbc43505

[33mcommit d76032ae87e535be5b924d9e88bbd67189380534[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Thu Nov 19 11:34:22 2015 -0800

    Speed up h_predictor_4x4
    
    Modify h_predictor_4x4 with XMM registers.
    Speed up by ~25% in ./test_intra_pred_[1;31mspeed[m.
    
    Change-Id: Id01c34c48e75b9d56dfc2e93af12cf0c0326a279

[33mcommit 79b68626aeabada0eb92be19a7e70c1830a9f066[m
Author: Jian Zhou <zhoujian@google.com>
Date:   Fri Nov 13 18:42:48 2015 -0800

    Speed up  tm_predictor_4x4
    
    tm_predictor_4x4 is implemented with SSE2 using XMM registers.
    Speed up by ~25% in ./test_intra_pred_[1;31mspeed[m.
    
    Change-Id: I25074b78d476a2cb17f81cf654bdfd80df2070e0

[33mcommit 8ba98516fd8df6ee9275c4e68ec0663ad5b6848c[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Nov 17 16:20:20 2015 +0000

    Changes to best quality settings.
    
    Small changes to the best quality default [1;31mspeed[m trade off.
    Some [1;31mspeed[mup settings are worth while even for best quality as they
    have only a very small impact on quality but a significant impact on
    encode time.
    
    These changes give as much as a further 50-60% increase in encode
    [1;31mspeed[m for my test animations clip with minimal impact on quality.
    
    For this sequence these changes improve the best quality encode  [1;31mspeed[m
    to about the same level as good quality [1;31mspeed[m 0 in Q3 2015 whilst
    retaining the large quality gain of over 1 db
    
    For many natural videos though the quality difference from good 0
    to best is much smaller.
    
    Change-Id: I28b3840009d77e129817a78a7c41e29cb03e1132

[33mcommit 0149fb3d6b24f1df7f215ca12a2d8c8f70fd64f3[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Oct 14 10:38:49 2015 +0100

    Changes to exhaustive motion search.
    
    This change alters the nature and use of exhaustive motion search.
    
    Firstly any exhaustive search is preceded by a normal step search.
    The exhaustive search is only carried out if the distortion resulting
    from the step search is above a threshold value.
    
    Secondly the simple +/- 64 exhaustive search is replaced by a
    multi stage mesh based search where each stage has a range
    and step/interval size. Subsequent stages use the best position from
    the previous stage as the center of the search but use a reduced range
    and interval size.
    
    For example:
      stage 1: Range +/- 64 interval 4
      stage 2: Range +/- 32 interval 2
      stage 3: Range +/- 15 interval 1
    
    This process, especially when it follows on from a normal step
    search, has shown itself to be almost as effective as a full range
    exhaustive search with step 1 but greatly lowers the computational
    complexity such that it can be used in some cases for [1;31mspeed[ms 0-2.
    
    This patch also removes a double exhaustive search for sub 8x8 blocks
    which also contained  a bug (the two searches used different distortion
    metrics).
    
    For best quality in my test animation sequence this patch has almost
    no impact on quality but improves encode [1;31mspeed[m by more than 5X.
    
    Restricted use in good quality [1;31mspeed[ms 0-2 yields significant quality gains
    on the animation test of 0.2 - 0.5 db with only a small impact on encode
    [1;31mspeed[m. On most clips though the quality gain and [1;31mspeed[m impact are small.
    
    Change-Id: Id22967a840e996e1db273f6ac4ff03f4f52d49aa

[33mcommit 5eefd3ebfdf61f76676de4f86e128e3d101311a2[m
Author: Geza Lore <gezalore@gmail.com>
Date:   Wed Oct 28 14:35:04 2015 +0000

    Add AVX vectorized vp9_diamond_search_sad
    
    This function now has an AVX intrinsics version which is about 80%
    faster compared to the C implementation. This provides a 2-4% total
    [1;31mspeed[m-up for encode, depending on encoding parameters. The function
    utilizes 3 properties of the cost function lookup table, constructed
    in 'cal_nmvjointsadcost' and 'cal_nmvsadcosts'.
    For the joint cost:
      - mvjointsadcost[1] == mvjointsadcost[2] == mvjointsadcost[3]
    For the component costs:
      - For all i: mvsadcost[0][i] == mvsadcost[1][i]
            (equal per component cost)
      - For all i: mvsadcost[0][i] == mvsadcost[0][-i]
            (Cost function is even)
    These must hold, otherwise the AVX version of the function cannot be used.
    
    Change-Id: I6c2791d43022822a9e6ab43cd124a773946d0bdc

[33mcommit bd6bf2596957b722ee5d7d789e0fedb9bf86435e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 9 13:36:56 2015 -0800

    Add bias to zero/small motion for noisy source.
    
    Change is only for real-time mode, [1;31mspeed[m >= 5, and non-screen content mode.
    Add bias to zero/low motion for big blocks, if noise estimation
    is enabled and noise level is above threshold.
    
    Change-Id: I3a0a4608ede6aa535bda6eca528d20f8aba738e7

[33mcommit 498fd551fde9316c5a95ebaaa5e729d4596d2b0a[m
Merge: d1a7c1032 718654848
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 9 19:29:35 2015 +0000

    Merge "Use same bias (against non-zero mv for big blocks) for [1;31mspeed[m 5."

[33mcommit 718654848aa0fee41c37b50e4ff611302a7e4e06[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 9 10:03:27 2015 -0800

    Use same bias (against non-zero mv for big blocks) for [1;31mspeed[m 5.
    
    Use same setting for [1;31mspeed[m 5 (as it is for [1;31mspeed[m > 5).
    Change is only for real-time (non-rd) mode.
    
    Change-Id: I830250eac654328373cb318baa89d4f0e63942e1

[33mcommit f1342a7b070ef61b9fbdf03e899ac2107cfcb6bd[m
Author: Geza Lore <gezalore@gmail.com>
Date:   Wed Oct 28 14:35:04 2015 +0000

    Add AVX vectorized vp9_diamond_search_sad
    
    This function now has an AVX intrinsics version which is about 80%
    faster compared to the C implementation. This provides a 2-4% total
    [1;31mspeed[m-up for encode, depending on encoding parameters. The function
    utilizes 3 properties of the cost function lookup table, constructed
    in 'cal_nmvjointsadcost' and 'cal_nmvsadcosts'.
    For the joint cost:
      - mvjointsadcost[1] == mvjointsadcost[2] == mvjointsadcost[3]
    For the component costs:
      - For all i: mvsadcost[0][i] == mvsadcost[1][i]
            (equal per component cost)
      - For all i: mvsadcost[0][i] == mvsadcost[0][-i]
            (Cost function is even)
    These must hold, otherwise the AVX version of the function cannot be used.
    
    Change-Id: I184055b864c5a2dc37b2d8c5c9012eb801e9daf6

[33mcommit 04a99cb36bb6a3d24de0d99ac621e0313ea759a6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Oct 30 11:51:06 2015 -0700

    Bias against non-zero mv for large blocks.
    
    Change is only for real-time mode, [1;31mspeed[m > 5, and non-screen content mode.
    Bias is based on block size and motion vector level (motion above some threshold).
    
    Helps to improves stability in background from lightning changes.
    PSNR/SSIM metrics on RTC set almost no change/neutral (within +/- 0.1).
    
    Change-Id: I7eac13c1ae10be4ab1f40acc7f9f1df5653ece9d

[33mcommit e085fb643fb6f1801689740eaedb07f5fbd1c620[m
Author: Hui Su <huisu@google.com>
Date:   Fri Oct 30 17:15:49 2015 -0700

    Generate intra prediction reference values only when necessary
    
    This can help increase encoding [1;31mspeed[m substantially.
    
    Change-Id: Id0c009146e6e74d9365add71c7b10b9a57a84676
For keyword quality:
[33mcommit 72746c079d0b8631dad90f7c172ae19193405571[m
Author: Jerome Jiang <jianj@google.com>
Date:   Wed Jan 4 11:22:51 2017 -0800

    vp9: Set short circuit to level 3 for VGA for speed 8.
    
    vp9: Set short circuit to level 3 for VGA for speed 8. Also change the
    threshold_32x32 to 5/8*thresholds[1] to improve [1;31mquality[m regression
    caused to VGA clips.
    
    Change-Id: Ia1590e91e7cb22be78d5b85013387bb1be4272e3

[33mcommit d793950ec8fe8dd445c3215a44c5d0842606bfe1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 21 16:37:32 2016 -0800

    vp9: Adjust cyclic refresh parameters for low bitrates.
    
    Increase the motion threshold and qp-delta for segment#2 boost.
    This can increase the frame-drop at low bitrates, but generally
    better spatial [1;31mquality[m.
    
    Only affects real-time mode with aq-mode=3, at very low bitrates.
    
    Change-Id: I5ccb784667f70d0c27d369806b93b1f93d5605d1

[33mcommit c327b3f0b04f9d99756d0ef208b2d9e025958e64[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Tue Oct 25 10:47:21 2016 -0700

    Modify the encoder multi-thread unit test
    
    Modified the encoder multi-thread test so that it included cpu-used=0 and
    frame-parallel=0.
    
    frame_parallel_decoding_mode is 1 by default, which disables probability
    updating and gives lower encoding [1;31mquality[m. Current VP9 multi-threading
    encoder and decoder support probability updating. To test this part, we
    should turn on it in the unit test, namely, setting frame-parallel to 0.
    
    Change-Id: Ia1f86e01f0de628f50d819ae31509de3e1b6c755

[33mcommit 6fc07a217da53554e56321ead7437cc67f627492[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Aug 8 15:08:21 2016 +0100

    Modified resize loop constraints.
    
    Using a tighter resize constraint on undershoot seems to help
    results (especially SSIM) as significant undershoot on a frame
    seems to have more of a damaging impact than overshoot.
    
    This patch has been tuned so that in local testing using the
    derf set it is encode speed neutral for speed  setting 2.
    
    Average [1;31mquality[m result for speed 2 (psnr,ssim) were  as follows:-
    
     lowres  0.039,  0.453
     midres  0.249, 0.853
     hdres  0.159, 0.659
     NetFlix -0.241, 0.360
    
    Change-Id: Ie8d3a0d7d6f7ea89d9965d1821be17f8bda85062

[33mcommit dc42f343ae4365d68a096498ecdd8a960414905a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Aug 26 11:43:47 2016 +0100

    Add ALLOW_RECODE_FIRST speed mode.
    
    This patch is to address concerns that changes to allow
    recodes on the first frame in each ARF group do not give a
    good enough speed [1;31mquality[m trade off for speed 2. Though the
    average impact  on encode speed is 1-2%, for some hard clips
    it is > 5% rise.  For speed 1 this is less an issue and for Speed 0
    the previous patch actually  improves speed.
    
    Change-Id: Ie1bcefdbfdf846d3f4428590173f621465dffe3a

[33mcommit 635ae8bdc1f5f1fe9e94c2f14144ad4c8750b627[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Aug 18 14:15:25 2016 +0100

    Adjust  coefficient optimization  and tx_domain rd speed features.
    
    Previously Tx domain rd was used in all cases above speed 0.
    Coefficient optimization was only enabled for best and speed 0.
    
    This patch selectively sets these features at other speed settings
    based on block complexity.
    
    For the Netflix and HD sets in particular the [1;31mquality[m gains are
    large compared to the speed hit. At speed 1 the average psnr
    gain in the NF set  is > 2.5% with one clip coming in at 18%
    and some points almost 30%.  Average gains for the lower
    resolution test sets are around 1%.
    
    The gains are biggest at low Q so some further optimization
    may be possible.
    
    Change-Id: I340376c7b2a78e5389a34b7ebdc41072808d0576

[33mcommit 7eb7d6b22742ed0436f52c7e9dae4ce7d90b0ccd[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Aug 15 10:22:40 2016 -0700

    vp9 non-rd pickmode: Add limit on newmv-last and golden bias.
    
    Add option, for newmv-last, to limit the rd-threshold update for early exit,
    under a source varianace condition.
    This can improve visual [1;31mquality[m in low texture moving areas,
    like forehead/faces.
    
    Also add bias against golden to improve the speed/fps,
    will little/negligible loss in [1;31mquality[m.
    
    Only affects CBR mode, non-svc, non-screen-content.
    
    Change-Id: I3a5229eee860c71499a6fd464c450b167b07534d

[33mcommit 5d881770e59498075218e81244b9a07b774bab5a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Aug 10 14:00:52 2016 +0100

    Change default recode rule for good speed 0 and best.
    
    Changes the default recode rule for Speed 0 and best [1;31mquality[m
    from ALLOW_RECODE to ALLOW_RECODE_KFARFGF.
    
    Tested on the NF, hdres, midres and lowres test sets, this setting
    when combined with patch I40cb559... now performs "as well" in
    metrics terms (in fact it came out a tiny amount better overall)
    but encode time is 9.6%  faster (measured as the average
    from 27 mid rate local encodes on clips in the derf/lowres set.
    
    Change-Id: I8c781c0cdfa3a9929cd9406d15582fce47d6ae3b

[33mcommit 5fc2d6cb9fb1262880e237bfd6873f7c3c4dd8c9[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jun 29 16:22:12 2016 -0700

    vp9: Change the scheme for modeling rd for 32x32 on newmv_last mode.
    
    For real time CBR mode, use model_rd_for_sb_y for 32x32 if the mode is
    newmv last, which is less aggressive in skipping transform and
    quantization, to avoid [1;31mquality[m regression in some conditions.
    
    Change-Id: Ifa30be587f2a8a4a7f182a172de6ce277c0f8556

[33mcommit 7991241a50f9cf271dcb1063b9fbee0f025eb263[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Jun 24 09:39:27 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual [1;31mquality[m regression.
    
    PSNR effect on different speed settings:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on speed 7, 2.56% faster on speed8
    gips_stat_WHD, 1mbps: 2.17% faster on speed 7, 1.62% faster on speed8
    
    BUG=webm:1250
    
    Change-Id: I818babce5b8549b4b1a7c3978df8591bffde7173

[33mcommit 5c29ee726e622baf6f950dfe980df0d4c116c1a8[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 20 17:24:26 2016 -0700

    vp9: Change the scheme for modeling rd for bsize 32x32.
    
    For real-time CBR mode, use model_rd_for_sb_y_large instead of
    model_rd_for_sb_y for 32x32 block. In the former model, transform
    might be skipped more aggressively in some condtions, which speeds
    up encoding time with only a little PSNR/SSIM drop on rtc test set.
    No obvious visual [1;31mquality[m regression.
    
    PSNR effect on different speed setting:
    speed 8 rtc:  0.129% overall PSNR drop, 0.137% SSIM drop
    speed 7 rtc:  0.135% overall PSNR drop, 0.062% SSIM drop
    speed 5 rtc_derf: 0.105% overall PSNR drop, 0.095% SSIM drop
    
    Speed up:
    gips_motion_WHD, 1mbps: 3.29% faster on speed 7, 2.56% faster on speed8
    gips_stat_WHD, 1mbps: 2.17% faster on speed 7, 1.62% faster on speed8
    
    Change-Id: I902f62def225ea01c145d7e5a93497398b8f5edf

[33mcommit f9c0587200b56285e6847ec88c8ea876b422acc1[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Jun 6 16:30:14 2016 -0700

    vp9: Encoding cycle reduction for speed 8.
    
    1. Skip golden non-zeromv and newmv-last for bsize >= 16x16 if the
    temporal variance obtained from choose_partitioning is very low.
    2. Skip horz and vert INTRA mode for speed 8.
    
    This change works best on the clips with little noise and with some
    motion (e.g. gips_motion which has > 5% speed up). PSNR drop is 1.78%
    on rtc test set, no obvious visual [1;31mquality[m regression found.
    
    Change-Id: Ib43b5b20e67809d03c5a6890818ddff59e1fc94a

[33mcommit fd38ef4b99845d7168555787e22fae96ac99631c[m
Merge: a160533e4 552fd02cf
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jun 3 17:13:51 2016 +0000

    Merge "Change to get_twopass_worst_[1;31mquality[m()"

[33mcommit 5ef54c1536f8c1b533fbd3c1cc1e18090366fc3a[m
Merge: 7a586cad0 cd700e1ab
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jun 3 17:12:51 2016 +0000

    Merge "Adjustment calculation of active worst [1;31mquality[m."

[33mcommit 552fd02cf06128bcab3e8e7ae8eb5eddd6bcf1a4[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri May 27 16:04:43 2016 +0100

    Change to get_twopass_worst_[1;31mquality[m()
    
    Change to the calculation of the error divisor used in
    get_twopass_worst_[1;31mquality[m(). This follows on from other
    changes to the rate control that impact the output of this
    function.
    
    Change-Id: I414fa9aa1e6a68a64dccea17c3712f44b8a0c10c

[33mcommit cd700e1ab919ca098bf78875d3a7326d91daa34d[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon May 23 13:57:11 2016 +0100

    Adjustment calculation of active worst [1;31mquality[m.
    
    Added a factor based on the bit spend in the last arf group vs the
    target to adjust the choice of the active worst [1;31mquality[m in subsequent
    groups.
    
    Helps clips where previously there was a big overshoot or undershoot
    to adapt and get closer to the target rate.
    
    Change-Id: I67034b801679b99024409489a2273ea6fe23b8e6

[33mcommit 70bdf643d09242bd50f47e415664f2927715ee9d[m
Merge: 8700eed4c 0c60db7de
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 22:15:24 2016 +0000

    Merge "vp9: Fix to [1;31mquality[m regression issue for 1 pass."

[33mcommit 0c60db7def133eb93e9479480f7a019fc6386de0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 12:18:53 2016 -0700

    vp9: Fix to [1;31mquality[m regression issue for 1 pass.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1217
    
    Issue introduced in https://chromium-review.googlesource.com/#/c/339162/.
    The factor on avg_frame_qindex[INTER_FRAME] in that CL, used for q-basis to
    set active_best, can cause the QP to decrease too slowly or get stuck
    in some cases when max-q=63.
    
    Removing that factor fixes the regression in issue#1217.
    
    Change-Id: I97fe28dca3c2bc2d852b1775f39c62164e032d4f

[33mcommit 65732c36a8c8f60907b62d24c097782a0a0d7e1c[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu May 5 11:37:04 2016 +0100

    Fixed 8K two pass encoder crash.
    
    Bug found by Yunqing relating to the correction for size at 8K and
    above in get_twopass_worst_[1;31mquality[m().
    
    The basis for the correction was changed to the linear size relative to
    1080P as a baseline and the adjustment has been clamped to prevent
    problems at extreme images sizes.
    
    For 1080P the results on our test sets were neutral but the low res and
    mid res sets saw a small gain (0.1%-0.2% average).
    
    I would also expect some gains on 4k and larger content where the
    previous correction was overly aggressive.
    
    Change-Id: I30b026b5f4535e9601e3178d738066459d19c8fb

[33mcommit 42bee40e5082352b5a06a16a3a8c95cd25497a9c[m
Merge: d4fccb8f4 36f796d2d
Author: Marco Paniconi <marpan@google.com>
Date:   Mon May 9 21:30:11 2016 +0000

    Merge "vp9: 1 pass vbr: Reduce base qp for active_best_[1;31mquality[m for inter-frames."

[33mcommit 36f796d2d04208eacadfa12363d154511acf4d43[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon May 9 09:40:43 2016 -0700

    vp9: 1 pass vbr: Reduce base qp for active_best_[1;31mquality[m for inter-frames.
    
    Reduce factor for setting base-qp for active_best_[1;31mquality[m (for inter-frames).
    Small increase in metrics on yt live set.
    
    Change-Id: I9cf0ac797783aeddbfaf1ff510696c9035d7c5ee

[33mcommit d488236ce3f46c70796df77c4a0f26972e056bbc[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 15 10:06:18 2016 -0700

    vp9: Adjustment to active_best_[1;31mquality[m for inter_frame, 1 pass vbr.
    
    Change only affects 1 pass vbr.
    
    Use a q value somewhat larger (~6%) than avg_frame_qindex[INTER]
    as basis for active_best_[1;31mquality[m for inter-frames.
    And use the minium of this (avg_frame_qindex) and the active_worst_[1;31mquality[m.
    
    This reduces some overshoot in ytlive clips.
    Overall small but positive average increase in metrics (up on average ~0.2%).
    
    Change-Id: Icdbaae7872d5675fd38a13c0ec6ce0e2e3b919ce

[33mcommit 3861b25be1ac3f7c137e6058f91f8f6c90f4d28e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 7 17:20:16 2016 -0700

    vp9: Fix to active_best for GF/ARF in 1 pass vbr.
    
    Correct the setting of Q basis of GF/ARF in 1 pass vbr.
    
    Existing logic would switch to using avg_QP of key frame if
    avg_QP of inter is less than active worst (even if key frame is
    not last frame).
    
    Instead fix the logic (as per the comment) to use the lower of
    active_worst_[1;31mquality[m and avg_Q for inter as basis for GF/ARF
    active_best_[1;31mquality[m (unless last frame was key frame).
    
    Increase in metrics: AvgPSNR/SSIM up by ~0.7/0.3 on ytlive set.
    
    Change-Id: I9a628378ec6684bfda9457ebfc2384ef6d8579f7

[33mcommit e96f0c3db3f61b65bdd63c1ed8867218111dbb62[m
Merge: 31b975713 8fab3e82c
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 7 16:31:12 2016 +0000

    Merge "vp9-1 pass vbr: Use average QP for active_worst_[1;31mquality[m, for inter-frames."

[33mcommit 107de196989bf947f11643b5c8c663a54c1e7535[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Apr 7 14:55:26 2016 +0100

    Trap very short arf group just before a kf.
    
    Trap the case where we end up with a very short arf group just before
    a key frame. Such a group often has poor [1;31mquality[m and may cause pulsing.
    
    For example if the KF is 17 frames away we are better doing two mid-size
    groups of 9 and 8 than a group of 15 followed by a group of 2.
    
    This becomes more and more important when coding with a short forced
    kf interval though it may not impact our standard tests much.
    
    Change-Id: I29d83d6637b203eac69be320dd35a7401a4678c1

[33mcommit 8fab3e82ca593328680c4388b45dd772110f41fe[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 30 16:27:25 2016 -0700

    vp9-1 pass vbr: Use average QP for active_worst_[1;31mquality[m, for inter-frames.
    
    And replace some operation with shift.
    
    Change-Id: If1ea874ee05b7238d5f954e55bb3ceda804a091a

[33mcommit a84f1f846e3464a0aaa557c8cd428a6f15b48d32[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Mar 22 12:56:05 2016 -0700

    Increase min-max q range for normal inter frames.
    
    Allow the encode loop to select from a wider range of Q values
    when encoding normal (non arf or kf) frames.
    
    This change is targeted at improving psycho-visual [1;31mquality[m in some
    easy sections that are currently not getting enough bits.
    This is likely to be a little worse from a metrics perspective  and may also
    have a small impact on encode speed in cases where extra recode
    iterations are triggered.
    
    Change-Id: I667eebf33c753bcbcf8b93596467369e5708b889

[33mcommit 02345be98674f5ae57dc9508f95aba312ad6b633[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Wed Dec 16 15:34:07 2015 -0800

    Adding an aq mode for 360 videos
    
    Different [1;31mquality[m levels are used for different regions in
    the frame depending on how far they are vertically from the
    center. Specifically, three segments are used based on the
    mi_row index with respect number to the number of mi_rows in
    the frame.
    
    Change-Id: Ifc8b777bc58ea8521dffc4640360c67d99f8d381

[33mcommit 4e692bbee29d1566e43ed4499249651d4c01f9c4[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 8 15:48:24 2015 +0000

    Changes to exhaustive motion search.
    
    This change has been imported from VP9 and
    alters the nature and use of exhaustive motion search.
    
    Firstly any exhaustive search is preceded by a normal step search.
    The exhaustive search is only carried out if the distortion resulting
    from the step search is above a threshold value.
    
    Secondly the simple +/- 64 exhaustive search is replaced by a
    multi stage mesh based search where each stage has a range
    and step/interval size. Subsequent stages use the best position from
    the previous stage as the center of the search but use a reduced range
    and interval size.
    
    For example:
      stage 1: Range +/- 64 interval 4
      stage 2: Range +/- 32 interval 2
      stage 3: Range +/- 15 interval 1
    
    This process, especially when it follows on from a normal step
    search, has shown itself to be almost as effective as a full range
    exhaustive search with step 1 but greatly lowers the computational
    complexity such that it can be used in some cases for speeds 0-2.
    
    This patch also removes a double exhaustive search for sub 8x8 blocks
    which also contained  a bug (the two searches used different distortion
    metrics).
    
    For best [1;31mquality[m in my test animation sequence this patch has almost
    no impact on [1;31mquality[m but improves encode speed by more than 5X.
    
    Restricted use in good [1;31mquality[m speeds 0-2 yields significant [1;31mquality[m gains
    on the animation test of 0.2 - 0.5 db with only a small impact on encode
    speed. On most natural video clips, however, where the step search
    is performing well, the [1;31mquality[m gain and speed impact are small.
    
    Change-Id: Iac24152ae239f42a246f39ee5f00fe62d193cb98

[33mcommit f3f6b6fe3e960959489db2568d9942aeca261daa[m
Merge: 4993158ee 8ba98516f
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Nov 19 16:13:43 2015 +0000

    Merge "Changes to best [1;31mquality[m settings."

[33mcommit 8ba98516fd8df6ee9275c4e68ec0663ad5b6848c[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Nov 17 16:20:20 2015 +0000

    Changes to best [1;31mquality[m settings.
    
    Small changes to the best [1;31mquality[m default speed trade off.
    Some speedup settings are worth while even for best [1;31mquality[m as they
    have only a very small impact on [1;31mquality[m but a significant impact on
    encode time.
    
    These changes give as much as a further 50-60% increase in encode
    speed for my test animations clip with minimal impact on [1;31mquality[m.
    
    For this sequence these changes improve the best [1;31mquality[m encode  speed
    to about the same level as good [1;31mquality[m speed 0 in Q3 2015 whilst
    retaining the large [1;31mquality[m gain of over 1 db
    
    For many natural videos though the [1;31mquality[m difference from good 0
    to best is much smaller.
    
    Change-Id: I28b3840009d77e129817a78a7c41e29cb03e1132

[33mcommit 0149fb3d6b24f1df7f215ca12a2d8c8f70fd64f3[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Oct 14 10:38:49 2015 +0100

    Changes to exhaustive motion search.
    
    This change alters the nature and use of exhaustive motion search.
    
    Firstly any exhaustive search is preceded by a normal step search.
    The exhaustive search is only carried out if the distortion resulting
    from the step search is above a threshold value.
    
    Secondly the simple +/- 64 exhaustive search is replaced by a
    multi stage mesh based search where each stage has a range
    and step/interval size. Subsequent stages use the best position from
    the previous stage as the center of the search but use a reduced range
    and interval size.
    
    For example:
      stage 1: Range +/- 64 interval 4
      stage 2: Range +/- 32 interval 2
      stage 3: Range +/- 15 interval 1
    
    This process, especially when it follows on from a normal step
    search, has shown itself to be almost as effective as a full range
    exhaustive search with step 1 but greatly lowers the computational
    complexity such that it can be used in some cases for speeds 0-2.
    
    This patch also removes a double exhaustive search for sub 8x8 blocks
    which also contained  a bug (the two searches used different distortion
    metrics).
    
    For best [1;31mquality[m in my test animation sequence this patch has almost
    no impact on [1;31mquality[m but improves encode speed by more than 5X.
    
    Restricted use in good [1;31mquality[m speeds 0-2 yields significant [1;31mquality[m gains
    on the animation test of 0.2 - 0.5 db with only a small impact on encode
    speed. On most clips though the [1;31mquality[m gain and speed impact are small.
    
    Change-Id: Id22967a840e996e1db273f6ac4ff03f4f52d49aa
For keyword bitrate:
[33mcommit 337ad83e5893e8e6e0bbaf42d1ed6a61399f9ddf[m
Author: Hui Su <huisu@google.com>
Date:   Fri Dec 2 10:11:33 2016 -0800

    Add support for VP9 level targeting
    
    Constraints on encoder config:
    -target_bandwidth is no larger than 80% of level [1;31mbitrate[m limit
    -target_bandwidth * (1 + max_over_shoot_pct) is no larger than
    88% of level [1;31mbitrate[m limit
    -min_gf_interval is no smaller than level limit
    -tile_columns is no larger than level limit
    
    Constraints on rate control:
    -current frame size plus previous three frames' size is no larger
    than the CPB level limit
    -current frame size is no larger than 50%/40%/20% of the CPB
    level limit if it's a key/alt-ref/other frame.
    
    Change-Id: I84d1a2d6d6e3c82bfd533b3309ce999cfaba2c8b

[33mcommit 360ac89885b9e21442f8e5e2f63206da4cc6f605[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Dec 5 12:05:35 2016 -0800

    vp9: Adjust the weight factor for segment rate cost for aq-mode=3.
    
    Use the segment weight factor based on the target (cr->percent_refresh)
    if it less than the current estimate (avergae of past usage and target).
    Small improvement at low [1;31mbitrate[ms.
    
    Change-Id: Iba8fd909e203f94458901366d3a991f7ea854d49

[33mcommit d793950ec8fe8dd445c3215a44c5d0842606bfe1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Nov 21 16:37:32 2016 -0800

    vp9: Adjust cyclic refresh parameters for low [1;31mbitrate[ms.
    
    Increase the motion threshold and qp-delta for segment#2 boost.
    This can increase the frame-drop at low [1;31mbitrate[ms, but generally
    better spatial quality.
    
    Only affects real-time mode with aq-mode=3, at very low [1;31mbitrate[ms.
    
    Change-Id: I5ccb784667f70d0c27d369806b93b1f93d5605d1

[33mcommit f93305aa07859dbcac921c670dda28b046ad87e0[m
Merge: cb5a2ac92 1cd987d92
Author: Deb Mukherjee <debargha@google.com>
Date:   Thu Nov 3 17:04:17 2016 +0000

    Merge "Speed-up recode loop for extreme [1;31mbitrate[m diffs"

[33mcommit 702b3e1ee51a8bbd4a717f2643b530ef3669a3c0[m
Merge: fb9fef83c e1cdb5029
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 31 18:23:13 2016 +0000

    Merge "vp9-svc: Add checks to layer [1;31mbitrate[ms in vp9_spatial_svc_encoder."

[33mcommit e1cdb5029830350ec7c61dee290c08e79d7b4949[m
Author: Marco Paniconi <marpan@google.com>
Date:   Sun Oct 30 22:20:04 2016 -0700

    vp9-svc: Add checks to layer [1;31mbitrate[ms in vp9_spatial_svc_encoder.
    
    Add some checks to the layer [1;31mbitrate[ms passed in through the command line.
    
    Change-Id: I16f270035a6034d63313fe3019aa90dca9a3eefb

[33mcommit a8fdb3926e066b6ab34a6b99bb961ab6e65ad7f8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 27 15:38:02 2016 -0700

    vp9: Updates to SVC sample encoder.
    
    Allow for passing in the layer [1;31mbitrate[ms at command line.
    Fix to allow passing in [1;31mbitrate[m for each spatial-temporal layer.
    
    Change to some default values for 1 pass cbr mode:
    spatial scale and qp-max/min.
    
    Small fixes to some build warnings.
    
    Change-Id: I3f9a776262712480a6570bb863a835b2fc49935a

[33mcommit 1cd987d9222a27f0f2dfb3b71bc2325313865b90[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Thu Oct 27 09:55:36 2016 -0700

    Speed-up recode loop for extreme [1;31mbitrate[m diffs
    
    Adjusts the q adjustement step depending on how far the
    projected and target rates differ.
    
    Change-Id: I498d03523ca233a270512ca3972c372daa4ca2a8

[33mcommit e765435293a4aa88fe28fa67b17c581f385475a6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Sep 29 11:15:26 2016 -0700

    vp9: On change_config() only call update_frame_size if needed.
    
    change_config() may be called often in real-time application,
    to update [1;31mbitrate[m/framerate or qp-max/min.
    No need to do update_frame_size() unless frame size has changed.
    
    Change-Id: I23a51deade1e03adc91c468f9ffde3235298770c

[33mcommit 292d221fed21a84b3a9902bcaecda00cc08e6029[m
Author: Yury Gitman <yuryg@google.com>
Date:   Mon Jul 18 15:44:40 2016 -0700

    Create interface for the ALT_REF_AQ class
    
    Current commit is just an API template  for the rest of the code, and
    I will add inner logic later.
    
    Altref  frames  generate a  lot  of  [1;31mbitrate[m  and  at the  same  time
    other  frames  refer to  them  a  lot, so  it  makes  sense to  apply
    special  compensation-based adaptive  quantization scheme  for altref
    frames. E.g.,  for blocks  that are  good predictors  for the  future
    apply rate-control  chosen quantizer  while for bad  predictors apply
    worse one.
    
    Change-Id: Iba3f8ec349470673b7249f6a125f6859336a47c8

[33mcommit 6f9982e3c27598cb7958fdb0a43217ab10cfb5b9[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Jun 13 12:08:47 2016 -0700

    vp8_[cd]x_iface.c: Initialize structures to 0
    
    Use vp8_zero() or specify every element.
    
    Cleans warning in Android build:
    missing field 'deblocking_level' initializer
    vp8_ppflags_t flags = {0};
                            ^
    missing field 'sz' initializer
    {0},                /* rc_twopass_stats_in */
      ^
    missing field 'sz' initializer
    {0},                /* rc_firstpass_mb_stats_in */
      ^
    missing field 'layer_target_[1;31mbitrate[m' initializer
    }},
    ^
    missing field 'deblocking_level' initializer
    vp8_ppflags_t flags = {0};
                            ^
    missing field 'mr_get_mem_loc' initializer
    }
    ^
    
    Change-Id: Iaedde9a77faac7a40316aee67d60d02ba7313500

[33mcommit 9ca6b46cef904799a1e66538df6f0a7e275ee734[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Apr 19 10:46:20 2016 -0700

    vp9: Adjust gf period for high average Q and overshoot.
    
    For 1 pass vbr mode.
    Increase the gf interval for case where average Q is close to
    max and high overshoot is detected.
    
    Small increase in overall avg_psnr/sssim metrics (~0.2/0.1%) for ytlive,
    but improves the low-end (low [1;31mbitrate[m) for several clips (less overshoot).
    
    Change-Id: Ifba40f25b4861b2e0d9832c82d5359a6a3dce9f2

[33mcommit 11bf7ea354cb69755e1f0e1a71351b166ae30677[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 8 16:29:54 2016 -0800

    vp9-svc: Fix to frame dropping in svc mode.
    
    Don't advance the svc frame counters on dropped frame,
    since this can break the referencing scheme and lead
    to a crash/assert.
    
    Updated svc-datarate unittest to add a lower [1;31mbitrate[m test.
    
    Change only affects 1 pass cbr svc, with frame dropper enabled.
    
    Change-Id: Ibb7530b7a587a9344d46898d9286fd9e2ef0779c

[33mcommit 268ec8dcfbbd23339eea06805aff68a28510a3cd[m
Merge: aeac8435b 699276e56
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 8 22:08:57 2016 +0000

    Merge "vp9-svc: Change default spatial [1;31mbitrate[m allocation."

[33mcommit 699276e56d7d74e3b7d6f5aeb4f4e9f4085b4826[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 8 11:25:13 2016 -0800

    vp9-svc: Change default spatial [1;31mbitrate[m allocation.
    
    Only affects 1 pass cbr svc.
    
    Change-Id: I8387219e35e516d9ce890557ee1855f2af8f636a

[33mcommit f21ff53830b77bd9f636a8e125ef90793d2d7bb1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 29 13:11:41 2016 -0800

    vp9: Remove effective_[1;31mbitrate[m from SVC datarate tests.
    
    Change-Id: I1189c2403463e0aca288ba344052ba1c9cf94390

[33mcommit f7b4364cbbe3863426fce30af2095978749c71aa[m
Author: James Zern <jzern@google.com>
Date:   Fri Feb 5 11:44:57 2016 -0800

    vp9_aq_cyclicrefresh: fix unused-function warning
    
    delete apply_cyclic_refresh_[1;31mbitrate[m(). unused since:
    3472cbb vp9 aq-mode=3: Keep it on even at low [1;31mbitrate[ms.
    
    Change-Id: I0fac9a31b59504e31000ac3a8f0b68e8d4320113

[33mcommit 85dccb6944e2ddf908e3bf973f076c4bcc0bcf9e[m
Merge: 693dcc86c 3472cbbd8
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Feb 5 16:38:41 2016 +0000

    Merge "vp9 aq-mode=3: Keep it on even at low [1;31mbitrate[ms."

[33mcommit 3472cbbd8862bb5e0256ef2d8a773170ccda8bda[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 4 17:10:25 2016 -0800

    vp9 aq-mode=3: Keep it on even at low [1;31mbitrate[ms.
    
    Change-Id: I6a27db6b9dbe3d8cb3d47ef30fbd52557171cadd

[33mcommit b39a599cefed4cc2459ef20ba5c198955bb66516[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 22 11:45:31 2016 -0800

    vp9 non-rd mode: Modification for detected skin areas.
    
    If a superblock contains alot of "skin" then force split
    of 64x64 partition, and make some adjustments in mode selection.
    
    This helps to reduce artifacts on moving face/skin areas at low [1;31mbitrate[ms.
    
    Little/no change in metrics: avgPSNR/SSIM down by ~0.12%.
    Small encoding time increase < 1%.
    
    Change-Id: Ic57f52148c3716f391419fab0530d916e4c1d186

[33mcommit 204cde580a5f6dd5e7511c932c47c068046d9671[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri Nov 13 16:02:43 2015 -0800

    Enable resize test(down&up) by changing the [1;31mbitrate[m.
    
    Change-Id: I5a4f1f7b9de20fbfc28cb743dcd29c0eeca736f8
For keyword pass:
[33mcommit ebe0b57c91d1a069f6fe9ccf90fabc919ab80f4d[m
Merge: c7e2bd629 f1909d26f
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jan 9 17:23:12 2017 +0000

    Merge "vp9: 1 [1;31mpass[m cbr mode: increase threshold for gf_cbr_boost_pct usage."

[33mcommit f1909d26f8bfcbf2726a4977151715c4c628b83b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 6 15:28:21 2017 -0800

    vp9: 1 [1;31mpass[m cbr mode: increase threshold for gf_cbr_boost_pct usage.
    
    Increase the boost threshold below which GOLDEN update will use same
    rate correction factor as INTER_NORMAL.
    
    Improves performance when gf_cbr_boost_pct is set (between 0 and 100)
    in CBR mode.
    
    Change-Id: I9f54cc18664786a100b13a416b7137ae03bd0cab

[33mcommit 1ca1515dd30cad91a1f08b54a71a799d5cdab0a6[m
Merge: 63a8257fb 768b1f728
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jan 4 17:24:08 2017 +0000

    Merge "vp9: 1 [1;31mpass[m cbr: allow noise estimation down to 360p."

[33mcommit 768b1f72814a6f96f070ff2c4bee3419b1973ee8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jan 3 16:01:05 2017 -0800

    vp9: 1 [1;31mpass[m cbr: allow noise estimation down to 360p.
    
    Also adjust some thresholds for noise level setting.
    
    Change-Id: I7e03d7057ef2061c9447728deb9c6aff5d3da4b7

[33mcommit e7c453b613ffc2baab4b04cc514fd4a0a15c8927[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Dec 15 16:10:30 2016 -0800

    vp9: 1 [1;31mpass[m vbr: Skip find_predictors in pickmode when source is altref.
    
    When source frame is altref, we only do zero-mv mode, so we can skip
    the find_predictors(). No change in compression.
    Small speed gain, ~1%.
    
    Only affects 1 [1;31mpass[m vbr with lookhead altref, for ytlive with
    the macro flag USE_ALTREF_FOR_ONE_PASS on.
    
    Change-Id: I9318c5da8521f017bf54919cd652438b3a6313d1

[33mcommit 5de798f2b26fce3e82f0c28219fe13c3cf88dde7[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Dec 14 14:08:09 2016 -0800

    vp9: Fix to usage of flag USE_ALTREF_FOR_ONE_PASS
    
    The flag USE_ALTREF_FOR_ONE_PASS allows for alt-ref lookahead
    in 1 [1;31mpass[m vbr (from https://chromium-review.googlesource.com/#/c/365498).
    This change is to make sure this macro flag only has effect if
    the config flag cpi->oxcf.enable_auto_altef is also on.
    
    No change in ytlive encoding, as USE_ALTREF_FOR_ONE_PASS is not
    yet enabled.
    
    Change-Id: I1a69681e4a15c5244581a3dab4587fca08f02e0f

[33mcommit 880adc33553cf0b48b91aea33eb7cccc730a6c39[m
Merge: e4c6f8fde 394020383
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Thu Dec 8 22:46:44 2016 +0000

    Merge "Remove an unused first [1;31mpass[m statistic"

[33mcommit 394020383d3da02e602050f9d5e8e671a6e3cb8b[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Dec 7 10:00:36 2016 -0800

    Remove an unused first [1;31mpass[m statistic
    
    One of the first [1;31mpass[m stats "new_mv_count" is no longer used in VP9,
    and is removed. This also makes it easy to implement a multi-threaded
    first [1;31mpass[m. This change doesn't affect the coding performance, which
    has been verified by borg tests.
    
    Change-Id: I4c7c7bf9465fda838eb230814ef0c631c068c903

[33mcommit 228c9940ea87643368c5e79b744a34fe901d15d4[m
Merge: cb339d628 8befcd008
Author: James Zern <jzern@google.com>
Date:   Wed Dec 7 01:40:28 2016 +0000

    Merge changes Ibad079f2,I7858a0a1
    
    * changes:
      enable vpx_idct16x16_10_add_neon in hbd builds
      idct16x16,NEON: rm output_stride from [1;31mpass[m1 fns

[33mcommit af9d7aa9fb81e722a719efd8c2fea7a7a80382e9[m
Author: James Zern <jzern@google.com>
Date:   Tue Nov 29 19:47:50 2016 -0800

    idct16x16,NEON: rm output_stride from [1;31mpass[m1 fns
    
    vpx_idct16x16_256_add_neon_[1;31mpass[m1, vpx_idct16x16_10_add_neon:
    this was a constant 8 in all cases meaning the results are stored
    contiguously, this allows the number of stores to be reduced.
    
    Change-Id: I7858a0a15a284883ef45c13dfd97c308df9ea09e

[33mcommit c6641782c3ea2e12417c04ac2b1b09f6a82caf88[m
Author: James Zern <jzern@google.com>
Date:   Wed Nov 23 17:21:26 2016 -0800

    idct16x16,NEON,cosmetics: normalize fn signatures
    
    + remove unused parameters from vpx_idct16x16_10_add_neon_[1;31mpass[m2
    
    Change-Id: Ie5912a4abdd308fab589380bca054a2e7234a2c4

[33mcommit d757d7e998d2e247a6fea424e8cb67e5f2b17951[m
Merge: f63eb66ec 6cc76ec73
Author: James Zern <jzern@google.com>
Date:   Thu Nov 24 03:31:25 2016 +0000

    Merge changes Icc4ead05,Ib019964b,I3b5fd3b3,Ieedadee2
    
    * changes:
      Update vpx_idct4x4_16_add_neon() to [1;31mpass[m SingleExtremeCoeff test
      Refine 8-bit 4x4 idct NEON intrinsics
      Add idct speed test.
      Update partial_idct_test.cc to support high bitdepth

[33mcommit 6cc76ec73f02c4c6e78cd77f73b09ea385915f34[m
Author: Linfeng Zhang <linfengz@google.com>
Date:   Tue Nov 22 11:35:05 2016 -0800

    Update vpx_idct4x4_16_add_neon() to [1;31mpass[m SingleExtremeCoeff test
    
    Change-Id: Icc4ead05506797d12bf134e8790443676fef5c10

[33mcommit 9ad3e140151fb160ddc8f771bd540abc573b92de[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Nov 1 12:09:46 2016 -0700

    partial_idct_test: Add large coefficient test
    
    Two functions do not [1;31mpass[m this test:
    vpx_idct8x8_64_add_ssse3
    vpx_idct8x8_12_add_ssse3
    
    The test has been modified to avoid triggering an issue with those
    functions but they still must be investigated.
    
    BUG=webm:1332
    
    Change-Id: I52569a81e8e6e0b33c4a4d060d0b69c3fc4f578e

[33mcommit e1cdb5029830350ec7c61dee290c08e79d7b4949[m
Author: Marco Paniconi <marpan@google.com>
Date:   Sun Oct 30 22:20:04 2016 -0700

    vp9-svc: Add checks to layer bitrates in vp9_spatial_svc_encoder.
    
    Add some checks to the layer bitrates [1;31mpass[med in through the command line.
    
    Change-Id: I16f270035a6034d63313fe3019aa90dca9a3eefb

[33mcommit a8fdb3926e066b6ab34a6b99bb961ab6e65ad7f8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 27 15:38:02 2016 -0700

    vp9: Updates to SVC sample encoder.
    
    Allow for [1;31mpass[ming in the layer bitrates at command line.
    Fix to allow [1;31mpass[ming in bitrate for each spatial-temporal layer.
    
    Change to some default values for 1 [1;31mpass[m cbr mode:
    spatial scale and qp-max/min.
    
    Small fixes to some build warnings.
    
    Change-Id: I3f9a776262712480a6570bb863a835b2fc49935a

[33mcommit 715c65914bda7cbdabc274394fe701cbe65bea1a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed Oct 12 20:50:08 2016 +0100

    Change to KF boost calculation.
    
    This  change is a step in a larger change to the way boost and interval are
    determined for ARF and Key frames.
    
    This patch contains some pluming for the general case but focuses on the
    key frame boost calculation. This now relies more heavily on the rate at
    which the error score increases between the primary and secondary reference
    frame. This seems to be less fragile when dealing with different frame sizes.
    For example larger image formats tend in the first [1;31mpass[m to see a higher
    % of intra coded blocks and the use of this number in calculating the frame
    decay factor was leading to much lower boost numbers for 4K, for example,
    than the same clip coded at 2K.
    
    This change does give overall gains but they are MUCH larger for the 4K Netflix
    set. For the 4K Netflix set the average gain is around 3% with some clips > 20%
    whereas for the same set at 2K the average gain is 0.5-1%.
    
    In general for small image formats the boost is most often reduced a little whereas
    4K clips the boost is increased. There are some -ve cases such as Akiyo at 352x288
    where the reduced boost hurts the metrics, especially for SSIM, even while
    the set as a whole improves. This is most notable at very low Q and may be the
    subject of a future patch.
    
    Some common code for KF and ARF was separated in this patch for the purposes of
    tuning but may later be re-merged if appropriate.
    
    Change-Id: Iaa15ac5a58d2be89181100d95cef6a8dc4b12d0d

[33mcommit 54e03017b64f516f22954952b917a240ecad6c44[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Wed Oct 26 22:40:59 2016 -0700

    Force recode if framesize exceeds max allowed size
    
    Fixes a case where recode is not triggered based on the value
    of maxq [1;31mpass[med into the recode loop test function.
    
    BUG=b/32375284
    
    Change-Id: I15ad985d0525c68e0443cfaf842440d2754b2266

[33mcommit 02deeea447eda4ea76ce97ae3ae6aed8bbfd12a3[m
Merge: 08e0da30c ccd6a8e2f
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu Oct 27 10:21:05 2016 +0000

    Merge "Removal of a couple of two [1;31mpass[m adjustments."

[33mcommit ccd6a8e2fa0b5ac340a4dd63533ff916200bcd6e[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Sep 30 14:51:39 2016 +0100

    Removal of a couple of two [1;31mpass[m adjustments.
    
    Removed a couple of adjustments that no longer move the needle
    much but complicate the process of tuning.
    
    Change-Id: Ie320f5cf155e6aac14a4757ea9ada2cd59f27590

[33mcommit 5deffa1175420c09b89e998b60bf3e26f8379397[m
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Wed Oct 19 11:07:41 2016 -0700

    vp9_bitstream: Encode tiles in parallel
    
    Re-use the tile worker threads to pack the bitstream in parallel
    on a per-tile basis.  Restricting this to real-time only for now
    (further testing is needed to ensure this does not make 2-[1;31mpass[m
    worse in any case).
    
    BUG=webm:1309
    
    Change-Id: I8a80da7c5089b837d0df79a5c49d5e3022dfc8ec

[33mcommit 9fdae9385875449d061336cf863f7eea8c89f4b7[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 20 11:28:48 2016 -0700

    vp8: Apply gf target-size boost only when refresh_golden_frame = 1.
    
    Change only affects 1 [1;31mpass[m cbr, error resilience off.
    
    Change-Id: I68b896b09d722995a71c44331233e97bd862bcfc

[33mcommit 962496483246b547248ce5f9136f04a25bce628f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 19 12:54:32 2016 -0700

    vp8: Adjust threshold to set the gf_noboost flag.
    
    Change only affects 1 [1;31mpass[m cbr, with error_resilient off.
    
    Change-Id: Ibf254d8772fa2a8f188c9932d37b2f42362d8003

[33mcommit ff38b8dfaed089cb36d651dcdc6c1fb74acab657[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 17 14:32:28 2016 -0700

    vp8: Add control for gf boost for 1 [1;31mpass[m cbr.
    
    Control already exists for vp9, adding it to vp8.
    Usage is only when error_resilient is off.
    Added a datarate unittest for non-zero boost.
    
    Change-Id: I4296055ebe2f4f048e8210f344531f6486ac9e35

[33mcommit 9e8efa5b189a5abf78b1bcbc8076893728129d1e[m
Author: Vignesh Venkatasubramanian <vigneshv@google.com>
Date:   Fri Oct 7 10:24:50 2016 -0700

    vp9_bitstream: Encode tiles in parallel
    
    Re-use the tile worker threads to pack the bitstream in parallel
    on a per-tile basis.  Restricting this to real-time only for now
    (further testing is needed to ensure this does not make 2-[1;31mpass[m
    worse in any case).
    
    BUG=webm:1309
    
    Change-Id: Ia2c982da56697756e12f02643f589189b3271d98

[33mcommit 57c6bf291e41d4e857df621bd3a9d00341a23a02[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Aug 2 17:37:32 2016 -0700

    1 [1;31mpass[m vbr: Allow for lookahead alt-ref in real-time mode.
    
    For 1 [1;31mpass[m vbr real-time mode:
    Allow for the usage of alt-ref frame when non-zero lag-in-frames is used.
    Use non-filtered alt-ref, and select usage based on fast scene/content
    analysis/detection within the lag of frames.
    
    Positive gains on ytlive set: overall avgPSNR ~3-4%.
    Several clips are up between 5-14%, a few clips are neutral/small change.
    
    Current speed decrease is about ~5-10%.
    
    Use the flag USE_ALTREF_FOR_ONE_PASS to enable this feature
    (off by default for now).
    
    Change-Id: I802d2bf3d44f9cf01f6d15c76be9c90192314769

[33mcommit cdbd89197ec878c9c9fed8876c5c3f436ae8994d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 10 11:42:47 2016 -0700

    vp9: 1 [1;31mpass[m vbr: some adjustments to gf interval.
    
    Put limit on gf interval based on lag, and allow
    for the adjustment on next gf group also on key frame.
    
    Small/neutral change on ytlive metrics.
    
    Change only affects 1 [1;31mpass[m vbr real-time mode.
    
    Change-Id: I339c8f4398848698b6e10fe9482c52ca661b94a5

[33mcommit 294a734a5f12037d7091e50e0ac17a048589f479[m
Merge: 57e4cbc63 df66f8e83
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Oct 10 23:06:30 2016 +0000

    Merge "vp8: Change default gf behavior for 1 [1;31mpass[m cbr."

[33mcommit df66f8e830eef4e95323f87cc0a3697168a512e7[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Oct 6 16:01:04 2016 -0700

    vp8: Change default gf behavior for 1 [1;31mpass[m cbr.
    
    In 1 [1;31mpass[m CBR, with error_resilience off, allow for
    special logic to change the default gf behaviour.
    In this CL: boost is turned off and the gf period
    is set to a multiple of cyclic refresh period.
    
    Change only affect 1 [1;31mpass[m CBR mode, i.e, when the flag
    gf_update_one[1;31mpass[m_cbr is set.
    
    Including the previous change (3ec8e11: to allow cyclic refresh
    for error_resilience off), comparing metrics on RTC set for
    error_resilience off vs on: avgPSNR/SSIM up by ~6%.
    
    Change-Id: Id5b3fb62a4f04de5a805bd1b418f2b349574e0bc

[33mcommit 955b3b66bdfc127f07381448daff7ece442b3b6c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 4 14:13:17 2016 -0700

    vp8: Allow for cyclic refresh even if error_resilience it off.
    
    cyclic_refresh was tied to error_resilience mode.
    Allow it to be on also for 1 [1;31mpass[m CBR mode even if
    error_resilience is off.
    
    Other option to use new control for this, but prefer to avoid
    that for now.
    
    Change-Id: I3625b292ee059a890e31338b514e211bf0ab5c3e

[33mcommit 9afe2cf5990bfc247950f240923ba050df4b7cd8[m
Merge: ad55b1d27 2745f94de
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Fri Sep 30 00:49:06 2016 +0000

    Merge "Fix an issue in vp9_first_[1;31mpass[m for non-mulitple of 16 resolutions"

[33mcommit 2745f94deb6993bf478148b7e05305e7f65cb0f1[m
Author: Deepa K G <deepa.kg@ittiam.com>
Date:   Wed Sep 28 20:38:34 2016 -0700

    Fix an issue in vp9_first_[1;31mpass[m for non-mulitple of 16 resolutions
    
    This patch sets the 16x16 src_diff to zero and ensures correct calculation
    of this_error for block sizes smaller than 16x16.
    
    Change-Id: I7b7c02d267433c9f22c8ac9b8d5df2f499175172

[33mcommit 70240a77b8decede28132fd4dbf1fa48713edea4[m
Merge: b165451ad d9fc28c0a
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Sep 26 22:05:43 2016 +0000

    Merge "vp9: Reduce frame loopfilter-level for 1 [1;31mpass[m cbr."

[33mcommit d9fc28c0a15f6731b93796c5686af339c91c7401[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Sep 26 09:57:49 2016 -0700

    vp9: Reduce frame loopfilter-level for 1 [1;31mpass[m cbr.
    
    Reduce the filt_guess for 1 [1;31mpass[m cbr on inter-frames.
    This reduces visual artifact seen in rtc clip (jimred.vga),
    and improves metrics on rtc set.
    
    Metrics on rtc set for cbr mode overall positive, most clips are up:
    Speed 7 rtc: avgPSNR/SSIM up by: ~2.6/3.9%
    Speed 8 rtc: avgPSNR/SSIM up by: ~1.3/2.5%
    
    Change-Id: Ia4eccea1c19d65b583516df28823cd756c49464f

[33mcommit ada850786c7e0a5d6024b7716db9896124fd483e[m
Merge: deadda3de 7a34f8595
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Fri Sep 23 11:59:15 2016 +0000

    Merge "VP9: [1;31mpass[m TileWorkerData instead of MACROBLOCKD and vpx_reader."

[33mcommit 7a34f85955db2b050ca695ab17c5924d2cc92e02[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Thu Sep 22 13:18:36 2016 -0700

    VP9: [1;31mpass[m TileWorkerData instead of MACROBLOCKD and vpx_reader.
    
    Change-Id: I869ef0f113c022143b531c44aefa0f1bb267052d

[33mcommit f2be83188511e36d0fbee17c4f364da83213a02e[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Tue Sep 13 14:22:26 2016 -0700

    altref test: comment out '[1;31mpass[m'
    
    All the other test which do not use '[1;31mpass[m' (which appears to be almost
    all of them) do this.
    
    Cleans -Wextra/-Wunused-parameter:
    unused parameter ‘[1;31mpass[m’
    
    Change-Id: I1ff3acf3f3d1e831f94dcb00ea36337afe0aefe0

[33mcommit d9dce2f48eed1368a44c368fa87a506bd89ffec5[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Fri Sep 2 11:29:20 2016 -0700

    Restore vp8_sixtap_predict4x4_neon
    
    This function was removed when clang started introducing alignment hints
    which caused the 32 bit vld1_lane_u32/vst1_lane_u32 to fail:
    https://llvm.org/bugs/show_bug.cgi?id=24421
    
    The load has been rendered safe with an implementation ~indiscernible
    performance-wise that uses _u8 and over-reads just a touch.
    
    The store, when unaligned, has a version that is ~25% slower but safe
    when xoffset = 0 (second [1;31mpass[m filter only). When the first [1;31mpass[m filter
    (or both) are in play, the new version is almost identical in speed.
    
    Worst case performance (both filters, unaligned stores) is roughly 3-4x
    faster than C.
    
    BUG=webm:817
    BUG=webm:1273
    
    Change-Id: I1e490e94453e0872151fe0dafb05557463f6247d

[33mcommit 948a1f51d01f531e3e2b5d7e794d5f09c0b07cd5[m
Author: Alexander Potapenko <glider@google.com>
Date:   Tue Sep 6 18:50:38 2016 +0200

    vp8: Remove TSAN warning around end of encode.
    
    Tsan warns when run in one [1;31mpass[m and there is a recode
    loop.
    
    Change-Id: Ice2ecb2270f09ebd49efbd49c0e4f77d32e23c0f

[33mcommit 8d4c0ec1f188a9647c5e85a16bb5cf76e07366bf[m
Author: Jacky Chen <jackychen@google.com>
Date:   Tue Aug 23 14:17:28 2016 -0700

    vp9: Refactor set_low_temp_var_flag.
    
    No need to [1;31mpass[m in force_split, since we should use sb_type in the
    condition.
    
    Change-Id: Ide27243ef46e017bbb98d676347fc566a6c828f7

[33mcommit 3a4002b94d3b6ea589fb3b087e95a220c5f2b36c[m
Author: clang-format <noreply@google.com>
Date:   Thu Aug 4 11:57:00 2016 -0700

    vp9_ratectrl.c: apply clang-format
    
    after:
    ff0a87c vp9 1[1;31mpass[m vbr: Adjustment to gf interval.
    
    Change-Id: I1296e53e601bf0c2b562e3a34082ac45c294a5f1

[33mcommit 9fdeeaf41106894ea1a3564cb081207c3a9a5938[m
Merge: 7a79fa136 ff0a87ce3
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Aug 4 17:50:55 2016 +0000

    Merge "vp9 1[1;31mpass[m vbr: Adjustment to gf interval."

[33mcommit ff0a87ce3885597ea577b9547ef4162707db8476[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Aug 3 11:39:52 2016 -0700

    vp9 1[1;31mpass[m vbr: Adjustment to gf interval.
    
    Increase the minimum distance.
    Reduces the overshoot somewhat on some clips,
    small gain in avgPSNR (~0.1%) on ytlive set.
    
    Change-Id: Id5ddde20c2907dbdb536e79542eff775019c142b

[33mcommit 8ce67d714a6f1be586dcdd26524756d113b203f5[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Jul 13 15:58:11 2016 -0700

    vp9 svc: Enable different speed setting for each spatial layer.
    
    This change only affects 1 [1;31mpass[m cbr svc mode.
    
    Change-Id: If0da87bb200f7e7762755340c40c8157cc7a16ca

[33mcommit 53db6333493f53e6203ab8bd9bdde7cb2e03d34f[m
Merge: 830fa866a c06a4b9df
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 22 21:27:05 2016 +0000

    Merge "vp9 1[1;31mpass[m-vbr: Adjust gf setting for nonzero-lag case."

[33mcommit c06a4b9df2926facc338caf2218e5f683e68d42c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 22 11:44:58 2016 -0700

    vp9 1[1;31mpass[m-vbr: Adjust gf setting for nonzero-lag case.
    
    Change-Id: I230c586c6d5ae56ee9a6d37b7d9452351bb4bd80

[33mcommit 063e4a2914d0e174be758f8282ec7110aefc892f[m
Merge: 4b073bc39 2580e7d63
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jul 22 09:27:19 2016 +0000

    Merge "Noise energy Experiment in first [1;31mpass[m."

[33mcommit e90d4f0a03e7e167d10e0f2c3eaf9d63bf85e6cc[m
Merge: 451211cb0 05fe0f20a
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jul 19 17:17:16 2016 +0000

    Merge "vp9: Allow usage of lookahead for real-time, 1 [1;31mpass[m vbr."

[33mcommit 05fe0f20a653c579f93545403815f12bbda5254f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 17 12:03:57 2016 -0800

    vp9: Allow usage of lookahead for real-time, 1 [1;31mpass[m vbr.
    
    Allow usage of lookahead for VBR in real-time mode, for 1 [1;31mpass[m vbr.
    
    Current usage is for fast checking of future scene cuts/changes,
    and adjusting rate control (gf interval and active_worst/target size).
    
    Added unittests (datarate) for 1 [1;31mpass[m vbr mode, with non-zero lag.
    
    Added an experimental option to limit QP based on lookahead.
    
    Overall positive gain in metrics on ytlive set:
    avgPNSR/SSIM up on average ~1-3%; several clips up by 5, 7%.
    
    Change-Id: I960d57dfc89de121c4824b9a9bf88d2814e74b56

[33mcommit 3a986eac5734d15c24fb4e2421aaebf5f558a0f6[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Jul 11 11:45:52 2016 +0100

    Sample points to reduce encode overhead.
    
    Only noise filter sampled points in first [1;31mpass[m to reduce
    any first [1;31mpass[m speed overhead.
    
    Change-Id: Ic80d4400e59146d1c3332336c4350faf28ff8b17

[33mcommit 20946cdd3b6cad5573955d5ad78e80d038cc14cd[m
Merge: dc008cc17 cc431ad50
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 8 16:26:06 2016 +0000

    Merge "vp9: Adjustment of gfu_boost and af_ratio for 1 [1;31mpass[m vbr."

[33mcommit cc431ad50a2219cd7302d2b3ed714deb90f474a0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jul 1 11:49:12 2016 -0700

    vp9: Adjustment of gfu_boost and af_ratio for 1 [1;31mpass[m vbr.
    
    Modify the gfu_boost and af_ratio setting based on the
    average frame motion level.
    
    Change only affects 1 [1;31mpass[m vbr.
    
    Metrics overall positive on ytlive set.
    On average up by ~1%, several clips up by 2-4%.
    
    Change-Id: Ic18c49eb2df74cb4986b63cdb11be36d86ab5e8d

[33mcommit 2580e7d63e30349f2d357ddfb2cd3a10b7cd9a1c[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jun 10 12:00:26 2016 +0100

    Noise energy Experiment in first [1;31mpass[m.
    
    Use a measure of noise energy to adjust Q estimate and
    arf filter strength.
    
    Gains 0.3-0.5% on Lowres and |Netflix sets.
    Hdres and Midres neutral.
    
    Change-Id: Ic0de552e7b6763e70eeeaa3651619831b423e151

[33mcommit 5a9f21db548f1a3d9b31dfc4f758a0af83bab725[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Wed Jun 15 13:42:59 2016 -0700

    Output frames in first [1;31mpass[m for VPX_DL_REALTIME.
    
    Since combining VPX_DL_REALTIME with VPX_RC_FIRST_PASS is basically
    nonsense, ignore the user's [1;31mpass[m setting when this happens and
    behave as if the requested encode is a single [1;31mpass[m encode.
    
    BUG=webm:1233
    
    Change-Id: I5ee4c4e5838c4ca6d24988890aae490b10826db2

[33mcommit 6f9982e3c27598cb7958fdb0a43217ab10cfb5b9[m
Author: Johann Koenig <johannkoenig@google.com>
Date:   Mon Jun 13 12:08:47 2016 -0700

    vp8_[cd]x_iface.c: Initialize structures to 0
    
    Use vp8_zero() or specify every element.
    
    Cleans warning in Android build:
    missing field 'deblocking_level' initializer
    vp8_ppflags_t flags = {0};
                            ^
    missing field 'sz' initializer
    {0},                /* rc_two[1;31mpass[m_stats_in */
      ^
    missing field 'sz' initializer
    {0},                /* rc_first[1;31mpass[m_mb_stats_in */
      ^
    missing field 'layer_target_bitrate' initializer
    }},
    ^
    missing field 'deblocking_level' initializer
    vp8_ppflags_t flags = {0};
                            ^
    missing field 'mr_get_mem_loc' initializer
    }
    ^
    
    Change-Id: Iaedde9a77faac7a40316aee67d60d02ba7313500

[33mcommit 8e070558b062e1978b6b8a3430b3a155d58a6444[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 15 14:20:32 2016 -0700

    vp9: Adjustments to nonrd-pickmode for vbr
    
    For VBR: (1) allow newmv mode for golden ref to
    select interpolation filter (as in last ref case), and
    (2) don't use the more aggressive tx-skip testing logic for large blocks.
    
    Only affects 1 [1;31mpass[m real-time vbr mode (speed >= 5).
    
    PSNR/SSIM metrics on ytlive set are all positive, ~0.5-2% gain.
    
    Change-Id: I0ffbb0a9755563a5acd6230c58236e4f19a47266

[33mcommit 9b61c709c4730ae841d8e063d2a656198b1d0a65[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jun 10 10:04:46 2016 -0700

    vp9: Put lower limit on frames_to_key adjustment to gf interval.
    
    For 1 [1;31mpass[m vbr.
    
    Change-Id: I6c1c1cca3944150140e896e175b07ed518641b9b

[33mcommit fba94b8cfd3a4d238326b323c7fb87e747caa7b6[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jun 3 15:42:47 2016 +0100

    Small re-arrangement.
    
    Move initialization of a some new "two[1;31mpass[m" values
    to the function vp9_init_second_[1;31mpass[m() and some other
    small  changes.
    
    Remove #if GROUP_ADAPTIVE_MAXQ as this is always
    enabled now.
    
    Change-Id: I1dbec2fd7c419779848aa987c4cd7824d4df8456

[33mcommit 3fc01f95da993c6353082af6cb82cd5cdb8824f5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 8 13:03:29 2016 -0700

    vp9: Use nonrd_pick_partition on scene-cut, for speed 5 vbr mode.
    
    On scene-cut detected frames (i.e., high_source_sad = 1), use
    nonrd_pick_partition (over choose_part + select_part), as
    the nonrd_pick partitioning is generally better.
    
    Small positive increase in metrics on ytlive set (~0.5 - 1%).
    Negligle overall speed decrease, as its only used on scene-cut frames.
    
    Only affects 1 [1;31mpass[m vbr mode, speed = 5.
    
    Change-Id: I07c89cbdc75f5bb16eb8e0e2773ead0980d2de5c

[33mcommit 77ffea92c5d57adb28467c4e15a4d85c18ee387f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jun 8 15:13:52 2016 -0700

    vp9: Reduce overshoot factor for setting longer gf interval.
    
    Only affects 1 [1;31mpass[m vbr mode.
    
    Change-Id: Ifd7ff3771eabe322a371b35b159cace6baa3b070

[33mcommit 01882a9ee8ddeeb11113ddd1f2c38b22a730f7ac[m
Merge: ef1fb6deb f0b08aa4f
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Jun 7 22:27:33 2016 +0000

    Merge "vp9: Replace the avg_size_inter metric, for 1 [1;31mpass[m vbr."

[33mcommit f0b08aa4fa63beb714f7e1ad5d05cab7da9d1156[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jun 6 15:11:08 2016 -0700

    vp9: Replace the avg_size_inter metric, for 1 [1;31mpass[m vbr.
    
    Code cleaup, use existing rolling_actual/target metrics instead,
    set threshold to get same/similar effect.
    
    Little/no change in metrics on ytlive set.
    
    Change-Id: I74f3c3d0a143a9cf20dc9c3dee54c0f7e6a97a51

[33mcommit 3de42ac27bee4efdc83be55fca73ae7c78c0b97b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jun 6 11:42:09 2016 -0700

    vp9: Small ajustment to settings gf_interval, 1 [1;31mpass[m vbr.
    
    Add a max condition and lower the min value.
    
    No change in behavior (metrics for yt live set) for the
    default min/max_gf_interval=4/16 settings.
    Small positive change when min/max_gf_interval=7/16
    (for 60fps clips on ytlive set).
    
    Change-Id: I1c1d72425c86c69419ea43fb9730130e81062f91

[33mcommit fd38ef4b99845d7168555787e22fae96ac99631c[m
Merge: a160533e4 552fd02cf
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Jun 3 17:13:51 2016 +0000

    Merge "Change to get_two[1;31mpass[m_worst_quality()"

[33mcommit 552fd02cf06128bcab3e8e7ae8eb5eddd6bcf1a4[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri May 27 16:04:43 2016 +0100

    Change to get_two[1;31mpass[m_worst_quality()
    
    Change to the calculation of the error divisor used in
    get_two[1;31mpass[m_worst_quality(). This follows on from other
    changes to the rate control that impact the output of this
    function.
    
    Change-Id: I414fa9aa1e6a68a64dccea17c3712f44b8a0c10c

[33mcommit 100dfc9eab6547cc65066143f949893419d7dbb4[m
Merge: bacc67f4a fd500f955
Author: Yaowu Xu <yaowu@google.com>
Date:   Thu Jun 2 16:20:06 2016 +0000

    Merge "first[1;31mpass[m.c: fix an UBSAN/IOC error"

[33mcommit fd500f955f3f570e821bd9d494c291572ad3a353[m
Author: Yaowu Xu <yaowu@google.com>
Date:   Tue May 31 17:06:43 2016 -0700

    first[1;31mpass[m.c: fix an UBSAN/IOC error
    
    Change-Id: I579286e6741b689ae4281a35beb7b8f95c3ffce5

[33mcommit bacc67f4a808e488d24fda2e93cfd5fbe0b806a4[m
Author: Jacky Chen <jackychen@google.com>
Date:   Fri May 20 13:45:46 2016 -0700

    vp9: Skip some modes when variance is low for big blocks, for 1 [1;31mpass[m real-time.
    
    Skip intra-mode and some inter-modes (newmv, nearmv, nearestmv) for
    golden frame if the variance got from choose_partitioning is very low.
    Only for 1 [1;31mpass[m real-time CBR mode and bsize >= 32x32, it has ~2.5%
    speed up with less than 0.1% PSNR drop for rtc test set. Don't see
    visual regression.
    
    Change-Id: I70efbc95a1007231ae36f02c5b2fbf6cd35077ad

[33mcommit 75d551783d03579198d97098b1127307be8d2578[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 25 14:19:01 2016 -0700

    vp9: Add datarate test for 1 [1;31mpass[m VBR mode.
    
    Existing tests are only for CBR mode.
    
    Change-Id: Ie3b2cd46236457748e2650901d1a347a730f38af

[33mcommit af0a9fcf7078fff3324968dd77f9cf3c2765118a[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon May 16 13:41:56 2016 -0700

    vp9: Refactor some denoiser logic in vp9_pick_inter_mode.
    
    Move the logic for rechecking zeromv on denoised block out to simplify
    the function. To simplify the param [1;31mpass[ming, add a new structure
    VP9_PICKMODE_CTX_DEN which is only used when denoiser is enabled.
    
    Change-Id: Iaa9b4396dfcb8147236c02d4a1868a09103a4476

[33mcommit 8a79769aff63c41e2db42af7a0afeec289789dcb[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri May 13 11:41:37 2016 -0700

    vp9: Update to rc-metric for keeping track of average frame size.
    
    Rename and change to how its updated.
    Only affects 1 [1;31mpass[m vbr.
    
    Small change in metrics (< ~0.1%) on ytlive set.
    
    Change-Id: Ibb1fe485699b6c4a8194951c8f229abe2f64b9a5

[33mcommit 9d7eaf004647571fea6062ee2ff05d54b2a9c247[m
Merge: 10c7ea4be 9d47341a4
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu May 12 16:26:29 2016 +0000

    Merge "two[1;31mpass[m_encoder: Add frame limit argument."

[33mcommit 70bdf643d09242bd50f47e415664f2927715ee9d[m
Merge: 8700eed4c 0c60db7de
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 22:15:24 2016 +0000

    Merge "vp9: Fix to quality regression issue for 1 [1;31mpass[m."

[33mcommit 9d47341a4cc1676de870f79bd56c0ac326418b68[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Wed May 11 14:50:03 2016 -0700

    two[1;31mpass[m_encoder: Add frame limit argument.
    
    - Remove two[1;31mpass[m_encoder test TODO re frame limit.
    - Enable VP9 two[1;31mpass[m_encoder test.
    
    Change-Id: I0649f15aabef79a63891e997fd20b212af5672e6

[33mcommit 0c60db7def133eb93e9479480f7a019fc6386de0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 11 12:18:53 2016 -0700

    vp9: Fix to quality regression issue for 1 [1;31mpass[m.
    
    BUG=https://bugs.chromium.org/p/webm/issues/detail?id=1217
    
    Issue introduced in https://chromium-review.googlesource.com/#/c/339162/.
    The factor on avg_frame_qindex[INTER_FRAME] in that CL, used for q-basis to
    set active_best, can cause the QP to decrease too slowly or get stuck
    in some cases when max-q=63.
    
    Removing that factor fixes the regression in issue#1217.
    
    Change-Id: I97fe28dca3c2bc2d852b1775f39c62164e032d4f

[33mcommit 5fd142e763ce2760ff118b91b92714f1978e3d0b[m
Merge: d7947c37a 65732c36a
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Wed May 11 16:25:25 2016 +0000

    Merge "Fixed 8K two [1;31mpass[m encoder crash."

[33mcommit 65732c36a8c8f60907b62d24c097782a0a0d7e1c[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Thu May 5 11:37:04 2016 +0100

    Fixed 8K two [1;31mpass[m encoder crash.
    
    Bug found by Yunqing relating to the correction for size at 8K and
    above in get_two[1;31mpass[m_worst_quality().
    
    The basis for the correction was changed to the linear size relative to
    1080P as a baseline and the adjustment has been clamped to prevent
    problems at extreme images sizes.
    
    For 1080P the results on our test sets were neutral but the low res and
    mid res sets saw a small gain (0.1%-0.2% average).
    
    I would also expect some gains on 4k and larger content where the
    previous correction was overly aggressive.
    
    Change-Id: I30b026b5f4535e9601e3178d738066459d19c8fb

[33mcommit 42bee40e5082352b5a06a16a3a8c95cd25497a9c[m
Merge: d4fccb8f4 36f796d2d
Author: Marco Paniconi <marpan@google.com>
Date:   Mon May 9 21:30:11 2016 +0000

    Merge "vp9: 1 [1;31mpass[m vbr: Reduce base qp for active_best_quality for inter-frames."

[33mcommit 36f796d2d04208eacadfa12363d154511acf4d43[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon May 9 09:40:43 2016 -0700

    vp9: 1 [1;31mpass[m vbr: Reduce base qp for active_best_quality for inter-frames.
    
    Reduce factor for setting base-qp for active_best_quality (for inter-frames).
    Small increase in metrics on yt live set.
    
    Change-Id: I9cf0ac797783aeddbfaf1ff510696c9035d7c5ee

[33mcommit f4b5076ad38acfc49f35cc294d12072e7537dc3d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 29 15:52:45 2016 -0700

    vp9: Reduce qp threshold for limiting cyclic refresh on steady blocks.
    
    Makes the delta-qp stop little earlier on areas that have been refreshed enough.
    This helps to reduce some pulsing artifact on noisy flat areas observed in some
    noisy vc-clips.
    
    Threshold changes only take effect for sources where noise level is estimated to
    be >= medium level.
    
    Only affects 1 [1;31mpass[m CBR, non-screen content case.
    
    Change-Id: Iacf557f6aa8abbcd6782c02ff2e6c14891960850

[33mcommit 1fc21052abe24a3f0a8b648b6f212b240a3fc9c6[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 4 18:11:19 2016 -0700

    vp9: Modify logic for gf setting based on up-coming key frame.
    
    For 1 [1;31mpass[m vbr mode:
    Refactor to move the logic for gf setting based on up-coming
    key frames to a separate function, so same logic can be used for
    scene-cuts/changes.
    
    Change-Id: Ic4ede308e08ba869bb62e4566e19ea31222c5229

[33mcommit ff3866dc43ee334eb098618b257b166eb5aaca0e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed May 4 11:10:02 2016 -0700

    vp9-noise estimation. Decrease frame period for estimating noise.
    
    Makes the noise estimation react little faster.
    Little/no change in metrics.
    
    Change only affects 1 [1;31mpass[m cbr.
    
    Change-Id: I13f0daa90ecbf9d49eb1cf2e48febd9d92292940

[33mcommit c69a141a9e3910361e79f936cc09b237d9c0f1d6[m
Author: Jacky Chen <jackychen@google.com>
Date:   Wed Apr 27 22:18:11 2016 -0700

    vp9: Don't force block size to 8x8 in denoiser.
    
    First, we only set use_4x4_partition for key frame where we don't
    denoise; second, envision we have small partitions, we should [1;31mpass[m the
    actual block size to denoiser and make an early termination if needed.
    
    Change-Id: I331f42046d792b17360723d17ff817d601394658

[33mcommit 1a53c0c9e192f59786c6f9a2d3d9065d7f2b89d4[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Apr 25 23:52:19 2016 -0700

    vp9: Simplify the logic in denoiser SSE2 code.
    
    Block size [1;31mpass[med into denoiser filter is always >= BLOCK_8X8 (in
    vp9_pick_inter_mode), it is not necessary to check smaller block
    size. Passed the bitexact test on clips with different resolutions and
    noise levels.
    
    Change-Id: I19fa3195d18c27d9e5de60dc11cff1522ef3714e

[33mcommit 779840c9f4854430813fa88833d3db99e99ebb36[m
Merge: 7a4c2c767 015c43f0c
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Apr 26 12:57:08 2016 +0000

    Merge "Resolve a couple of TODOs in first[1;31mpass[m.c"

[33mcommit 97d8adef8203201e9247c1ca0e2e588ddcff9020[m
Merge: ef4a132cc e172e8aa2
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Apr 25 21:13:56 2016 +0000

    Merge "vp9: 1 [1;31mpass[m vbr: Adjust gf boost/interval on motion level."

[33mcommit e172e8aa26a95c5f7f23b46d2e9768ddd52be6f1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 20 15:53:20 2016 -0700

    vp9: 1 [1;31mpass[m vbr: Adjust gf boost/interval on motion level.
    
    Add some adjustment for high motion case.
    
    Change-Id: If700be1ce849c187ed031221ea7cabbc8d91ec2b

[33mcommit 8b25dd599ff6eec81060f508bfa5c9874439bee8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 22 15:27:53 2016 -0700

    vp9: Add rc quantity to track amount of low motion in scene.
    
    Use it for now in noise estimation to by[1;31mpass[m estimation if
    motion level is high.
    
    Change-Id: I033662dc909f2060e4e81abf562a7ad262dc8170

[33mcommit 015c43f0c1b0325632283f371a42974968b5655a[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Apr 25 12:38:10 2016 +0100

    Resolve a couple of TODOs in first[1;31mpass[m.c
    
    Resolved two TODO items.
    
    Force a minimum value of 1.0 for frame duration as per section duration.
    
    Column inactive zone is currently set to 0 as most of the serious issues
    relating to inactive regions relate to letter boxing.
    
    Change-Id: Ifbab3acf2c089d7305620a7ff7ed7c3536cc9235

[33mcommit 83f17eeede83f138f34177121019798719d5be1c[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 20 16:30:13 2016 -0700

    vp9: 1 [1;31mpass[m vbr: Small fix on reset avg_intersize_gfint on scene cut.
    
    Change-Id: Ie73d1bbc2c953d010b32097440698f0d060750be

[33mcommit 8a906039a7a94d9e54fa7afb7438f3bfe6ad9c5d[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 20 14:22:08 2016 -0700

    vp9: 1 [1;31mpass[m vbr: small adjustment to active_best factor for inter.
    
    Change-Id: I9c68aa9e72969b0ffbf57eb186380ff666745aeb

[33mcommit 9ca6b46cef904799a1e66538df6f0a7e275ee734[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Apr 19 10:46:20 2016 -0700

    vp9: Adjust gf period for high average Q and overshoot.
    
    For 1 [1;31mpass[m vbr mode.
    Increase the gf interval for case where average Q is close to
    max and high overshoot is detected.
    
    Small increase in overall avg_psnr/sssim metrics (~0.2/0.1%) for ytlive,
    but improves the low-end (low bitrate) for several clips (less overshoot).
    
    Change-Id: Ifba40f25b4861b2e0d9832c82d5359a6a3dce9f2

[33mcommit 9cc1f692bdbfcc1495b600eb1af2f7c0ffeb8abe[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Apr 18 10:51:07 2016 -0700

    vp9: 1 [1;31mpass[m vbr: More even spacing for gf near key frame.
    
    More even spacing near key frame and avoid gf on scene cut
    if its close to key frame.
    
    Small increase in metrics for ytlive set (which uses key-period=150).
    (~0.2% gain)
    
    Change only affects 1 [1;31mpass[m vbr mode.
    
    Change-Id: If1e5a59baf1e0befbaf998522fbc47d94ac5b5df

[33mcommit d488236ce3f46c70796df77c4a0f26972e056bbc[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Apr 15 10:06:18 2016 -0700

    vp9: Adjustment to active_best_quality for inter_frame, 1 [1;31mpass[m vbr.
    
    Change only affects 1 [1;31mpass[m vbr.
    
    Use a q value somewhat larger (~6%) than avg_frame_qindex[INTER]
    as basis for active_best_quality for inter-frames.
    And use the minium of this (avg_frame_qindex) and the active_worst_quality.
    
    This reduces some overshoot in ytlive clips.
    Overall small but positive average increase in metrics (up on average ~0.2%).
    
    Change-Id: Icdbaae7872d5675fd38a13c0ec6ce0e2e3b919ce

[33mcommit 24db57f0e14e5e6cc9022a33f4e23b84e027a1a5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Apr 13 11:18:16 2016 -0700

    vp9: Adjustment to scene-cut detection.
    
    Change recursive weight for average_source_sad and
    put some constraint on spacing between detected scene-cuts.
    
    Change only affects 1 [1;31mpass[m real-time mode.
    
    Change-Id: I1917e748d845e244812d11aec2a9d755372ec182

[33mcommit 6a3cf099aa2605acd546ef0fc2c888d88c07d27b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Apr 12 18:27:04 2016 -0700

    vp9: Adjust threshold for scene-change detection.
    
    For 1 [1;31mpass[m vbr.
    
    Change-Id: I10b7eefc36d65c30844d205e139515bec7fed6af

[33mcommit f81b0000f60ea6f513d1a13d2c23b0bdc9f9a5e6[m
Merge: ff72cca8b 3861b25be
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Apr 12 21:18:41 2016 +0000

    Merge "vp9: Fix to active_best for GF/ARF in 1 [1;31mpass[m vbr."

[33mcommit ff72cca8bb52c79d4d5416a1dbbe73d9f848798e[m
Merge: a3a10a323 c47c460f6
Author: Deb Mukherjee <debargha@google.com>
Date:   Tue Apr 12 19:42:06 2016 +0000

    Merge "Step towards making the 2-[1;31mpass[m cq mode perceptual"

[33mcommit 3861b25be1ac3f7c137e6058f91f8f6c90f4d28e[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 7 17:20:16 2016 -0700

    vp9: Fix to active_best for GF/ARF in 1 [1;31mpass[m vbr.
    
    Correct the setting of Q basis of GF/ARF in 1 [1;31mpass[m vbr.
    
    Existing logic would switch to using avg_QP of key frame if
    avg_QP of inter is less than active worst (even if key frame is
    not last frame).
    
    Instead fix the logic (as per the comment) to use the lower of
    active_worst_quality and avg_Q for inter as basis for GF/ARF
    active_best_quality (unless last frame was key frame).
    
    Increase in metrics: AvgPSNR/SSIM up by ~0.7/0.3 on ytlive set.
    
    Change-Id: I9a628378ec6684bfda9457ebfc2384ef6d8579f7

[33mcommit c47c460f695f9a4fb2ecfed108e615c850035d65[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Sat Apr 9 06:24:18 2016 -0700

    Step towards making the 2-[1;31mpass[m cq mode perceptual
    
    Uses a metric on fraction of smooth blocks derived from first [1;31mpass[m
    stats in a frame to adjust down the cq_level modestly in the cq mode.
    The current implementation does not add much complexity, and is
    fairly light in the adaptation.
    
    Change-Id: Ic484e810d5bd51b7bb6b8945f378c7c3d9d27053

[33mcommit 4317ba58a9f2f4753e49dd210c72cfe04b246896[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Mar 24 13:12:51 2016 -0700

    third_party: Roll libwebm snapshot.
    
    32d5ac4 mkvmuxerutil: Fix MSVC build.
    6397597 vpxpes_parser: Fix MSVC build.
    784b6fe mkvmuxer: Revert changes to IMkvWriter types.
    030518e webm_info: Fix implicit conversion warnings.
    46d5dee sample_muxer: Fix implicit conversion warnings.
    22b0845 webmts: Fix implicit conversion warnings.
    ef464c2 mkvparser: Fix implicit conversion warnings.
    0e9767e Merge "rename mingw64_toolchain.cmake to mingw-w64_toolchain"
    f47cbd5 cmake: Move cxx flag testing/setup into its own file.
    87443a6 rename mingw64_toolchain.cmake to mingw-w64_toolchain
    2aee04f msvc_runtime.cmake: Check for MSVC, not WIN32.
    eb50da8 Option to write timecode using fixed # of bytes
    c1991fe mkvmuxer: Add missing Segment member initializer.
    10aed96 Android.mk: Make libwebm easier to build downstream.
    5c50e31 Add support for parsing VPx track codec private data.
    4cbdbf1 Fix Android build.
    bb48a3f mkvmuxerutil: remove stray 'int32'
    a1cba34 Support cross compile for windows via mingw64.
    596f5e0 Add webm_info.
    ccf75f6 msvc/muxer_tests: Silence integer conversion warnings.
    2ff2954 msvc/webm2pes: Silence integer and floating point conversion warnings.
    1f24323 msvc/hdr_util: Silence double to float conversion warnings.
    0744563 msvc/vpxpes_parser: Silence integer conversion warning.
    59614b8 msvc/libwebm_util: Fix floating point to int conversion warning.
    6481c24 webvtt: Fix include in vttreader.
    e6ed0f4 msvc/vpxpes2ts: Fix MSVC integer conversion warning.
    da64396 cmake/msvc: Disable C4996 project wide.
    6ef8264 Merge "mkvparser::BlockEntry: inline EOS()"
    3fa6aec mkvparser::BlockEntry: inline EOS()
    26306f9 mkvmuxer: Remove unused Cluster ctor overload.
    0d76597 mkvmuxer: Fix build with GCC 5.3.
    0ba80bc mkvparser/sample: Minor clean up.
    2e0e906 iosbuild.sh: Fix build.
    918440a Makefile.unix: allow CXXFLAGS to be easily overridden
    4ff5785 cmake: Add C++11 move ctor and member initializer tests.
    402ef4d cmake: remove argc and argv from C++11 test main fns.
    cbe5c40 Restore original namespaces for mkvmuxer and mkvparser.
    504e0f2 Mass file extension update.
    79cb980 Android.mk: Update source file locations.
    01db4c2 webmids: Move to common/ sub dir.
    235ce59 mkvparser: Explicitly reference internal sources in includes.
    f578419 mkvmuxer: Move sources to mkvmuxer/ sub dir.
    5f1065e webvtt: Organize and clean up webvtt support.
    7abe8ac cmake: Add missing dumpvtt target.
    f2f87e2 Makefile.unix: Tidy things up.
    12f6dc3 Use <stdint.h> types instead of custom typedefs.
    0407360 mkvmuxer: Write last block in each Cluster with Duration
    008aa63 mkvparser: move to mkvparser sub dir.
    e64bf75 Namespace reorg: Make everything a child of libwebm.
    5fdb386 cmake: move c++11 checks into build/cxx11_tests.cmake.
    3672488 Copy reference block values in Frame::CopyFrom()
    91ca780 reapply clang-format
    8d34215 Merge "Clean up AddAudioTrack in muxer_tests"
    90861d4 Clean up AddAudioTrack in muxer_tests
    a9dfb3d Un-ignore webm files in testdata
    c5b76d8 Extract PES parser from WebM2Pes tests.
    16524e8 cmake: Add include-what-you-use integration.
    7015af5 iwyu/vpxpes2ts: Update includes.
    c1d6a70 iwyu/webm2pes: Update includes.
    110e797 iwyu/libwebm_util: Update includes.
    44e31fb iwyu/webm2pes_tests: Update includes.
    d919f96 iwyu/mkvwriter: Update includes.
    75790e1 iwyu/mkvparser: Update includes.
    5f673ca iwyu/webm2pes_main: Update includes.
    747244a iwyu/vpxpes2ts_main: Update includes.
    94c985f iwyu/mkvmuxerutil: Update includes.
    c365630 iwyu/mkvmuxer: Update includes.
    b15b8ef iwyu/file_util: Update includes.
    3dfba95 iwyu/hdr_util: Update includes.
    baba8b1 iwyu/vttdemux: Update includes.
    3212ec1 iwyu/webvttparser: Update includes.
    b6d8d92 iwyu/sample_muxer_metadata: Update includes.
    a9a1a01 iwyu/sample_muxer: Update includes.
    e020ffd iwyu/sample: Update includes.
    18834bc iwyu/parser_tests: Update includes.
    9c00ae3 iwyu/muxer_tests: Update includes.
    41a17eb iwyu/test_util: Update includes
    b6174be muxer_tests: Fix windows brokenness.
    e092515 file_util: Remove tmpnam() usage in MSVC.
    b9dc4ac test_util: Don't [1;31mpass[m NULL to std::string() in GetTestDataDir().
    1f74651 webmts: Move PES/TS sources to m2ts sub directory.
    1b895e9 Rename libwebm_utils to libwebm_util.
    2fabcd3 sample_muxer: Replace std::tmpnam() with libwebm::GetTempFileName().
    e6a0033 Add file_util.
    87f9bea Move hdr_util to common.
    1f64aaf cmake: Expand C++11 tests.
    6dc81c1 muxer_tests: Die immediately when unable to prep for file writing.
    521ce4d webm2pes: Fix type limit warning.
    64c4163 vpxpes2ts: Fix sign-compare and type-limits warnings.
    741ba68 muxer_tests: Replace std::tmpnam() with GetTempFileName().
    6159e83 Merge "test_util: add missing include for close()"
    ff81c74 parser_tests: Fix sign compare warnings.
    163f57d test_util: add missing include for close()
    7c89eb5 Merge "test_util: Remove tmpnam() usage on non-MSVC targets."
    c4b8686 Merge "webm2pes_tests: Fix sign compare warnings."
    9c9f546 Merge "muxer_tests: Fix sign compare warnings."
    0fbefef webm2pes: Silence sign compare warnings.
    599e4e8 cmake: Silence clang/gcc deprecation warnings.
    82f376f test_util: Remove tmpnam() usage on non-MSVC targets.
    4d31d6b webm2pes_tests: Fix sign compare warnings.
    07ed7e0 muxer_tests: Fix sign compare warnings.
    ae2fbfe parser_tests: Silence sign compare warning.
    f488528 libwebm_utils: Silence sign compare warning.
    777247b Add C++11 detection to cmake file.
    9b89187 Add missing include to libwebm_utils.h.
    421874a Merge "mkvmuxer: Fix GCC build."
    dd6ab35 Set the mastering metadata on the muxers colour
    8b61ef5 mkvmuxer: Fix GCC build.
    353b050 Add hdr_util.
    c92e080 mkvmuxer: Use kValueNotPresent in Colour/MasteringMetadata.
    2d09128 Colour element: TransferFunction renamed to TransferCharacteristics.
    f2fc28e Colour element: Matrix renamed to MatrixCoefficients.
    e0b1135 cmake: Minor CMakeLists.txt refactor.
    1e1872b Revert change from auto_ptr to unique_ptr in sample code.
    d7fc382 Track updates to the proposed Matroska Colour spec.
    99981ee sample(mkvparser): Output Colour element when present.
    375e416 mkvmuxer: Fix Colour element support.
    eaeca34 mkvmuxer: Fix bits per channel in the colour element.
    1dab7f3 mkvparser: Avoid crash when encountering a Colour element.
    a1517aa sample_muxer: copy the Colour element.
    ea9dd94 Merge "webm2pes: Fix tests."
    8635c5b Merge "mkvparser: Make omitted values detectable in the Colour element."
    ae4ae7e mkvparser: Make omitted values detectable in the Colour element.
    8c8cba6 webm2pes: Fix tests.
    a281a22 mkvmuxer: Add support for the Colour element and its children.
    41a9147 sample_muxer: clang-format include order fix.
    939a64d Signal E_BUFFER_NOT_FULL in EBMLHeader::Parse
    fb1406e mkvparser: Add support for the Colour element and its children.
    22bfdf7 Merge "parser_tests: Add validation of cues."
    b873000 parser_tests: Add validation of cues.
    799891e Update .gitignore to include some new binaries
    e051c60 Merge "Update muxer test gold files"
    b81d5f0 Update muxer test gold files
    48b1e9a mkvparser: clang format run
    93c4690 webm2pes: Add PES packet parsing tests.
    65ca38f Merge "test_util: Fix gcc build."
    520ca6c Merge "parser_tests: Fix gcc build."
    37a38ca test_util: Fix gcc build.
    ee0ebba parser_tests: Fix gcc build.
    c32f970 Replace auto_ptr usage with unique_ptr.
    e569ab0 webm2pes/ts: Fix gcc build.
    2e55d6c Merge "add bitcode embedding support for ios"
    0cfb2dc add bitcode embedding support for ios
    bb8cefd webm2ts: Converts WebM VPx video to a MPEG TS.
    453bf44 webm2pes: Begin addition of tests.
    9299bbb libwebm: Googletest integration.
    3bec1ba Merge changes I7bcb5b3e,I8ce733be,I98a928ff,I71910f24
    5c83bbe Fix ParseElementHeader to support 0 payload elements
    be35869 libwebm_utils: Add FileDeleter.
    d6db1e1 webm2pes: Add a WebM parser init method.
    aa3593e webm2pes: Rename Convert to ConvertToFile().
    e8fca12 webm2pes: Fix super frame splitting.
    3cb96b6 webm2pes: Move main() and helper functions into their own files.
    021432b webm2pes: Fix the linux build.
    82ac5fc Remove RELEASE.TXT.
    852e173 webm2pes: Split super frames and packetize large frames.
    faf85c2 webm2pes: Refactor header/optional header writing.
    7c19266 Add Webm2Pes.
    01fdee4 mkvmuxer: Disallow AddTrack() after Tracks element is output.
    1ad314e mkvparser: EBMLHeader::Parse: remove dead init
    
    Change-Id: I542bd5e34586f29d4d15771ec4bd728defe0769e

[33mcommit f6f544278e0d02f00e9e0e9299011e1703dcc392[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 7 11:57:49 2016 -0700

    vp9: Some adjustments to scene-cut detection.
    
    Change only affects 1 [1;31mpass[m vbr mode, speed >=5.
    Increase min_thresh, decrease boost, and set a min/max
    value for gf_interval.
    
    Change-Id: I9c1e1a1ab0c5780064eb62714ee39a72ea4d2107

[33mcommit e96f0c3db3f61b65bdd63c1ed8867218111dbb62[m
Merge: 31b975713 8fab3e82c
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Apr 7 16:31:12 2016 +0000

    Merge "vp9-1 [1;31mpass[m vbr: Use average QP for active_worst_quality, for inter-frames."

[33mcommit 31b975713cf69879bcfd66bc653791112a8c3644[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Mar 24 13:12:51 2016 -0700

    third_party: Roll libwebm snapshot.
    
    eb50da8 Option to write timecode using fixed # of bytes
    c1991fe mkvmuxer: Add missing Segment member initializer.
    10aed96 Android.mk: Make libwebm easier to build downstream.
    5c50e31 Add support for parsing VPx track codec private data.
    4cbdbf1 Fix Android build.
    bb48a3f mkvmuxerutil: remove stray 'int32'
    a1cba34 Support cross compile for windows via mingw64.
    596f5e0 Add webm_info.
    ccf75f6 msvc/muxer_tests: Silence integer conversion warnings.
    2ff2954 msvc/webm2pes: Silence integer and floating point conversion warnings.
    1f24323 msvc/hdr_util: Silence double to float conversion warnings.
    0744563 msvc/vpxpes_parser: Silence integer conversion warning.
    59614b8 msvc/libwebm_util: Fix floating point to int conversion warning.
    6481c24 webvtt: Fix include in vttreader.
    e6ed0f4 msvc/vpxpes2ts: Fix MSVC integer conversion warning.
    da64396 cmake/msvc: Disable C4996 project wide.
    6ef8264 Merge "mkvparser::BlockEntry: inline EOS()"
    3fa6aec mkvparser::BlockEntry: inline EOS()
    26306f9 mkvmuxer: Remove unused Cluster ctor overload.
    0d76597 mkvmuxer: Fix build with GCC 5.3.
    0ba80bc mkvparser/sample: Minor clean up.
    2e0e906 iosbuild.sh: Fix build.
    918440a Makefile.unix: allow CXXFLAGS to be easily overridden
    4ff5785 cmake: Add C++11 move ctor and member initializer tests.
    402ef4d cmake: remove argc and argv from C++11 test main fns.
    cbe5c40 Restore original namespaces for mkvmuxer and mkvparser.
    504e0f2 Mass file extension update.
    79cb980 Android.mk: Update source file locations.
    01db4c2 webmids: Move to common/ sub dir.
    235ce59 mkvparser: Explicitly reference internal sources in includes.
    f578419 mkvmuxer: Move sources to mkvmuxer/ sub dir.
    5f1065e webvtt: Organize and clean up webvtt support.
    7abe8ac cmake: Add missing dumpvtt target.
    f2f87e2 Makefile.unix: Tidy things up.
    12f6dc3 Use <stdint.h> types instead of custom typedefs.
    0407360 mkvmuxer: Write last block in each Cluster with Duration
    008aa63 mkvparser: move to mkvparser sub dir.
    e64bf75 Namespace reorg: Make everything a child of libwebm.
    5fdb386 cmake: move c++11 checks into build/cxx11_tests.cmake.
    3672488 Copy reference block values in Frame::CopyFrom()
    91ca780 reapply clang-format
    8d34215 Merge "Clean up AddAudioTrack in muxer_tests"
    90861d4 Clean up AddAudioTrack in muxer_tests
    a9dfb3d Un-ignore webm files in testdata
    c5b76d8 Extract PES parser from WebM2Pes tests.
    16524e8 cmake: Add include-what-you-use integration.
    7015af5 iwyu/vpxpes2ts: Update includes.
    c1d6a70 iwyu/webm2pes: Update includes.
    110e797 iwyu/libwebm_util: Update includes.
    44e31fb iwyu/webm2pes_tests: Update includes.
    d919f96 iwyu/mkvwriter: Update includes.
    75790e1 iwyu/mkvparser: Update includes.
    5f673ca iwyu/webm2pes_main: Update includes.
    747244a iwyu/vpxpes2ts_main: Update includes.
    94c985f iwyu/mkvmuxerutil: Update includes.
    c365630 iwyu/mkvmuxer: Update includes.
    b15b8ef iwyu/file_util: Update includes.
    3dfba95 iwyu/hdr_util: Update includes.
    baba8b1 iwyu/vttdemux: Update includes.
    3212ec1 iwyu/webvttparser: Update includes.
    b6d8d92 iwyu/sample_muxer_metadata: Update includes.
    a9a1a01 iwyu/sample_muxer: Update includes.
    e020ffd iwyu/sample: Update includes.
    18834bc iwyu/parser_tests: Update includes.
    9c00ae3 iwyu/muxer_tests: Update includes.
    41a17eb iwyu/test_util: Update includes
    b6174be muxer_tests: Fix windows brokenness.
    e092515 file_util: Remove tmpnam() usage in MSVC.
    b9dc4ac test_util: Don't [1;31mpass[m NULL to std::string() in GetTestDataDir().
    1f74651 webmts: Move PES/TS sources to m2ts sub directory.
    1b895e9 Rename libwebm_utils to libwebm_util.
    2fabcd3 sample_muxer: Replace std::tmpnam() with libwebm::GetTempFileName().
    e6a0033 Add file_util.
    87f9bea Move hdr_util to common.
    1f64aaf cmake: Expand C++11 tests.
    6dc81c1 muxer_tests: Die immediately when unable to prep for file writing.
    521ce4d webm2pes: Fix type limit warning.
    64c4163 vpxpes2ts: Fix sign-compare and type-limits warnings.
    741ba68 muxer_tests: Replace std::tmpnam() with GetTempFileName().
    6159e83 Merge "test_util: add missing include for close()"
    ff81c74 parser_tests: Fix sign compare warnings.
    163f57d test_util: add missing include for close()
    7c89eb5 Merge "test_util: Remove tmpnam() usage on non-MSVC targets."
    c4b8686 Merge "webm2pes_tests: Fix sign compare warnings."
    9c9f546 Merge "muxer_tests: Fix sign compare warnings."
    0fbefef webm2pes: Silence sign compare warnings.
    599e4e8 cmake: Silence clang/gcc deprecation warnings.
    82f376f test_util: Remove tmpnam() usage on non-MSVC targets.
    4d31d6b webm2pes_tests: Fix sign compare warnings.
    07ed7e0 muxer_tests: Fix sign compare warnings.
    ae2fbfe parser_tests: Silence sign compare warning.
    f488528 libwebm_utils: Silence sign compare warning.
    777247b Add C++11 detection to cmake file.
    9b89187 Add missing include to libwebm_utils.h.
    421874a Merge "mkvmuxer: Fix GCC build."
    dd6ab35 Set the mastering metadata on the muxers colour
    8b61ef5 mkvmuxer: Fix GCC build.
    353b050 Add hdr_util.
    c92e080 mkvmuxer: Use kValueNotPresent in Colour/MasteringMetadata.
    2d09128 Colour element: TransferFunction renamed to TransferCharacteristics.
    f2fc28e Colour element: Matrix renamed to MatrixCoefficients.
    e0b1135 cmake: Minor CMakeLists.txt refactor.
    1e1872b Revert change from auto_ptr to unique_ptr in sample code.
    d7fc382 Track updates to the proposed Matroska Colour spec.
    99981ee sample(mkvparser): Output Colour element when present.
    375e416 mkvmuxer: Fix Colour element support.
    eaeca34 mkvmuxer: Fix bits per channel in the colour element.
    1dab7f3 mkvparser: Avoid crash when encountering a Colour element.
    a1517aa sample_muxer: copy the Colour element.
    ea9dd94 Merge "webm2pes: Fix tests."
    8635c5b Merge "mkvparser: Make omitted values detectable in the Colour element."
    ae4ae7e mkvparser: Make omitted values detectable in the Colour element.
    8c8cba6 webm2pes: Fix tests.
    a281a22 mkvmuxer: Add support for the Colour element and its children.
    41a9147 sample_muxer: clang-format include order fix.
    939a64d Signal E_BUFFER_NOT_FULL in EBMLHeader::Parse
    fb1406e mkvparser: Add support for the Colour element and its children.
    22bfdf7 Merge "parser_tests: Add validation of cues."
    b873000 parser_tests: Add validation of cues.
    799891e Update .gitignore to include some new binaries
    e051c60 Merge "Update muxer test gold files"
    b81d5f0 Update muxer test gold files
    48b1e9a mkvparser: clang format run
    93c4690 webm2pes: Add PES packet parsing tests.
    65ca38f Merge "test_util: Fix gcc build."
    520ca6c Merge "parser_tests: Fix gcc build."
    37a38ca test_util: Fix gcc build.
    ee0ebba parser_tests: Fix gcc build.
    c32f970 Replace auto_ptr usage with unique_ptr.
    e569ab0 webm2pes/ts: Fix gcc build.
    2e55d6c Merge "add bitcode embedding support for ios"
    0cfb2dc add bitcode embedding support for ios
    bb8cefd webm2ts: Converts WebM VPx video to a MPEG TS.
    453bf44 webm2pes: Begin addition of tests.
    9299bbb libwebm: Googletest integration.
    3bec1ba Merge changes I7bcb5b3e,I8ce733be,I98a928ff,I71910f24
    5c83bbe Fix ParseElementHeader to support 0 payload elements
    be35869 libwebm_utils: Add FileDeleter.
    d6db1e1 webm2pes: Add a WebM parser init method.
    aa3593e webm2pes: Rename Convert to ConvertToFile().
    e8fca12 webm2pes: Fix super frame splitting.
    3cb96b6 webm2pes: Move main() and helper functions into their own files.
    021432b webm2pes: Fix the linux build.
    82ac5fc Remove RELEASE.TXT.
    852e173 webm2pes: Split super frames and packetize large frames.
    faf85c2 webm2pes: Refactor header/optional header writing.
    7c19266 Add Webm2Pes.
    01fdee4 mkvmuxer: Disallow AddTrack() after Tracks element is output.
    1ad314e mkvparser: EBMLHeader::Parse: remove dead init
    
    Change-Id: I13637ceacab953786064b7f8f6ecf1495b7475d0

[33mcommit 74aaa2389ec056f9dd8631eeed42fe7a757daf32[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Mar 24 13:12:51 2016 -0700

    third_party: Roll libwebm snapshot.
    
    5c50e31 Add support for parsing VPx track codec private data.
    4cbdbf1 Fix Android build.
    bb48a3f mkvmuxerutil: remove stray 'int32'
    a1cba34 Support cross compile for windows via mingw64.
    596f5e0 Add webm_info.
    ccf75f6 msvc/muxer_tests: Silence integer conversion warnings.
    2ff2954 msvc/webm2pes: Silence integer and floating point conversion warnings.
    1f24323 msvc/hdr_util: Silence double to float conversion warnings.
    0744563 msvc/vpxpes_parser: Silence integer conversion warning.
    59614b8 msvc/libwebm_util: Fix floating point to int conversion warning.
    6481c24 webvtt: Fix include in vttreader.
    e6ed0f4 msvc/vpxpes2ts: Fix MSVC integer conversion warning.
    da64396 cmake/msvc: Disable C4996 project wide.
    6ef8264 Merge "mkvparser::BlockEntry: inline EOS()"
    3fa6aec mkvparser::BlockEntry: inline EOS()
    26306f9 mkvmuxer: Remove unused Cluster ctor overload.
    0d76597 mkvmuxer: Fix build with GCC 5.3.
    0ba80bc mkvparser/sample: Minor clean up.
    2e0e906 iosbuild.sh: Fix build.
    918440a Makefile.unix: allow CXXFLAGS to be easily overridden
    4ff5785 cmake: Add C++11 move ctor and member initializer tests.
    402ef4d cmake: remove argc and argv from C++11 test main fns.
    cbe5c40 Restore original namespaces for mkvmuxer and mkvparser.
    504e0f2 Mass file extension update.
    79cb980 Android.mk: Update source file locations.
    01db4c2 webmids: Move to common/ sub dir.
    235ce59 mkvparser: Explicitly reference internal sources in includes.
    f578419 mkvmuxer: Move sources to mkvmuxer/ sub dir.
    5f1065e webvtt: Organize and clean up webvtt support.
    7abe8ac cmake: Add missing dumpvtt target.
    f2f87e2 Makefile.unix: Tidy things up.
    12f6dc3 Use <stdint.h> types instead of custom typedefs.
    0407360 mkvmuxer: Write last block in each Cluster with Duration
    008aa63 mkvparser: move to mkvparser sub dir.
    e64bf75 Namespace reorg: Make everything a child of libwebm.
    5fdb386 cmake: move c++11 checks into build/cxx11_tests.cmake.
    3672488 Copy reference block values in Frame::CopyFrom()
    91ca780 reapply clang-format
    8d34215 Merge "Clean up AddAudioTrack in muxer_tests"
    90861d4 Clean up AddAudioTrack in muxer_tests
    a9dfb3d Un-ignore webm files in testdata
    c5b76d8 Extract PES parser from WebM2Pes tests.
    16524e8 cmake: Add include-what-you-use integration.
    7015af5 iwyu/vpxpes2ts: Update includes.
    c1d6a70 iwyu/webm2pes: Update includes.
    110e797 iwyu/libwebm_util: Update includes.
    44e31fb iwyu/webm2pes_tests: Update includes.
    d919f96 iwyu/mkvwriter: Update includes.
    75790e1 iwyu/mkvparser: Update includes.
    5f673ca iwyu/webm2pes_main: Update includes.
    747244a iwyu/vpxpes2ts_main: Update includes.
    94c985f iwyu/mkvmuxerutil: Update includes.
    c365630 iwyu/mkvmuxer: Update includes.
    b15b8ef iwyu/file_util: Update includes.
    3dfba95 iwyu/hdr_util: Update includes.
    baba8b1 iwyu/vttdemux: Update includes.
    3212ec1 iwyu/webvttparser: Update includes.
    b6d8d92 iwyu/sample_muxer_metadata: Update includes.
    a9a1a01 iwyu/sample_muxer: Update includes.
    e020ffd iwyu/sample: Update includes.
    18834bc iwyu/parser_tests: Update includes.
    9c00ae3 iwyu/muxer_tests: Update includes.
    41a17eb iwyu/test_util: Update includes
    b6174be muxer_tests: Fix windows brokenness.
    e092515 file_util: Remove tmpnam() usage in MSVC.
    b9dc4ac test_util: Don't [1;31mpass[m NULL to std::string() in GetTestDataDir().
    1f74651 webmts: Move PES/TS sources to m2ts sub directory.
    1b895e9 Rename libwebm_utils to libwebm_util.
    2fabcd3 sample_muxer: Replace std::tmpnam() with libwebm::GetTempFileName().
    e6a0033 Add file_util.
    87f9bea Move hdr_util to common.
    1f64aaf cmake: Expand C++11 tests.
    6dc81c1 muxer_tests: Die immediately when unable to prep for file writing.
    521ce4d webm2pes: Fix type limit warning.
    64c4163 vpxpes2ts: Fix sign-compare and type-limits warnings.
    741ba68 muxer_tests: Replace std::tmpnam() with GetTempFileName().
    6159e83 Merge "test_util: add missing include for close()"
    ff81c74 parser_tests: Fix sign compare warnings.
    163f57d test_util: add missing include for close()
    7c89eb5 Merge "test_util: Remove tmpnam() usage on non-MSVC targets."
    c4b8686 Merge "webm2pes_tests: Fix sign compare warnings."
    9c9f546 Merge "muxer_tests: Fix sign compare warnings."
    0fbefef webm2pes: Silence sign compare warnings.
    599e4e8 cmake: Silence clang/gcc deprecation warnings.
    82f376f test_util: Remove tmpnam() usage on non-MSVC targets.
    4d31d6b webm2pes_tests: Fix sign compare warnings.
    07ed7e0 muxer_tests: Fix sign compare warnings.
    ae2fbfe parser_tests: Silence sign compare warning.
    f488528 libwebm_utils: Silence sign compare warning.
    777247b Add C++11 detection to cmake file.
    9b89187 Add missing include to libwebm_utils.h.
    421874a Merge "mkvmuxer: Fix GCC build."
    dd6ab35 Set the mastering metadata on the muxers colour
    8b61ef5 mkvmuxer: Fix GCC build.
    353b050 Add hdr_util.
    c92e080 mkvmuxer: Use kValueNotPresent in Colour/MasteringMetadata.
    2d09128 Colour element: TransferFunction renamed to TransferCharacteristics.
    f2fc28e Colour element: Matrix renamed to MatrixCoefficients.
    e0b1135 cmake: Minor CMakeLists.txt refactor.
    1e1872b Revert change from auto_ptr to unique_ptr in sample code.
    d7fc382 Track updates to the proposed Matroska Colour spec.
    99981ee sample(mkvparser): Output Colour element when present.
    375e416 mkvmuxer: Fix Colour element support.
    eaeca34 mkvmuxer: Fix bits per channel in the colour element.
    1dab7f3 mkvparser: Avoid crash when encountering a Colour element.
    a1517aa sample_muxer: copy the Colour element.
    ea9dd94 Merge "webm2pes: Fix tests."
    8635c5b Merge "mkvparser: Make omitted values detectable in the Colour element."
    ae4ae7e mkvparser: Make omitted values detectable in the Colour element.
    8c8cba6 webm2pes: Fix tests.
    a281a22 mkvmuxer: Add support for the Colour element and its children.
    41a9147 sample_muxer: clang-format include order fix.
    939a64d Signal E_BUFFER_NOT_FULL in EBMLHeader::Parse
    fb1406e mkvparser: Add support for the Colour element and its children.
    22bfdf7 Merge "parser_tests: Add validation of cues."
    b873000 parser_tests: Add validation of cues.
    799891e Update .gitignore to include some new binaries
    e051c60 Merge "Update muxer test gold files"
    b81d5f0 Update muxer test gold files
    48b1e9a mkvparser: clang format run
    93c4690 webm2pes: Add PES packet parsing tests.
    65ca38f Merge "test_util: Fix gcc build."
    520ca6c Merge "parser_tests: Fix gcc build."
    37a38ca test_util: Fix gcc build.
    ee0ebba parser_tests: Fix gcc build.
    c32f970 Replace auto_ptr usage with unique_ptr.
    e569ab0 webm2pes/ts: Fix gcc build.
    2e55d6c Merge "add bitcode embedding support for ios"
    0cfb2dc add bitcode embedding support for ios
    bb8cefd webm2ts: Converts WebM VPx video to a MPEG TS.
    453bf44 webm2pes: Begin addition of tests.
    9299bbb libwebm: Googletest integration.
    3bec1ba Merge changes I7bcb5b3e,I8ce733be,I98a928ff,I71910f24
    5c83bbe Fix ParseElementHeader to support 0 payload elements
    be35869 libwebm_utils: Add FileDeleter.
    d6db1e1 webm2pes: Add a WebM parser init method.
    aa3593e webm2pes: Rename Convert to ConvertToFile().
    e8fca12 webm2pes: Fix super frame splitting.
    3cb96b6 webm2pes: Move main() and helper functions into their own files.
    021432b webm2pes: Fix the linux build.
    82ac5fc Remove RELEASE.TXT.
    852e173 webm2pes: Split super frames and packetize large frames.
    faf85c2 webm2pes: Refactor header/optional header writing.
    7c19266 Add Webm2Pes.
    01fdee4 mkvmuxer: Disallow AddTrack() after Tracks element is output.
    1ad314e mkvparser: EBMLHeader::Parse: remove dead init
    
    Change-Id: I49c1d6dbfab2855af886dc8af53cf6cf5ca382c2

[33mcommit a2307ff095bdb365c16c9c6ef4e2c825947b17e4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Apr 4 09:11:00 2016 -0700

    vp9-denoiser. Code cleanup and bugfix.
    
    Some cleanup and bugfix: [1;31mpass[m mi_row/mi_col (not mv_col/mv_row)
    to build_inter_predictors. This only affects case where
    the frame is resized, but since denoising is not done on resized
    frames, the fix has not effect currently.
    
    Change-Id: I36617a7f0b43b6f49976745f15d400977e6ffa46

[33mcommit 8fab3e82ca593328680c4388b45dd772110f41fe[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 30 16:27:25 2016 -0700

    vp9-1 [1;31mpass[m vbr: Use average QP for active_worst_quality, for inter-frames.
    
    And replace some operation with shift.
    
    Change-Id: If1ea874ee05b7238d5f954e55bb3ceda804a091a

[33mcommit f94124cf3127795544cd8e1772ebf3d31a80dda0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Mar 25 11:34:56 2016 -0700

    vp9: 1 [1;31mpass[m vbr mode at speed 5: switch to use mv.search to NSTEP.
    
    Change only affects 1 [1;31mpass[m, vbr, speed = 5 (real-time mode).
    
    Some improvement for high motion content.
    AvgPSNR/SSIM metrics for ytlive set all up, on average ~2%,
    some clips (high motion ones) up 4/5%.
    
    Encoder speed down: on mynintendo_x1.1280_720.y4m: 47fps -> 44fps.
    
    Change-Id: I9e3eaa6392dcb6b5b44ee6f43004f97ba859bc11

[33mcommit 80ddeb281a0d4b3d9a6d39a7ef91370f52845b39[m
Author: Tom Finegan <tomfinegan@google.com>
Date:   Thu Mar 24 13:12:51 2016 -0700

    third_party: Roll libwebm snapshot.
    
    4ff5785 cmake: Add C++11 move ctor and member initializer tests.
    402ef4d cmake: remove argc and argv from C++11 test main fns.
    cbe5c40 Restore original namespaces for mkvmuxer and mkvparser.
    504e0f2 Mass file extension update.
    79cb980 Android.mk: Update source file locations.
    01db4c2 webmids: Move to common/ sub dir.
    235ce59 mkvparser: Explicitly reference internal sources in includes.
    f578419 mkvmuxer: Move sources to mkvmuxer/ sub dir.
    5f1065e webvtt: Organize and clean up webvtt support.
    7abe8ac cmake: Add missing dumpvtt target.
    f2f87e2 Makefile.unix: Tidy things up.
    12f6dc3 Use <stdint.h> types instead of custom typedefs.
    0407360 mkvmuxer: Write last block in each Cluster with Duration
    008aa63 mkvparser: move to mkvparser sub dir.
    e64bf75 Namespace reorg: Make everything a child of libwebm.
    5fdb386 cmake: move c++11 checks into build/cxx11_tests.cmake.
    3672488 Copy reference block values in Frame::CopyFrom()
    91ca780 reapply clang-format
    8d34215 Merge "Clean up AddAudioTrack in muxer_tests"
    90861d4 Clean up AddAudioTrack in muxer_tests
    a9dfb3d Un-ignore webm files in testdata
    c5b76d8 Extract PES parser from WebM2Pes tests.
    16524e8 cmake: Add include-what-you-use integration.
    7015af5 iwyu/vpxpes2ts: Update includes.
    c1d6a70 iwyu/webm2pes: Update includes.
    110e797 iwyu/libwebm_util: Update includes.
    44e31fb iwyu/webm2pes_tests: Update includes.
    d919f96 iwyu/mkvwriter: Update includes.
    75790e1 iwyu/mkvparser: Update includes.
    5f673ca iwyu/webm2pes_main: Update includes.
    747244a iwyu/vpxpes2ts_main: Update includes.
    94c985f iwyu/mkvmuxerutil: Update includes.
    c365630 iwyu/mkvmuxer: Update includes.
    b15b8ef iwyu/file_util: Update includes.
    3dfba95 iwyu/hdr_util: Update includes.
    baba8b1 iwyu/vttdemux: Update includes.
    3212ec1 iwyu/webvttparser: Update includes.
    b6d8d92 iwyu/sample_muxer_metadata: Update includes.
    a9a1a01 iwyu/sample_muxer: Update includes.
    e020ffd iwyu/sample: Update includes.
    18834bc iwyu/parser_tests: Update includes.
    9c00ae3 iwyu/muxer_tests: Update includes.
    41a17eb iwyu/test_util: Update includes
    b6174be muxer_tests: Fix windows brokenness.
    e092515 file_util: Remove tmpnam() usage in MSVC.
    b9dc4ac test_util: Don't [1;31mpass[m NULL to std::string() in GetTestDataDir().
    1f74651 webmts: Move PES/TS sources to m2ts sub directory.
    1b895e9 Rename libwebm_utils to libwebm_util.
    2fabcd3 sample_muxer: Replace std::tmpnam() with libwebm::GetTempFileName().
    e6a0033 Add file_util.
    87f9bea Move hdr_util to common.
    1f64aaf cmake: Expand C++11 tests.
    6dc81c1 muxer_tests: Die immediately when unable to prep for file writing.
    521ce4d webm2pes: Fix type limit warning.
    64c4163 vpxpes2ts: Fix sign-compare and type-limits warnings.
    741ba68 muxer_tests: Replace std::tmpnam() with GetTempFileName().
    6159e83 Merge "test_util: add missing include for close()"
    ff81c74 parser_tests: Fix sign compare warnings.
    163f57d test_util: add missing include for close()
    7c89eb5 Merge "test_util: Remove tmpnam() usage on non-MSVC targets."
    c4b8686 Merge "webm2pes_tests: Fix sign compare warnings."
    9c9f546 Merge "muxer_tests: Fix sign compare warnings."
    0fbefef webm2pes: Silence sign compare warnings.
    599e4e8 cmake: Silence clang/gcc deprecation warnings.
    82f376f test_util: Remove tmpnam() usage on non-MSVC targets.
    4d31d6b webm2pes_tests: Fix sign compare warnings.
    07ed7e0 muxer_tests: Fix sign compare warnings.
    ae2fbfe parser_tests: Silence sign compare warning.
    f488528 libwebm_utils: Silence sign compare warning.
    777247b Add C++11 detection to cmake file.
    9b89187 Add missing include to libwebm_utils.h.
    421874a Merge "mkvmuxer: Fix GCC build."
    dd6ab35 Set the mastering metadata on the muxers colour
    8b61ef5 mkvmuxer: Fix GCC build.
    353b050 Add hdr_util.
    c92e080 mkvmuxer: Use kValueNotPresent in Colour/MasteringMetadata.
    2d09128 Colour element: TransferFunction renamed to TransferCharacteristics.
    f2fc28e Colour element: Matrix renamed to MatrixCoefficients.
    e0b1135 cmake: Minor CMakeLists.txt refactor.
    1e1872b Revert change from auto_ptr to unique_ptr in sample code.
    d7fc382 Track updates to the proposed Matroska Colour spec.
    99981ee sample(mkvparser): Output Colour element when present.
    375e416 mkvmuxer: Fix Colour element support.
    eaeca34 mkvmuxer: Fix bits per channel in the colour element.
    1dab7f3 mkvparser: Avoid crash when encountering a Colour element.
    a1517aa sample_muxer: copy the Colour element.
    ea9dd94 Merge "webm2pes: Fix tests."
    8635c5b Merge "mkvparser: Make omitted values detectable in the Colour element."
    ae4ae7e mkvparser: Make omitted values detectable in the Colour element.
    8c8cba6 webm2pes: Fix tests.
    a281a22 mkvmuxer: Add support for the Colour element and its children.
    41a9147 sample_muxer: clang-format include order fix.
    939a64d Signal E_BUFFER_NOT_FULL in EBMLHeader::Parse
    fb1406e mkvparser: Add support for the Colour element and its children.
    22bfdf7 Merge "parser_tests: Add validation of cues."
    b873000 parser_tests: Add validation of cues.
    799891e Update .gitignore to include some new binaries
    e051c60 Merge "Update muxer test gold files"
    b81d5f0 Update muxer test gold files
    48b1e9a mkvparser: clang format run
    93c4690 webm2pes: Add PES packet parsing tests.
    65ca38f Merge "test_util: Fix gcc build."
    520ca6c Merge "parser_tests: Fix gcc build."
    37a38ca test_util: Fix gcc build.
    ee0ebba parser_tests: Fix gcc build.
    c32f970 Replace auto_ptr usage with unique_ptr.
    e569ab0 webm2pes/ts: Fix gcc build.
    2e55d6c Merge "add bitcode embedding support for ios"
    0cfb2dc add bitcode embedding support for ios
    bb8cefd webm2ts: Converts WebM VPx video to a MPEG TS.
    453bf44 webm2pes: Begin addition of tests.
    9299bbb libwebm: Googletest integration.
    3bec1ba Merge changes I7bcb5b3e,I8ce733be,I98a928ff,I71910f24
    5c83bbe Fix ParseElementHeader to support 0 payload elements
    be35869 libwebm_utils: Add FileDeleter.
    d6db1e1 webm2pes: Add a WebM parser init method.
    aa3593e webm2pes: Rename Convert to ConvertToFile().
    e8fca12 webm2pes: Fix super frame splitting.
    3cb96b6 webm2pes: Move main() and helper functions into their own files.
    021432b webm2pes: Fix the linux build.
    82ac5fc Remove RELEASE.TXT.
    852e173 webm2pes: Split super frames and packetize large frames.
    faf85c2 webm2pes: Refactor header/optional header writing.
    7c19266 Add Webm2Pes.
    01fdee4 mkvmuxer: Disallow AddTrack() after Tracks element is output.
    1ad314e mkvparser: EBMLHeader::Parse: remove dead init
    
    Change-Id: I4026f52f59c6f7644af49b0393af502079b2fbec

[33mcommit ee35f4dede9bfe50f5461c8c5df6e6a041f98326[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Fri Mar 18 10:25:46 2016 -0700

    Fix some HBD scaling bugs.
    
    Fixed a bug for HBD in stats output and scaling of a threshold
    within the first [1;31mpass[m code.
    
    Change-Id: Icd0463d78cc9ce4661b027b0612c55c0628d212f

[33mcommit f03dfcb11839bcbaa883a065f13072d21317fa33[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Mar 16 11:53:43 2016 -0700

    vp9-svc: Bugfix on usage of svc_force_zeromv in non-rd pickmode.
    
    Only affects 1 [1;31mpass[m cbr svc mode.
    
    Change-Id: Ifc0948b4aabffa64a9701295d8dbc58a7208a30f

[33mcommit 239bf26fde360b150391827850d66aa71c27f913[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Mar 14 12:14:42 2016 -0700

    vp9: Scene cut/content change detection: Adjust gf update.
    
    For 1 [1;31mpass[m vbr mode: Increase the period of gf update on scene
    cut (keep it same as orginal/default setting for now).
    
    Change-Id: I679c3bd21152f6c4e486c8098d931c00e1d26b5f

[33mcommit caa8de547f5860bfbb83626811d631dbf6d2b5d1[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Feb 24 16:16:44 2016 -0800

    vp9 non-rd pickmode. Some adjustments for vbr mode.
    
    Some adjustments to inter-mode selection for vbr mode.
    Condition some of the bias to low/zero motion on cbr mode, and
    don't use int_pro_motion_estimation for golden ref
    (treat it same as last ref).
    
    Change only affect 1 [1;31mpass[m vbr mode, speed >=5 (non-rd pickmode).
    
    Encoding time increase within ~5%.
    Avg PSNR/SSIM on RTC set increase by ~2%, all clips up,
    ranging from 0.5 to 4%.
    
    Change-Id: I0048d0104a8816773d91a2b1484d601169d9bad7

[33mcommit 11bf7ea354cb69755e1f0e1a71351b166ae30677[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 8 16:29:54 2016 -0800

    vp9-svc: Fix to frame dropping in svc mode.
    
    Don't advance the svc frame counters on dropped frame,
    since this can break the referencing scheme and lead
    to a crash/assert.
    
    Updated svc-datarate unittest to add a lower bitrate test.
    
    Change only affects 1 [1;31mpass[m cbr svc, with frame dropper enabled.
    
    Change-Id: Ibb7530b7a587a9344d46898d9286fd9e2ef0779c

[33mcommit 699276e56d7d74e3b7d6f5aeb4f4e9f4085b4826[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Mar 8 11:25:13 2016 -0800

    vp9-svc: Change default spatial bitrate allocation.
    
    Only affects 1 [1;31mpass[m cbr svc.
    
    Change-Id: I8387219e35e516d9ce890557ee1855f2af8f636a

[33mcommit a304d26bf1c55cc389545009e98b2cbbcc9e4edf[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Mar 7 13:43:11 2016 -0800

    vp9-svc: Fix to resetting pattern/flags on key frame.
    
    Chane only affects 1 [1;31mpass[m cbr svc mode.
    
    Change-Id: Ie28557409eb87673ed0b66c6dfe1bf3509a18c4d

[33mcommit c83bcb34741c55535727da8e4b66ec24ecd573a9[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 25 08:38:08 2016 -0800

    vp9-svc: Allow for 2 stage downscaling for spatial layers.
    
    For 1 [1;31mpass[m cbr mode: allow for two-stage 1:2 scaling
    (which will use the 1:2 optimized scaler) if the spatial
    layer is 1/4x1/4 of souce.
    
    Without this change, the base layer for 3 spatial layers would
    be using the non-normative scaler which is un-optimized/C code.
    
    Change-Id: I9d73f92a4a96927d0f1d6bf75315c1e60513226a

[33mcommit 55a09f7f459af7d428077d98ac96376376c0dc42[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jan 20 14:10:26 2016 -0800

    vp9-svc: For 1 [1;31mpass[m svc, remove frame-level upsampling.
    
    With the svc fix in https://chromium-review.googlesource.com/#/c/328978/,
    the asan error is resolved, so this should work now.
    
    Change-Id: I57b2a593651d414e1b445431d90f2fdc3281128b

[33mcommit f51f0998e1ca99cd7497ded3642bb27445b1b215[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 25 08:38:08 2016 -0800

    vp9-svc: Fix speed issue with source downscaling for spatial layers.
    
    For 1 [1;31mpass[m cbr mode: allow for two-stage 1:2 scaling
    (which will use the 1:2 optimized scaler) if the spatial
    layer is 1/4x1/4 of souce.
    
    Without this change, the base layer for 3 spatial layers would
    be using the non-normative scaler which is un-optimized/C code.
    
    Change-Id: Ifcf526ec2aaf3e5fa7924588d9dd8660bf02fb46

[33mcommit 14828e756f92175c1a3c097c1048c01bbfba43a9[m
Author: James Zern <jzern@google.com>
Date:   Wed Feb 24 20:24:51 2016 -0800

    vp9: set kf_max_dist to a reasonable default (128)
    
    the same as vp8, with the same reasoning from:
    2a0d7b1 Reduce the default kf_max_dist to 128.
    
    see also:
    https://trac.ffmpeg.org/ticket/4904
    https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=815673
    
    + restore vpxenc behavior of taking the library default rather than
      forcing 5s
    
    This change also exposes an issue with one-[1;31mpass[m svc in cbr mode, keep
    the old default in datarate_test.cc for now.
    
    Change-Id: Id6d1244f42490b06fefc1a7b4e12a423a1f83e88

[33mcommit ac4c37c6841d4229586b8ca4dda19c9b7f2cdcfe[m
Author: James Zern <jzern@google.com>
Date:   Fri Feb 19 11:05:33 2016 -0800

    vp9/10: fix forced keyframes w/alt-refs enabled
    
    in 1-[1;31mpass[m encodes. issues with 2-[1;31mpass[m as well as other forced flags
    persist.
    
    Change-Id: Ic7ceb906fccea6456d5df96483c10cacd46e01c7

[33mcommit 1cab19e9e4cac95c33120d1256ad6128ba4920b7[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Feb 23 17:49:34 2016 -0800

    vp9: Update to scene/content change detection.
    
    Update some parameters and put check on frame size change.
    For 1 [1;31mpass[m VBR mode, speed >= 5.
    
    Change-Id: If24ed94a21e705ea57d40b9bf235ad079db786fc

[33mcommit a0278cad3f352e4d878f59ecf414f0af2badae8b[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Feb 12 10:29:26 2016 -0800

    vp9 aq-mode=3: Allow it to be used for 1 [1;31mpass[m VBR mode.
    
    Change-Id: I630b8e33106c78382545d49da5fb4c75b1b0b528

[33mcommit 958f372509a7678d787cffeed40e7886a116e27a[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Feb 18 12:16:01 2016 -0800

    vp9: 1 [1;31mpass[m vbr real-time mode: Adjust gf refresh for scene change.
    
    Use the existing scene/content change detection to better
    update/adjust golden frame refresh.
    
    Change only affects 1 [1;31mpass[m real-time vbr mode, speed >=5.
    
    Change-Id: I2963a5bb7ca4a19f8cf8511b0a925e502f60e014

[33mcommit 09f9c5d7f90bd19dfc1994926a6e35680ba9545c[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Feb 17 13:39:44 2016 -0800

    Better workaround for Bug 1089.
    
    Don't initialize first [1;31mpass[m costs for a number of symbols where first
    [1;31mpass[m probabilities aren't initialized.
    
    This brings a 1.22x first [1;31mpass[m speedup.
    
    https://bugs.chromium.org/p/webm/issues/detail?id=1089
    
    Change-Id: I97438c357bd88f52f5a15c697031cf0c3cc8f510

[33mcommit 9b44d9d00fcf015f9a8ab5cde7ee5d62c00a0495[m
Author: James Zern <jzern@google.com>
Date:   Fri Feb 12 18:12:57 2016 -0800

    split vpx_highbd_lpf_horizontal_16 in two
    
    replace with vpx_highbd_lpf_horizontal_edge_16 and
    vpx_highbd_lpf_horizontal_edge_8 to avoid [1;31mpass[ming a count parameter
    
    Change-Id: I551f8cec0fce57032cb2652584bb802e2248644d

[33mcommit 1b519fb666e79f25d93c78d3b90e92e057caa997[m
Author: James Zern <jzern@google.com>
Date:   Fri Feb 12 17:42:34 2016 -0800

    split vpx_lpf_horizontal_16 in two
    
    replace with vpx_lpf_horizontal_edge_16 and vpx_lpf_horizontal_edge_8 to
    avoid [1;31mpass[ming a count parameter
    
    Change-Id: I848c95c02a3c6ebaa6c2bdf0983dce05cd645271

[33mcommit 0ae42ee1bd0e009e63d7ee93adf8759ac330fad8[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Wed Feb 10 11:43:23 2016 -0800

    VP9: Pass NULL scale_factors ptr when not scaling
    
    to vp9_setup_pre_planes(), preventing the function
    unscaled_value() from being called.  unscaled_value()
    returns the same value that was [1;31mpass[med in.  See
    scaled_buffer_offset() in vp9_reconinter.h.
    
    Change-Id: I2a6fbaf07972c2f212834929d29a2cbe72e399c3

[33mcommit f288c943c4d6c3fb03266dee821df797fb99bde0[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 8 10:41:13 2016 -0800

    vp9-dynamic resize: Fix bug on releasing scaled reference.
    
    When the codec frame size is the same as the reference frame size,
    release the scaled reference before assigning it a new buf_idx.
    Only affects 1 [1;31mpass[m non-svc mode, where the scaled references are
    release only under certain conditions (to prevent un-needed scaling
    of the references every frame).
    
    Modified a unittest that can trigger this bug without this change.
    
    https://code.google.com/p/chromium/issues/detail?id=582598
    
    Change-Id: I9a884e36ebd7608b1641ec2a469e20a4f829cf43

[33mcommit ae98a61e2295be1f5ceb95554edcd9ab29fda6d8[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Feb 5 15:43:42 2016 -0800

    vp9-dynamic resize: On a resize trigger frame refresh alt_ref.
    
    For 1 [1;31mpass[m real-time mode. No change in behavior as only last
    and golden are used as references in 1 [1;31mpass[m real-time mode.
    
    Change-Id: Ie4655014eee1a8b271542f29d74b2c6f7fed54c9

[33mcommit 0f7dd403243f35c7d1059fdf9826efef185c189d[m
Author: Zoe Liu <zoeliu@google.com>
Date:   Thu Feb 4 05:33:22 2016 -0800

    Define a macro to replace hardcoded values
    
    The definition is for the number of frames to check to determine the
    recent decay rate, further to determine the next key frame in the
    first [1;31mpass[m of the encoder.
    
    Change-Id: Ic696d6eb518a86fa296842273cf8767ef0b0e27a

[33mcommit 734dc36173769bd0334b58b2173da4ece1ae1cf5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Feb 1 11:52:49 2016 -0800

    vp9: Add flag to control usage of skin detection.
    
    Set off as default; on for 1 [1;31mpass[m cbr mode, speed >=5, non-screen-content.
    
    Change-Id: I03f2497e4028b354fd83b8a7d0e072c2a6bec878

[33mcommit bca1a350c9fbeb55e42ed57c3ef31a8b65e90228[m
Merge: aac1ef7f8 b6f1f369a
Author: Zoe Liu <zoeliu@google.com>
Date:   Fri Jan 29 16:31:41 2016 +0000

    Merge "Cleaned code in first[1;31mpass[m related to altref frame"

[33mcommit b6f1f369af65bd858d646c377ed908fad7f04761[m
Author: Zoe Liu <zoeliu@google.com>
Date:   Thu Jan 28 16:36:22 2016 -0800

    Cleaned code in first[1;31mpass[m related to altref frame
    
    Change-Id: I6dbddf500fd4f64216774685700efea972165470

[33mcommit 9e612763f0eeab6c231afe6a2821ebed529715c9[m
Author: Zoe Liu <zoeliu@google.com>
Date:   Fri Jan 22 17:13:03 2016 -0800

    Cleaned a code in define_gf_group() for first[1;31mpass[m
    
    Change-Id: I0b8eff9e74e3446024482d011ec4fb28b19136d3

[33mcommit be916257bdd9edf114a6e3f4685ee0dc3ac08197[m
Merge: 2ab58d812 78fadcd06
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Fri Jan 22 21:53:26 2016 +0000

    Merge "VP9: Do not set up/left available in vp9_first_[1;31mpass[m()"

[33mcommit 78fadcd063de76f57df40b8ab3ef2530570db516[m
Author: Scott LaVarnway <slavarnway@google.com>
Date:   Fri Jan 22 09:22:53 2016 -0800

    VP9: Do not set up/left available in vp9_first_[1;31mpass[m()
    
    These values are set in set_mi_row_col()
    
    Change-Id: Ie44c9d2dcb79797a8473b5fc29394277a7117547

[33mcommit dbc963a42fa4b3544a0188867561050511d3ad33[m
Author: Marco Paniconi <marpan@google.com>
Date:   Thu Jan 21 15:13:10 2016 -0800

    vp9 pickmode: Fix the shift on negative value.
    
    Error only affected svc 1 [1;31mpass[m mode, introduced in:
    https://chromium-review.googlesource.com/#/c/319609/
    
    Change-Id: Ifc078c82d38b742966a81baaf5ad532f7dbc13a4

[33mcommit f5c07b6803a8a9813692447b1db3f7d1e002b893[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Jan 20 13:51:12 2016 -0800

    vp9-svc: Allow frame-dropping in svc datarate control tests.
    
    Remove comment(s) and enable frame-dropper for tests.
    Frame dropper for 1 [1;31mpass[m svc was fixed a while ago:
    https://chromium-review.googlesource.com/#/c/309230/
    
    Change-Id: I5fd3192825b22e562db9210d3dc7b246a1799d8d

[33mcommit abf58ecf6a74bcabaad180e53694c5c070c72773[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Jan 15 09:35:41 2016 -0800

    Vidyo patch: Changes to the scalability code.
    
    Changes to mode selection for 1 [1;31mpass[m SVC mode:
    use base layer motion vector, changes to intra-prediction.
    
    Change-Id: I3e883aa04db521cfa026a0b12c9478ea35a344c9

[33mcommit ff0107f60dbddec82d7d7feacd1c9a3ff9ab4a51[m
Author: Yunqing Wang <yunqingwang@google.com>
Date:   Wed Jan 6 18:27:37 2016 -0800

    Amend and improve VP8 multithreading implementation
    
    There are flaws in current implementation of VP8 multithreading encoder
    and decoder as reported in the following issue:
    https://code.google.com/p/chromium/issues/detail?id=158922
    
    Although the data race warnings are harmless, and wouldn't cause real
    problems while encoding and decoding videos, it is better to fix the
    warnings so that VP8 code could [1;31mpass[m the TSan test.
    
    To synchronize the thread-shared data access and maintain the speed
    (i.e. decoding speed), use multiple mutexes based on mb_rows to reduce
    the number of synchronizations needed, make the reads and writes of
    the shared data protected, and reduce the number of mb_col writes by
    nsync times.
    
    The decoder speed tests showed < 3% speed loss while using 2 ~ 4
    threads.
    
    Change-Id: Ie296defffcd86a693188b668270d811964227882

[33mcommit e5dfca02a9c15b26a97e58dbf7be37420f1d51b4[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Jan 4 12:19:56 2016 -0800

    vp9-svc: Set initial values for ext_buffer/flag indices.
    
    Set initial values for these parameters in the vp9_init_layer_context().
    
    This also fixes an issue in the svc-by[1;31mpass[m mode when frame flags are
    [1;31mpass[med via the vpx_codec_encode().
    
    Change-Id: I0968f04672f8d3d2fe2cea6b8a23f79f80d7a8b1

[33mcommit eace551c8738b878d3649f70d82dd13ca3a96a29[m
Merge: 12084f6d5 99309004b
Author: Yaowu Xu <yaowu@google.com>
Date:   Tue Dec 15 17:51:33 2015 +0000

    Merge changes Icf9b57c3,I9e12da84,Idf5ee179
    
    * changes:
      Fixed interval, fixed Q 1 [1;31mpass[m test patch.
      1 [1;31mpass[m VBR mode bug fix.
      Fixed interval, fixed Q 1 [1;31mpass[m test patch.

[33mcommit 93c0b879d48dcb3219883743580c22c2278b7779[m
Merge: 9232f69b2 c760c33b9
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Dec 15 16:25:20 2015 +0000

    Merge "SVC 1 [1;31mpass[m mode: Constrain inter mode search within superframe."

[33mcommit a5af49331dda0ed58305a66acd1d85887210af56[m
Merge: b81f04a0c cea5e1c1e
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 15 15:50:05 2015 +0000

    Merge "1 [1;31mpass[m VBR mode bug fix."

[33mcommit 99309004bf349f4d66beb2a90e934fb25855b1e9[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 15 15:23:47 2015 +0000

    Fixed interval, fixed Q 1 [1;31mpass[m test patch.
    
    For testing implemented a fixed pattern and delta, 1 [1;31mpass[m,
    fixed Q, low delay mode.
    
    This has not in any way been tuned or optimized.
    
    Change-Id: Icf9b57c3bb16cc5c0726d5229009212af36eb6d9

[33mcommit 9ce611a764ec41d8580aad8fad49d8266e009b31[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 15 14:53:44 2015 +0000

    1 [1;31mpass[m VBR mode bug fix.
    
    (copied from VP9)
    
    The one [1;31mpass[m VBR mode selects a Q range based on a
    moving average of recent Q values. This calculation
    should have been excluding arf overlay frames as these
    are usually coded at the highest allowed value. Their
    inclusion skews the average and can cause it to drift
    upwards even when the clip as a whole is undershooting.
    
    As such it can undermine correct adaptation of the allowed
    Q range especially for easy content.
    
    Change-Id: I9e12da84e12917e836b6e53ca4dfe4f150b9efb1

[33mcommit fc50d95b2e576ca7a5420a749d93a5755d479ce0[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Mon Dec 14 12:34:25 2015 +0000

    Fixed interval, fixed Q 1 [1;31mpass[m test patch.
    
    For testing implemented a fixed pattern and delta, 1 [1;31mpass[m,
    fixed Q, low delay mode.
    
    This has not in any way been tuned or optimized.
    
    Change-Id: Idf5ee179b277fa15d07a97f14f2ce5bbaae80a04

[33mcommit cea5e1c1e362ea37612346ed1585ae28089c1f45[m
Author: Paul Wilkins <paulwilkins@google.com>
Date:   Tue Dec 15 10:27:51 2015 +0000

    1 [1;31mpass[m VBR mode bug fix.
    
    The one [1;31mpass[m VBR mode selects a Q range based on a
    moving average of recent Q values. This calculation
    should have been excluding arf overlay frames as these
    are usually coded at the highest allowed value. Their
    inclusion skews the average and can cause it to drift
    upwards even when the clip as a whole is undershooting.
    
    As such it can undermine correct adaptation of the allowed
    Q range especially for easy content.
    
    Change-Id: I7d10fe4227262376aa2dc2a7aec0f1fd82bf11f9

[33mcommit c760c33b993c26376631474a54f2f04a58aaf8a2[m
Author: Marco Paniconi <marpan@google.com>
Date:   Mon Dec 7 12:23:56 2015 -0800

    SVC 1 [1;31mpass[m mode: Constrain inter mode search within superframe.
    
    Keep track of frame indexes for the references, and
    constrain inter mode search for reference with same
    temporal alignment.
    
    Improves speed by about ~15%, no noticeable loss in
    compression performance.
    
    Change-Id: I5c407a8acca921234060c4fcef4afd7d734201c8

[33mcommit f70095076b670bca329990cf25d82d5d6f46abc2[m
Author: Deb Mukherjee <debargha@google.com>
Date:   Tue Dec 1 15:12:06 2015 -0800

    Fix a spatial svc test crash
    
    Fixes crash in 2[1;31mpass[m spatial svc test that was introduced in:
    https://chromium-review.googlesource.com/#/c/313571/6
    
    Change-Id: Iab3e8225a8d159cd33f5849dffe6802e25038047

[33mcommit 80a3e2615ae5da48c09a71be6bce106e24c2bcf5[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Nov 20 08:44:19 2015 -0800

    vp9-svc: Fix the setting of is_key_frame.
    
    Change on affects 1 [1;31mpass[m CBR.
    On key frame, temporal layer_id is reset to 0 for 1 [1;31mpass[m CBR,
    but since "layer" is reset, the svc.layer_context[layer].is_key_frame
    was not correspondingly set properly.
    
    Change-Id: I08f6da0a55ac7429ccfbaddfb7be14479e43543b

[33mcommit 006fd192461915b8264e89d42165b15c2e4b7afa[m
Author: Marco Paniconi <marpan@google.com>
Date:   Fri Nov 13 06:20:41 2015 -0800

    Fix resize internal test.
    
    Temporary fix to make sure it always [1;31mpass[mes.
    
    Change-Id: I56a0529986ad7049b6090f871c14e9e06d573d5f

[33mcommit 3c9a424e6e9c70afc2f7586093d440ec3fba7dfe[m
Author: Jacky Chen <jackychen@google.com>
Date:   Mon Nov 9 11:47:26 2015 -0800

    VP9 dynamic resize: increase waiting time after key frame.
    
    For 1 [1;31mpass[m CBR mode: increase waiting time after key frame
    before we start sampling rate control behavior for determining
    resize. This change need to disable one internal resize(DownUp)
    temporally since it requires a longer clip to do so.
    
    Change-Id: If21beda1be23f169ee541ab4dd642f718347887a

[33mcommit 892130f75b30a26537a82c61351694177e8ab5cf[m
Author: James Zern <jzern@google.com>
Date:   Thu Nov 5 15:22:39 2015 -0800

    vp9_spatial_svc_encoder.sh: fix command line param
    
    -l -> -sl, renamed in:
    be3b08d [svc] Temporal svc with two [1;31mpass[m rate control
    
    Change-Id: I5a7b179b33d94e20e54825090659156dece928c0

[33mcommit 989193c797722dd2a37d481ab7cbd01a5d37270f[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Thu Oct 8 16:01:42 2015 -0700

    Make the zero handling in extend_to_full_distribution more explicit.
    
    The old workaround "p = 0 ? 0 : p -1" is misleading.
    
    ?: happens before =
    assigning back to p truncates to one byte.
    
    Therefore it is equivalent to (p - 1) & 0xFF, but the check just exists
    to work around a first [1;31mpass[m bug, so let's make the work around more
    clear.
    
    https://bugs.chromium.org/p/webm/issues/detail?id=1089
    
    Change-Id: I587c44dd61c1f3767543c0126376f881889935af

[33mcommit 9cb73659d565f984e85b3b55b8779ae05b67f168[m
Author: Marco Paniconi <marpan@google.com>
Date:   Wed Oct 28 18:16:24 2015 -0700

    Update to vp9_spatial_svc_encoder.
    
    Some fixes for rate control stats and by[1;31mpass[m mode.
    
    Change-Id: I28bed5467a681b8867cca55852d5d3a25d850f39

[33mcommit 663960e7579d30b46a298f5236324b07daac4799[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Wed Oct 28 11:48:44 2015 -0700

    Revert "Replace the zero handling in extend_to_full_distribution."
    
    This reverts commit 7f56cb29787b187c8cb1b778918ca3b80184c804.
    
    It causes uninitialized reads in the first [1;31mpass[m setting up later cost tables.
    
    Change-Id: I2df498df3f5c03eff359f79edf045aed0c618dc9

[33mcommit 4fb2ba2861fffd8fca7dffbaf761d2bf2998df4f[m
Author: Marco Paniconi <marpan@google.com>
Date:   Tue Oct 27 13:02:02 2015 -0700

    VP9-SVC: Allow frame dropping due to overshoot for spatial layers.
    
    For 1 [1;31mpass[m CBR mode.
    
    Change-Id: I8bceb489a850ec26f05382eecb5c0c32a1bb8883

[33mcommit 7f56cb29787b187c8cb1b778918ca3b80184c804[m
Author: Aℓex Converse <alexconv@twitch.tv>
Date:   Thu Oct 8 16:01:42 2015 -0700

    Replace the zero handling in extend_to_full_distribution.
    
    The old workaround "p = 0 ? 0 : p -1" is misleading.
    
    ?: happens before =
    assigning back to p truncates to one byte.
    
    Therefore it is equivalent to (p - 1) & 0xFF, but the check just exists
    to work around a first [1;31mpass[m bug, so let's make the work around more
    clear.
    
    https://code.google.com/p/webm/issues/detail?id=1089
    
    Change-Id: Ia6dcc8922e1acbac0eeca23a4d564a355c489572
