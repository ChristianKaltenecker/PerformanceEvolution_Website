Searching between v0.3.0 and v0.4.0
Keywords: slow, fast, time, perf(ormance), optim(ize), regression
Additional keywords: quality,compression
Keywords: slow fast time perf optim regression quality compression
For keyword slow:
For keyword fast:
commit 1f01d61bcf887de81ebde28df2958c5e75d82e42
Merge: 27688e6 b4c223c
Author: szabadka <szabadka@users.noreply.github.com>
Date:   Mon Jan 11 13:07:22 2016 +0100

    Merge pull request #295 from szabadka/master
    
    Add two more fast modes to the brotli compressor.

commit 417107b3ddb04cfd4ddfa7592fed0eb886186281
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Mon Jan 11 11:21:42 2016 +0100

    Add two more fast modes to the brotli compressor.
    
    The new modes process the input data in independent blocks,
    using backward references only from within an input block.
    
    The new modes can be used by specifying quality 0 or quality 1,
    the old quality 1 and quality 2 modes are renamed quality 2 and
    quality 3, respectively, and the old quality 3 mode is removed.
For keyword time:
For keyword perf:
For keyword optim:
For keyword regression:
For keyword quality:
commit f453b1bf363be71a23be9d1eec8bf7975dbcfc4e
Merge: cfba2db 846575f
Author: szabadka <szabadka@users.noreply.github.com>
Date:   Wed Mar 16 09:53:56 2016 +0100

    Merge pull request #328 from szabadka/master
    
    Reduce memory usage of brotli encoder at quality 10 and 11.

commit b820c39bd9cf61dc6efd91ad74972540870072b0
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Tue Mar 15 10:50:16 2016 +0100

    Reduce memory usage of brotli encoder at quality 10 and 11.

commit 058d7498a11f19d53d1037df8a4a8e34efc05a4b
Merge: 616e11a dbb53e6
Author: szabadka <szabadka@users.noreply.github.com>
Date:   Wed Jan 27 10:19:19 2016 +0100

    Merge pull request #306 from szabadka/master
    
    Use a hash-to-binary-tree data structure for quality 11 as suggested by Issue #180

commit dbb53e64348af066efcf3dc4a8520f6e577cae27
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Wed Jan 27 09:50:39 2016 +0100

    Use a hash-to-binary-tree data structure for quality 11 as suggested by Issue #180.

commit 417107b3ddb04cfd4ddfa7592fed0eb886186281
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Mon Jan 11 11:21:42 2016 +0100

    Add two more fast modes to the brotli compressor.
    
    The new modes process the input data in independent blocks,
    using backward references only from within an input block.
    
    The new modes can be used by specifying quality 0 or quality 1,
    the old quality 1 and quality 2 modes are renamed quality 2 and
    quality 3, respectively, and the old quality 3 mode is removed.

commit 27688e605cef6f023c6f8ed199344f993b67254c
Merge: 94a1dca 1bf1b0a
Author: szabadka <szabadka@users.noreply.github.com>
Date:   Mon Jan 11 10:28:30 2016 +0100

    Merge pull request #294 from szabadka/master
    
    Faster entropy coding phase for quality 1.

commit 1bf1b0a598d37af90b92ce9e45416974cf476616
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Fri Jan 8 10:10:22 2016 +0100

    Faster entropy coding phase for quality 1.
    
    In quality 1, use static Huffman codes for distance
    and command histograms with <= 128 symbols and dynamic
    Huffman codes with static code length codes for the other
    histograms.

commit 4dd9114c9732d9ac488810e4611fda17c2acd6ce
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Thu Jan 7 17:10:34 2016 +0100

    Partial Hasher initialization for small input data.
    
    This increases compression speed of very small files (< 1KB) for quality <= 3.
For keyword compression:
commit 4dd9114c9732d9ac488810e4611fda17c2acd6ce
Author: Zoltan Szabadka <szabadka@google.com>
Date:   Thu Jan 7 17:10:34 2016 +0100

    Partial Hasher initialization for small input data.
    
    This increases compression speed of very small files (< 1KB) for quality <= 3.
